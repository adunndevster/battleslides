{"version":3,"sources":["webpack:///./src/views/TitleScreen.vue?36c5","webpack:///./node_modules/core-js/modules/es6.array.from.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/core-js/modules/es6.regexp.split.js","webpack:///./node_modules/core-js/modules/es6.string.iterator.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/fbr/FileBufferReader.js","webpack:///./node_modules/core-js/modules/_is-regexp.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/rtcmulticonnection/dist/RTCMultiConnection.js","webpack:///./node_modules/isarray/index.js","webpack:///./src/views/TitleScreen.vue?b98e","webpack:///./src/common/FileSelector.js","webpack:///src/views/TitleScreen.vue","webpack:///./src/views/TitleScreen.vue?08bd","webpack:///./src/views/TitleScreen.vue","webpack:///./node_modules/core-js/modules/_create-property.js","webpack:///./node_modules/process/browser.js"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TitleScreen_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TitleScreen_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","ctx","$export","toObject","call","isArrayIter","toLength","createProperty","getIterFn","S","F","iter","Array","from","arrayLike","length","result","step","iterator","O","C","this","aLen","arguments","mapfn","undefined","mapping","index","iterFn","next","done","value","exports","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","code","i","len","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","isRegExp","anObject","speciesConstructor","advanceStringIndex","callRegExpExec","regexpExec","fails","$min","Math","min","$push","$SPLIT","LENGTH","LAST_INDEX","MAX_UINT32","SUPPORTS_Y","RegExp","defined","SPLIT","$split","maybeCallNative","internalSplit","separator","limit","string","String","match","lastIndex","lastLength","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","splitLimit","separatorCopy","source","slice","apply","test","splitter","regexp","res","rx","unicodeMatching","lim","p","q","A","e","z","$at","iterated","_t","_i","point","dP","f","FProto","Function","prototype","nameRE","NAME","configurable","get","read","buffer","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","pow","write","c","rt","abs","isNaN","floor","log","LN2","Buffer","FileBufferReader","fbr","fbrHelper","FileBufferReaderHelper","chunks","users","readAsArrayBuffer","file","callback","extra","options","earlyCallback","chunk","fbrClone","currentPosition","userid","Object","keys","forEach","key","getNextChunk","fileUUID","uuid","allFileChunks","nextChunk","convertToArrayBuffer","chunkMissing","remoteUserId","onBegin","onEnd","onProgress","maxChunks","fbReceiver","FileBufferReceiver","to","constructor","Date","Number","Boolean","name","addChunk","receive","readyForNextChunk","chunksWaiters","convertToObject","FileConverter","ConvertToObject","ConvertToArrayBuffer","setMultipleUsers","fileReaderWrapper","postMessage","random","toString","replace","chunkSize","numOfChunksInSlice","sliceId","cacheSize","chunksPerSlice","sliceSize","ceil","size","type","lastModifiedDate","blob","reader","FileReader","addChunks","fileName","binarySlice","addChunkCallback","onloadend","evt","target","readyState","DONE","url","URL","createObjectURL","processChunk","FileSelector","selector","noFileSelectedCallback","selectFile","multiple","directory","document","createElement","webkitdirectory","accept","onclick","clickStarted","body","onfocus","setTimeout","onchange","files","console","error","webkitRelativePath","parentNode","removeChild","style","display","documentElement","appendChild","fireClickEvent","element","click","change","createEvent","event","initEvent","dispatchEvent","MouseEvent","view","window","bubbles","cancelable","selectSingleFile","failure","selectMultipleFiles","selectDirectory","chunksObject","chunksArray","item","idx","Blob","merge","looper","object","binarize","pack","dataView","unpack","mergein","mergeto","debug","BIG_ENDIAN","LITTLE_ENDIAN","TYPE_LENGTH","BYTES_PER_ELEMENT","LENGTH_LENGTH","Uint16Array","BYTES_LENGTH","Uint32Array","Types","NULL","UNDEFINED","STRING","NUMBER","BOOLEAN","ARRAY","OBJECT","INT8ARRAY","INT16ARRAY","INT32ARRAY","UINT8ARRAY","UINT16ARRAY","UINT32ARRAY","FLOAT32ARRAY","FLOAT64ARRAY","ARRAYBUFFER","BLOB","FILE","BUFFER","TypeNames","Length","binary_dump","table","endianness","ROW_LENGTH","getUint8","find_type","obj","const_name","const_name_reflection","toUpperCase","Int8Array","Int16Array","Int32Array","Float32Array","Float64Array","ArrayBuffer","serialized","cursor","j","ab","byte_length","header_size","DataView","type_name","unit","setUint8","info","setUint16","setUint32","_view","set","elem","getUint16","getUint32","fromCharCode","getFloat64","mime","val","deferredSerialize","array","results","count","serialize","concat","subarray","deferred","hasOwnProperty","mime_type","onload","onerror","deserialize","Test","isObject","cof","MATCH","module","it","global","base64","ieee754","isArray","typedArraySupport","__proto__","foo","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","TypeError","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","encoding","checked","isEncoding","actual","fromArrayLike","byteOffset","isBuffer","copy","isnan","data","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","buf","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","decodeCodePointsArray","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","defineProperty","allocUnsafeSlow","_isBuffer","compare","a","x","y","list","pos","swap16","swap32","swap64","equals","inspect","str","max","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","MAX_ARGUMENTS_LENGTH","codePoints","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","base64clean","stringtrim","trim","units","leadSurrogate","byteArray","hi","lo","src","dst","process","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","RTCMultiConnection","roomid","forceOptions","browserFakeUserAgent","SocketConnection","connection","connectCallback","isData","session","audio","video","screen","parameters","sessionid","socketMessageEvent","socketCustomEvent","autoCloseEntireSession","broadcast","maxParticipantsAllowed","enableScalableBroadcast","maxRelayLimitPerUser","JSON","stringify","socketCustomParameters","io","sockets","socketURL","enableLogs","location","origin","socket","connect","socketOptions","mPeer","multiPeersHandler","updateExtraBackup","peersBackup","onMessageEvent","message","peers","sender","onExtraDataUpdated","streamSyncNeeded","stream","streamEvents","streamid","action","onstreamended","allParticipants","participant","localPeerSdpConstraints","OfferToReceiveAudio","sdpConstraints","mandatory","OfferToReceiveVideo","remotePeerSdpConstraints","oneway","isOneWay","direction","isDataOnly","newParticipant","createNewPeer","userPreferences","readyForOffer","attachStreams","waitingForLocalMedia","newParticipationRequest","deletePeer","dontGetRemoteStream","dontAttachLocalStream","connectionDescription","successCallback","onNewParticipant","changedUUID","oldUUID","newUUID","userLeft","onUserLeft","leave","addNegotiatedMessage","on","alreadyConnected","resetProps","emit","onSocketDisconnect","onSocketError","onUserStatusChanged","status","onEntireSessionClosed","useridAlreadyTaken","yourNewUserId","onUserIdAlreadyTaken","onNumberOfBroadcastViewersUpdated","isInitiator","MultiPeers","self","skipPeers","initFileBufferReader","onFileProgress","onFileStart","onFileEnd","getLength","numberOfPeers","peer","selectFirst","firstPeer","getAllParticipants","allPeers","callbcak","send","isNull","enableFileSharing","shareFile","remoteUser","channels","channel","createDataChannel","renegotiate","TextSender","text","getLocalConfig","remoteSdp","streamsToShare","rtcMultiConnection","renegotiatingPeer","peerRef","onLocalSdp","localSdp","onNegotiationNeeded","onLocalCandidate","localCandidate","OnIceCandidateHandler","processCandidates","onDataChannelMessage","isLastChunk","promptNextChunk","onDataChannelError","onDataChannelOpened","onDataChannelClosed","onRemoteStream","streams","onGettingRemoteMedia","onRemoteStreamRemoved","onRemovingRemoteMedia","onPeerStateChanged","states","iceConnectionState","onNegotiationStarted","onNegotiationCompleted","search","disconnectWith","enableMedia","setUserPreferences","localConfig","PeerInitiator","createAnsweringPeer","renegotiatePeer","replaceTrack","track","isVideoTrack","getSenders","rtpSender","kind","lastVideoTrack","lastAudioTrack","warn","sdp","addRemoteSdp","candidate","addRemoteCandidate","isAudio","isVideo","isScreen","onReadyForOffer","onGettingLocalMedia","localStream","onLocalMediaError","constraints","onMediaError","arrayOfUsers","DetectRTC","browser","textReceiver","TextReceiver","parse","onclose","onopen","state","getRemoteStreams","fireEvent","eventName","args","CustomEvent","eventDetail","__exposedProps__","setHarkEvents","streamEvent","getTracks","onspeaking","onsilence","hark","onvolumechange","volume","threshold","setMuteHandlers","addEventListener","muteType","onmute","unmuteType","onunmute","getRandomString","crypto","getRandomValues","navigator","userAgent","token","l","getTime","getRMCMediaElement","autoCreateMediaElement","isAudioOnly","mediaElement","srcObject","setAttribute","streamEndedEvent","currentUserMediaRequest","remove","idInstance","StreamsHandler","onSyncNeeded","aStream","newStreamsArray","played","play","cbFired","then","catch","listenEventHandler","eventHandler","removeEventListener","removeNullEntries","newArray","isString","getUserMedia","captureStream","mozCaptureStream","getContext","pause","drawImage","toDataURL","HTMLVideoElement","HTMLMediaElement","protocol","href","hash","width","height","revokeObjectURL","isNodejs","versions","node","version","webkitGetUserMedia","mozGetUserMedia","isMobileDevice","isEdge","msSaveOrOpenBlob","msSaveBlob","isOpera","opera","isFirefox","InstallTrigger","isSafari","isChrome","chrome","isIE","documentMode","getBrowserInfo","appVersion","nameOffset","verOffset","ix","nAgt","browserName","appName","fullVersion","parseFloat","majorVersion","split","substring","isPrivateBrowsing","retry","isDone","currentTrial","maxRetry","isTimeout","id","setInterval","clearInterval","isIE10OrLater","ua","exec","detectPrivateMode","isPrivate","webkitRequestFileSystem","TEMPORARY","indexedDB","db","open","localStorage","setItem","removeItem","isMobile","Android","BlackBerry","iOS","Opera","Windows","any","getOsName","osName","detectDesktopOS","cs","unknown","nVer","os","clientStrings","r","osVersion","getAndroidVersion","osInfo","isCanvasSupportsStreamCapturing","isVideoSupportsStreamCapturing","regexIpv4Local","regexIpv4","regexIpv6","DetectLocalIPAddress","isWebRTCSupported","isPublic","isIpv4","getIPs","ip","getElementById","ipDuplicates","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","iframe","win","contentWindow","peerConfig","optional","RtpDataChannels","servers","iceServers","urls","pc","addStream","addTrack","onicecandidate","handleCandidate","isPromisesSupported","createOffer","setLocalDescription","afterCreateOffer","ipAddress","lines","localDescription","line","MediaDevices","audioInputDevices","audioOutputDevices","videoInputDevices","mediaDevices","enumerateDevices","canEnumerate","MediaStreamTrack","hasMicrophone","hasSpeakers","hasWebcam","isWebsiteHasMicrophonePermissions","isWebsiteHasWebcamPermissions","checkDeviceSupport","getSources","bind","alreadyUsedDevices","devices","_device","device","deviceId","label","isCustomLabel","domain","isORTCSupported","RTCIceGatherer","isScreenCapturingSupported","isNonLocalHost","webAudio","isSupported","isCreateMediaStreamSourceSupported","isAudioContextSupported","isRtpDataChannelsSupported","isSCTPSupportd","isSctpDataChannelsSupported","isGetUserMediaSupported","displayResolution","getAspectRatio","w","h","gcd","displayAspectRatio","toFixed","isWebSocketsSupported","WebSocket","CLOSING","isWebSocketsBlocked","checkWebSocketsSupport","starttime","websocket","onmessage","WebsocketLatency","close","load","isSetSinkIdSupported","isRTPSenderReplaceTracksSupported","isRemoteStreamProcessingSupported","isApplyConstraintsSupported","isMultiMonitorScreenCapturingSupported","MediaStream","webkitMediaStream","cordova","el","attachEvent","attachEventListener","listener","useCapture","isAudioPlusTab","audioPlusTab","filter","t","isUnifiedPlanSupportedDefault","canAddTransceiver","RTCRtpTransceiver","tempPc","addTransceiver","isUnifiedPlanSuppored","isUnifiedPlanSupported","sdpSemantics","config","getConfiguration","setCordovaAPIs","plugins","iosrtc","RTCSessionDescription","RTCIceCandidate","enable","selectAudioOutput","iOSDefaultAudioOutputDevice","registerGlobals","stop","defaults","setSdpConstraints","mozRTCSessionDescription","mozRTCIceCandidate","removeStream","allRemoteStreams","localStreams","iceTransports","candidates","turn","relay","stun","reflexive","host","params","iceTransportPolicy","iceCandidatePoolSize","bundlePolicy","rtcpMuxPolicy","optionalArgument","getReceivers","receiver","getLocalStreams","trickleIce","sdpMid","sdpMLineIndex","beforeAddingStream","oniceconnectionstatechange","onsignalingstatechange","iceGatheringState","signalingState","dontDuplicate","ontrack","onended","onremovestream","streamToShare","onremovetrack","removeTrack","remoteCandidate","addIceCandidate","cb","processSdp","setRemoteDescription","isOfferer","setChannelEvents","binaryType","internalSend","ondatachannel","enableDisableVideoEncoding","rtcp","getParameters","encodings","active","setParameters","createOfferOrAnswer","_method","onSettingLocalDescription","nativeClose","CodecsHandler","preferCodec","codecName","splitLines","videoCodecNumbers","vp8LineNumber","vp9LineNumber","h264LineNumber","preferCodecHelper","codec","ignore","preferCodecNumber","newLine","videoCodecNumbersOriginal","newOrder","codecNumber","removeVPX","disableNACK","prioritize","codecMimeType","codecs","mimeType","unshift","splice","removeNonG722","setBAS","bandwidth","findLine","sdpLines","prefix","findLineInRange","startLine","endLine","realEndLine","getCodecPayloadType","sdpLine","pattern","setVideoBitrates","vp8Payload","xgoogle_min_bitrate","xgoogle_max_bitrate","vp8Index","rtxPayload","rtxIndex","rtxFmtpLineIndex","appendrtxNext","setOpusAttributes","opusPayload","opusIndex","opusFmtpLineIndex","appendOpusNext","stereo","maxaveragebitrate","maxplaybackrate","cbr","useinbandfec","usedtx","maxptime","forceStereoAudio","fmtpLineIndex","extractSdp","payload","setApplicationSpecificBandwidth","preferVP9","BandwidthHandler","icePair","iceRestrictions","iceProtocols","udp","tcp","IceServersHandler","getIceServers","setStreamType","chromeMediaSource","mozMediaSource","mediaSource","getUserMediaHandler","mutex","localMediaConstraints","streaming","isBlackBerry","getUserMediaStream","getUserMediaError","getUserMediaFailure","hints","getUserMediaSuccess","successCB","failureCB","getDisplayMedia","queueRequests","returnBack","shift","currentUserMediaRequestOptions","handleType","setHandlers","syncAction","mute","isSyncAction","enabled","isAudioMuted","unmute","graduallyIncreaseVolume","times","afterEach","setTimeoutInteval","numberOfTimes","startedTimes","content","last","isobject","receivingTime","latency","sendingTime","autoTranslateText","original","Translator","TranslateText","translatedText","initialText","packetSize","textToTransfer","sendText","textMessage","packets","chunkInterval","FileProgressBarHandler","handle","progressHelper","updateLabel","progress","position","innerHTML","div","title","filesContainer","insertBefore","firstChild","querySelector","helper","TranslationHandler","language","googKey","newScript","sourceText","encodeURIComponent","randomNumber","response","translations","getElementsByTagName","getListOfLanguages","xhr","XMLHttpRequest","onreadystatechange","responseText","languages","useDefaultDevices","preventDuplicateOnStreamEvents","connectSocket","socketAutoReConnect","FirebaseConnection","PubNubConnection","joinRoom","mediaConstraints","getStreamInfoForAdmin","password","isRoomJoined","openRoom","identifier","publicRoomIdentifier","isRoomOpened","selectAll","map","tracks","beforeJoin","dontCaptureUserMedia","invokeGetUserMedia","applyConstraints","setStreamEndHandler","muted","onstream","messageToDeliver","transport","openOrJoin","checkPresence","isRoomExist","captureUserMedia","eventObject","onleave","rejoin","onReConnecting","sessionForced","nonScreenSession","onbeforeunload","arg1","dontCloseSocket","closeBeforeUnload","closeSocket","ignoreBeforeUnload","changeUserId","newUserId","facingMode","lastAudioDevice","lastVideoDevice","sourceId","VoiceActivityDetection","DtlsSrtpKeyAgreement","googImprovedWifiBwe","googScreencastMinBitrate","googIPv6","googDscp","googCpuUnderuseThreshold","googCpuOveruseThreshold","googSuspendBelowMinBitrate","googCpuOveruseDetection","disconnect","closeEntireSession","videosContainer","user","gumCallback","streamCallback","videoConstraints","alert","resetTrack","remoteUsersIds","isRemote","alreadySetEndHandler","participantId","acceptParticipationRequest","invokeSelectFileDialog","paused","poster","snapshot","getSocket","skipStreams","local","remote","setCustomSocketEvent","customEvent","getNumberOfBroadcastViewers","broadcastId","numberOfBroadcastViewers","dontWriteLogs","setCustomSocketHandler","customSocketHandler","_roomid","SSEConnection","dontAttachStream","updateExtraData","beforeRemovingStream","isChromeExtensionAvailable","checkIfChromeExtensionAvailable","isFirefoxExtensionAvailable","getChromeExtensionStatus","modifyScreenConstraints","screen_constraints","isOnline","isLowBandwidth","opt","getExtraData","autoOpenOrJoin","resetScreen","setPassword","errors","ROOM_NOT_AVAILABLE","INVALID_PASSWORD","USERID_NOT_AVAILABLE","ROOM_PERMISSION_DENIED","ROOM_FULL","DID_NOT_JOIN_ANY_ROOM","INVALID_SOCKET","PUBLIC_IDENTIFIER_MISSING","INVALID_ADMIN_CREDENTIAL","render","_vm","_h","$createElement","_c","_self","_v","startBattleMode","startPartyMode","_m","staticRenderFns","staticClass","attrs","TitleScreenvue_type_script_lang_js_","mounted","getExternalIceServers","btnSelectFile","setupFileTransfer","joinARoom","roomId","lastSelectedFile","File","previewFile","onFileSelected","fileSelector","room_id","chunk_size","setupWebRTCConnection","fileReceived","logsDiv","connectedWith","doYouWannaReceiveThisFile","yesIWannaReceive","power","requestKeepAwake","appendLog","bytesToSize","incrementOrDecrementUsers","setFileProgressBarHandlers","reload","borderBottom","padding","preventDefault","k","sizes","toPrecision","numberOfUsers","html","color","left","right","zIndex","top","outline","querySelectorAll","maxWidth","fileNameMatches","textAlign","background","GameSettings","Images","stopPropagation","dataTransfer","dropEffect","methods","SetupBattleModeGame","router","SetupPartyModeGame","views_TitleScreenvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","$defineProperty","createDesc","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","Item","noop","nextTick","env","argv","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask"],"mappings":"kIAAA,IAAAA,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAA+cE,EAAG,uCCCld,IAAAE,EAAUH,EAAQ,QAClBI,EAAcJ,EAAQ,QACtBK,EAAeL,EAAQ,QACvBM,EAAWN,EAAQ,QACnBO,EAAkBP,EAAQ,QAC1BQ,EAAeR,EAAQ,QACvBS,EAAqBT,EAAQ,QAC7BU,EAAgBV,EAAQ,QAExBI,IAAAO,EAAAP,EAAAQ,GAAiCZ,EAAQ,OAARA,CAAwB,SAAAa,GAAmBC,MAAAC,KAAAF,KAAoB,SAEhGE,KAAA,SAAAC,GACA,IAOAC,EAAAC,EAAAC,EAAAC,EAPAC,EAAAhB,EAAAW,GACAM,EAAA,mBAAAC,UAAAT,MACAU,EAAAC,UAAAR,OACAS,EAAAF,EAAA,EAAAC,UAAA,QAAAE,EACAC,OAAAD,IAAAD,EACAG,EAAA,EACAC,EAAApB,EAAAW,GAIA,GAFAO,IAAAF,EAAAvB,EAAAuB,EAAAF,EAAA,EAAAC,UAAA,QAAAE,EAAA,SAEAA,GAAAG,GAAAR,GAAAR,OAAAP,EAAAuB,GAMA,IADAb,EAAAT,EAAAa,EAAAJ,QACAC,EAAA,IAAAI,EAAAL,GAAkCA,EAAAY,EAAgBA,IAClDpB,EAAAS,EAAAW,EAAAD,EAAAF,EAAAL,EAAAQ,MAAAR,EAAAQ,SANA,IAAAT,EAAAU,EAAAxB,KAAAe,GAAAH,EAAA,IAAAI,IAAuDH,EAAAC,EAAAW,QAAAC,KAAgCH,IACvFpB,EAAAS,EAAAW,EAAAD,EAAAtB,EAAAc,EAAAM,EAAA,CAAAP,EAAAc,MAAAJ,IAAA,GAAAV,EAAAc,OASA,OADAf,EAAAD,OAAAY,EACAX,0CChCAgB,EAAAC,aACAD,EAAAE,cACAF,EAAAG,gBAOA,IALA,IAAAC,EAAA,GACAC,EAAA,GACAC,EAAA,qBAAAC,sBAAA3B,MAEA4B,EAAA,mEACAC,EAAA,EAAAC,EAAAF,EAAAzB,OAAkC0B,EAAAC,IAASD,EAC3CL,EAAAK,GAAAD,EAAAC,GACAJ,EAAAG,EAAAG,WAAAF,MAQA,SAAAG,EAAAC,GACA,IAAAH,EAAAG,EAAA9B,OAEA,GAAA2B,EAAA,IACA,UAAAI,MAAA,kDAKA,IAAAC,EAAAF,EAAAG,QAAA,MACA,IAAAD,MAAAL,GAEA,IAAAO,EAAAF,IAAAL,EACA,EACA,EAAAK,EAAA,EAEA,OAAAA,EAAAE,GAIA,SAAAhB,EAAAY,GACA,IAAAK,EAAAN,EAAAC,GACAE,EAAAG,EAAA,GACAD,EAAAC,EAAA,GACA,UAAAH,EAAAE,GAAA,EAAAA,EAGA,SAAAE,EAAAN,EAAAE,EAAAE,GACA,UAAAF,EAAAE,GAAA,EAAAA,EAGA,SAAAf,EAAAW,GAeA,IAdA,IAAAO,EACAF,EAAAN,EAAAC,GACAE,EAAAG,EAAA,GACAD,EAAAC,EAAA,GAEAG,EAAA,IAAAf,EAAAa,EAAAN,EAAAE,EAAAE,IAEAK,EAAA,EAGAZ,EAAAO,EAAA,EACAF,EAAA,EACAA,EAEAN,EAAA,EAAiBA,EAAAC,EAASD,GAAA,EAC1BW,EACAf,EAAAQ,EAAAF,WAAAF,KAAA,GACAJ,EAAAQ,EAAAF,WAAAF,EAAA,QACAJ,EAAAQ,EAAAF,WAAAF,EAAA,OACAJ,EAAAQ,EAAAF,WAAAF,EAAA,IACAY,EAAAC,KAAAF,GAAA,OACAC,EAAAC,KAAAF,GAAA,MACAC,EAAAC,KAAA,IAAAF,EAmBA,OAhBA,IAAAH,IACAG,EACAf,EAAAQ,EAAAF,WAAAF,KAAA,EACAJ,EAAAQ,EAAAF,WAAAF,EAAA,OACAY,EAAAC,KAAA,IAAAF,GAGA,IAAAH,IACAG,EACAf,EAAAQ,EAAAF,WAAAF,KAAA,GACAJ,EAAAQ,EAAAF,WAAAF,EAAA,OACAJ,EAAAQ,EAAAF,WAAAF,EAAA,OACAY,EAAAC,KAAAF,GAAA,MACAC,EAAAC,KAAA,IAAAF,GAGAC,EAGA,SAAAE,EAAAC,GACA,OAAApB,EAAAoB,GAAA,OACApB,EAAAoB,GAAA,OACApB,EAAAoB,GAAA,MACApB,EAAA,GAAAoB,GAGA,SAAAC,EAAAC,EAAAC,EAAAC,GAGA,IAFA,IAAAR,EACAS,EAAA,GACApB,EAAAkB,EAAqBlB,EAAAmB,EAASnB,GAAA,EAC9BW,GACAM,EAAAjB,IAAA,cACAiB,EAAAjB,EAAA,cACA,IAAAiB,EAAAjB,EAAA,IACAoB,EAAAC,KAAAP,EAAAH,IAEA,OAAAS,EAAAE,KAAA,IAGA,SAAA5B,EAAAuB,GAQA,IAPA,IAAAN,EACAV,EAAAgB,EAAA3C,OACAiD,EAAAtB,EAAA,EACAuB,EAAA,GACAC,EAAA,MAGAzB,EAAA,EAAA0B,EAAAzB,EAAAsB,EAA0CvB,EAAA0B,EAAU1B,GAAAyB,EACpDD,EAAAH,KAAAL,EACAC,EAAAjB,IAAAyB,EAAAC,IAAA1B,EAAAyB,IAsBA,OAjBA,IAAAF,GACAZ,EAAAM,EAAAhB,EAAA,GACAuB,EAAAH,KACA1B,EAAAgB,GAAA,GACAhB,EAAAgB,GAAA,MACA,OAEG,IAAAY,IACHZ,GAAAM,EAAAhB,EAAA,OAAAgB,EAAAhB,EAAA,GACAuB,EAAAH,KACA1B,EAAAgB,GAAA,IACAhB,EAAAgB,GAAA,MACAhB,EAAAgB,GAAA,MACA,MAIAa,EAAAF,KAAA,IAnIA1B,EAAA,IAAAM,WAAA,OACAN,EAAA,IAAAM,WAAA,4CCjBA,IAAAyB,EAAetE,EAAQ,QACvBuE,EAAevE,EAAQ,QACvBwE,EAAyBxE,EAAQ,QACjCyE,EAAyBzE,EAAQ,QACjCQ,EAAeR,EAAQ,QACvB0E,EAAqB1E,EAAQ,QAC7B2E,EAAiB3E,EAAQ,QACzB4E,EAAY5E,EAAQ,QACpB6E,EAAAC,KAAAC,IACAC,EAAA,GAAAhB,KACAiB,EAAA,QACAC,EAAA,SACAC,EAAA,YACAC,EAAA,WAGAC,GAAAT,EAAA,WAAqCU,OAAAF,EAAA,OAGrCpF,EAAQ,OAARA,CAAuB,mBAAAuF,EAAAC,EAAAC,EAAAC,GACvB,IAAAC,EAkDA,OAxCAA,EARA,YAAAV,GAAA,YACA,UAAAA,GAAA,WAAAC,IACA,QAAAD,GAAA,WAAAC,IACA,OAAAD,GAAA,YAAAC,IACA,IAAAD,GAAA,QAAAC,GAAA,GACA,GAAAD,GAAA,MAAAC,GAGA,SAAAU,EAAAC,GACA,IAAAC,EAAAC,OAAAxE,MACA,QAAAI,IAAAiE,GAAA,IAAAC,EAAA,SAEA,IAAAvB,EAAAsB,GAAA,OAAAH,EAAAnF,KAAAwF,EAAAF,EAAAC,GACA,IASAG,EAAAC,EAAAC,EATAnC,EAAA,GACAoC,GAAAP,EAAAQ,WAAA,SACAR,EAAAS,UAAA,SACAT,EAAAU,QAAA,SACAV,EAAAW,OAAA,QACAC,EAAA,EACAC,OAAA9E,IAAAkE,EAAAT,EAAAS,IAAA,EAEAa,EAAA,IAAApB,OAAAM,EAAAe,OAAAR,EAAA,KAEA,MAAAH,EAAArB,EAAArE,KAAAoG,EAAAZ,GAAA,CAEA,GADAG,EAAAS,EAAAvB,GACAc,EAAAO,IACAzC,EAAAC,KAAA8B,EAAAc,MAAAJ,EAAAR,EAAAnE,QACAmE,EAAAd,GAAA,GAAAc,EAAAnE,MAAAiE,EAAAZ,IAAAF,EAAA6B,MAAA9C,EAAAiC,EAAAY,MAAA,IACAV,EAAAF,EAAA,GAAAd,GACAsB,EAAAP,EACAlC,EAAAmB,IAAAuB,GAAA,MAEAC,EAAAvB,KAAAa,EAAAnE,OAAA6E,EAAAvB,KAKA,OAHAqB,IAAAV,EAAAZ,IACAgB,GAAAQ,EAAAI,KAAA,KAAA/C,EAAAC,KAAA,IACOD,EAAAC,KAAA8B,EAAAc,MAAAJ,IACPzC,EAAAmB,GAAAuB,EAAA1C,EAAA6C,MAAA,EAAAH,GAAA1C,GAGG,IAAAkB,QAAAtD,EAAA,GAAAuD,GACH,SAAAU,EAAAC,GACA,YAAAlE,IAAAiE,GAAA,IAAAC,EAAA,GAAAJ,EAAAnF,KAAAiB,KAAAqE,EAAAC,IAGAJ,EAGA,CAGA,SAAAG,EAAAC,GACA,IAAAxE,EAAAkE,EAAAhE,MACAwF,OAAApF,GAAAiE,OAAAjE,EAAAiE,EAAAJ,GACA,YAAA7D,IAAAoF,EACAA,EAAAzG,KAAAsF,EAAAvE,EAAAwE,GACAF,EAAArF,KAAAyF,OAAA1E,GAAAuE,EAAAC,IAOA,SAAAmB,EAAAnB,GACA,IAAAoB,EAAAvB,EAAAC,EAAAqB,EAAAzF,KAAAsE,EAAAF,IAAAF,GACA,GAAAwB,EAAAjF,KAAA,OAAAiF,EAAAhF,MAEA,IAAAiF,EAAA3C,EAAAyC,GACArG,EAAAoF,OAAAxE,MACAD,EAAAkD,EAAA0C,EAAA5B,QAEA6B,EAAAD,EAAAZ,QACAH,GAAAe,EAAAd,WAAA,SACAc,EAAAb,UAAA,SACAa,EAAAZ,QAAA,SACAjB,EAAA,SAIA0B,EAAA,IAAAzF,EAAA+D,EAAA6B,EAAA,OAAAA,EAAAP,OAAA,IAAAR,GACAiB,OAAAzF,IAAAkE,EAAAT,EAAAS,IAAA,EACA,OAAAuB,EAAA,SACA,OAAAzG,EAAAM,OAAA,cAAAyD,EAAAqC,EAAApG,GAAA,CAAAA,GAAA,GACA,IAAA0G,EAAA,EACAC,EAAA,EACAC,EAAA,GACA,MAAAD,EAAA3G,EAAAM,OAAA,CACA8F,EAAAd,UAAAZ,EAAAiC,EAAA,EACA,IACAE,EADAC,EAAA/C,EAAAqC,EAAA1B,EAAA1E,IAAAiG,MAAAU,IAEA,GACA,OAAAG,IACAD,EAAA3C,EAAArE,EAAAuG,EAAAd,WAAAZ,EAAA,EAAAiC,IAAA3G,EAAAM,WAAAoG,EAEAC,EAAA7C,EAAA9D,EAAA2G,EAAAH,OACS,CAET,GADAI,EAAAvD,KAAArD,EAAAiG,MAAAS,EAAAC,IACAC,EAAAtG,SAAAmG,EAAA,OAAAG,EACA,QAAA5E,EAAA,EAAyBA,GAAA8E,EAAAxG,OAAA,EAAmB0B,IAE5C,GADA4E,EAAAvD,KAAAyD,EAAA9E,IACA4E,EAAAtG,SAAAmG,EAAA,OAAAG,EAEAD,EAAAD,EAAAG,GAIA,OADAD,EAAAvD,KAAArD,EAAAiG,MAAAS,IACAE,2CCjIA,IAAAG,EAAU1H,EAAQ,OAARA,EAAsB,GAGhCA,EAAQ,OAARA,CAAwB+F,OAAA,kBAAA4B,GACxBpG,KAAAqG,GAAA7B,OAAA4B,GACApG,KAAAsG,GAAA,GAEC,WACD,IAEAC,EAFAzG,EAAAE,KAAAqG,GACA/F,EAAAN,KAAAsG,GAEA,OAAAhG,GAAAR,EAAAJ,OAAA,CAAiCgB,WAAAN,EAAAK,MAAA,IACjC8F,EAAAJ,EAAArG,EAAAQ,GACAN,KAAAsG,IAAAC,EAAA7G,OACA,CAAUgB,MAAA6F,EAAA9F,MAAA,8BCfV,IAAA+F,EAAS/H,EAAQ,QAAcgI,EAC/BC,EAAAC,SAAAC,UACAC,EAAA,wBACAC,EAAA,OAGAA,KAAAJ,GAAkBjI,EAAQ,SAAgB+H,EAAAE,EAAAI,EAAA,CAC1CC,cAAA,EACAC,IAAA,WACA,IACA,UAAAhH,MAAAyE,MAAAoC,GAAA,GACK,MAAAZ,GACL,iCCZAtF,EAAAsG,KAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAArB,EAAAsB,EACAC,EAAA,EAAAF,EAAAD,EAAA,EACAI,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAE,GAAA,EACAvG,EAAAgG,EAAAE,EAAA,IACAM,EAAAR,GAAA,IACAS,EAAAX,EAAAC,EAAA/F,GAOA,IALAA,GAAAwG,EAEA3B,EAAA4B,GAAA,IAAAF,GAAA,EACAE,KAAAF,EACAA,GAAAH,EACQG,EAAA,EAAW1B,EAAA,IAAAA,EAAAiB,EAAAC,EAAA/F,MAAAwG,EAAAD,GAAA,GAKnB,IAHAJ,EAAAtB,GAAA,IAAA0B,GAAA,EACA1B,KAAA0B,EACAA,GAAAN,EACQM,EAAA,EAAWJ,EAAA,IAAAA,EAAAL,EAAAC,EAAA/F,MAAAwG,EAAAD,GAAA,GAEnB,OAAA1B,EACAA,EAAA,EAAAyB,MACG,IAAAzB,IAAAwB,EACH,OAAAF,EAAAO,IAAAC,KAAAF,GAAA,KAEAN,GAAAhE,KAAAyE,IAAA,EAAAX,GACApB,GAAAyB,EAEA,OAAAG,GAAA,KAAAN,EAAAhE,KAAAyE,IAAA,EAAA/B,EAAAoB,IAGA1G,EAAAsH,MAAA,SAAAf,EAAAxG,EAAAyG,EAAAC,EAAAC,EAAAC,GACA,IAAArB,EAAAsB,EAAAW,EACAV,EAAA,EAAAF,EAAAD,EAAA,EACAI,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAU,EAAA,KAAAd,EAAA9D,KAAAyE,IAAA,OAAAzE,KAAAyE,IAAA,SACA5G,EAAAgG,EAAA,EAAAE,EAAA,EACAM,EAAAR,EAAA,KACAS,EAAAnH,EAAA,OAAAA,GAAA,EAAAA,EAAA,MAmCA,IAjCAA,EAAA6C,KAAA6E,IAAA1H,GAEA2H,MAAA3H,QAAAqH,KACAR,EAAAc,MAAA3H,GAAA,IACAuF,EAAAwB,IAEAxB,EAAA1C,KAAA+E,MAAA/E,KAAAgF,IAAA7H,GAAA6C,KAAAiF,KACA9H,GAAAwH,EAAA3E,KAAAyE,IAAA,GAAA/B,IAAA,IACAA,IACAiC,GAAA,GAGAxH,GADAuF,EAAAyB,GAAA,EACAS,EAAAD,EAEAC,EAAA5E,KAAAyE,IAAA,IAAAN,GAEAhH,EAAAwH,GAAA,IACAjC,IACAiC,GAAA,GAGAjC,EAAAyB,GAAAD,GACAF,EAAA,EACAtB,EAAAwB,GACKxB,EAAAyB,GAAA,GACLH,GAAA7G,EAAAwH,EAAA,GAAA3E,KAAAyE,IAAA,EAAAX,GACApB,GAAAyB,IAEAH,EAAA7G,EAAA6C,KAAAyE,IAAA,EAAAN,EAAA,GAAAnE,KAAAyE,IAAA,EAAAX,GACApB,EAAA,IAIQoB,GAAA,EAAWH,EAAAC,EAAA/F,GAAA,IAAAmG,EAAAnG,GAAAwG,EAAAL,GAAA,IAAAF,GAAA,GAInB,IAFApB,KAAAoB,EAAAE,EACAC,GAAAH,EACQG,EAAA,EAAUN,EAAAC,EAAA/F,GAAA,IAAA6E,EAAA7E,GAAAwG,EAAA3B,GAAA,IAAAuB,GAAA,GAElBN,EAAAC,EAAA/F,EAAAwG,IAAA,IAAAC,yCClFA,SAAAY,IAcA,WAEA,SAAAC,IACA,IAAAC,EAAA3I,KACA4I,EAAA,IAAAC,EAEAF,EAAAG,OAAA,GACAH,EAAAI,MAAA,GAEAJ,EAAAK,kBAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,CACAH,OACAI,cAAA,SAAAC,GACAJ,EAAAK,EAAAD,EAAA,CACAE,iBAAA,MAGAL,SAAA,CACAM,OAAA,IAIAR,EAAAE,OAAAO,OAAAC,KAAAV,EAAAE,OAAAzJ,QACAgK,OAAAC,KAAAV,EAAAE,OAAAS,QAAA,SAAAC,GACAT,EAAAD,MAAAU,GAAAZ,EAAAE,MAAAU,KAIAjB,EAAAI,kBAAAL,EAAAS,IAGAT,EAAAmB,aAAA,SAAAC,EAAAb,EAAAO,GACA,IAAAD,EAEA,qBAAAO,EAAAP,kBACAA,EAAAO,EAAAP,gBACAO,IAAAC,MAGA,IAAAC,EAAAtB,EAAAG,OAAAiB,GACA,GAAAE,EAAA,CAIA,qBAAAR,GACAd,EAAAI,MAAAU,EAAA,MACAd,EAAAI,MAAAU,EAAA,KACAM,WACAN,SACAD,iBAAA,IAIA,qBAAAA,IACAb,EAAAI,MAAAU,EAAA,IAAAD,mBAGAb,EAAAI,MAAAU,EAAA,IAAAD,kBACAA,EAAAb,EAAAI,MAAAU,EAAA,IAAAD,kBAEA,qBAAAA,IACAb,EAAAG,OAAAiB,GAAAP,mBAGAb,EAAAG,OAAAiB,GAAAP,kBACAA,EAAAb,EAAAG,OAAAiB,GAAAP,iBAGA,IAAAU,EAAAD,EAAAT,GACA,IAAAU,EAOA,cANAvB,EAAAG,OAAAiB,QACApB,EAAAwB,qBAAA,CACAC,cAAA,EACAZ,kBACAQ,KAAAD,GACiBb,GAIjBgB,EAAAX,EAAAW,GAEA,qBAAAT,IACAS,EAAAG,aAAAZ,EAAA,IAGAS,EAAA5H,OACAqG,EAAA2B,QAAAJ,GAGAA,EAAA3H,KACAoG,EAAA4B,MAAAL,GAGAvB,EAAA6B,WAAAN,GAEAvB,EAAAwB,qBAAAD,EAAA,SAAAhD,GACAgD,EAAAV,iBAAAU,EAAAO,UAKAvB,EAAAhC,GAAA,GAJAgC,EAAAhC,GAAA,OAQA,IAAAwD,EAAA,IAAAC,EAAAhC,GAgCA,SAAAY,EAAA/J,EAAAoL,GACA,SAAApL,GAAA,iBAAAA,EAAA,OAAAA,EACA,GAAAA,EAAAqL,aAAAnB,QAAAlK,EAAAqL,aAAAtL,MAAA,OAAAC,EACA,GAAAA,EAAAqL,aAAAC,MAAAtL,EAAAqL,aAAA9G,QAAAvE,EAAAqL,aAAAlE,UACAnH,EAAAqL,aAAArG,QAAAhF,EAAAqL,aAAAE,QAAAvL,EAAAqL,aAAAG,QACA,WAAAxL,EAAAqL,YAAArL,GAIA,QAAAyL,KAFAL,KAAA,IAAApL,EAAAqL,YAEArL,EACAoL,EAAAK,GAAA,oBAAAL,EAAAK,GAAA1B,EAAA/J,EAAAyL,GAAA,MAAAL,EAAAK,GAGA,OAAAL,EA3CAjC,EAAAuC,SAAA,SAAA5B,EAAAJ,GACAI,GAIAoB,EAAAS,QAAA7B,EAAA,SAAAA,GACAX,EAAAwB,qBAAA,CACAiB,mBAAA,EACA5B,gBAAAF,EAAAE,gBACAQ,KAAAV,EAAAU,MACiBd,MAIjBP,EAAAyB,aAAA,SAAAd,UACAoB,EAAA5B,OAAAQ,EAAAU,aACAU,EAAAW,cAAA/B,EAAAU,OAGArB,EAAA2B,QAAA,aACA3B,EAAA4B,MAAA,aACA5B,EAAA6B,WAAA,aAEA7B,EAAA2C,gBAAAC,EAAAC,gBACA7C,EAAAwB,qBAAAoB,EAAAE,qBAGA9C,EAAA+C,iBAAA,aAoBA,SAAA7C,IACA,IAAAD,EAAA5I,KAyDA,SAAA2L,EAAAvC,EAAAF,GACAA,KAAA,SAAAI,GACAsC,YAAAtC,IAGA,IAAAL,EAAAG,EAAAH,KACAA,EAAAe,OACAf,EAAAe,MAAA,IAAAzG,KAAAsI,UAAAC,WAAAC,QAAA,WAGA,IAAAC,EAAA5C,EAAA4C,WAAA,KACA5C,EAAAD,OAAAC,EAAAD,MAAA6C,YACAA,EAAA5C,EAAAD,MAAA6C,WAGA,IASAC,EATAC,EAAA,EACAC,EAAAH,EAEAI,EAAA7I,KAAA+E,MAAA/E,KAAAC,IAAA,IAAA2I,GAAAH,GACAK,EAAAD,EAAAJ,EACAvB,EAAAlH,KAAA+I,KAAArD,EAAAsD,KAAAP,GAEA/C,EAAAwB,YAGA,IAAAjB,EAAA,EAEAV,EAAA,GAEAI,EAAA,CACAM,kBACAQ,KAAAf,EAAAe,KACAS,YACA8B,KAAAtD,EAAAsD,KACAtB,KAAAhC,EAAAgC,KACAuB,KAAAvD,EAAAuD,KACAC,kBAAAxD,EAAAwD,kBAAA,IAAA3B,MAAAgB,WACAxJ,OAAA,IAGA,IAAAoK,EAAAC,EAAA,IAAAC,WAmCA,SAAAC,EAAAC,EAAAC,EAAAC,GACAf,EAAA1I,KAAA+I,KAAAS,EAAAnM,WAAAoL,GACA,QAAA5K,EAAA,EAA+BA,EAAA6K,EAAwB7K,IAAA,CACvD,IAAAkB,EAAAlB,EAAA4K,EACAlD,EAAAU,GAAAuD,EAAA1H,MAAA/C,EAAAiB,KAAAC,IAAAlB,EAAA0J,EAAAe,EAAAnM,aAEAsI,EAAA,CACAc,KAAAf,EAAAe,KACA9C,OAAA4B,EAAAU,GACAA,kBACAiB,YAEA8B,KAAAtD,EAAAsD,KACAtB,KAAAhC,EAAAgC,KACAwB,kBAAAxD,EAAAwD,kBAAA,IAAA3B,MAAAgB,WACAU,KAAAvD,EAAAuD,OAGAhD,IAGAA,GAAAiB,IACA,EAGAuC,IA1DAL,EAAAM,UAAA,SAAAC,GACAA,EAAAC,OAAAC,YAAAR,WAAAS,MACAR,EAAA5D,EAAAgC,KAAAiC,EAAAC,OAAAxN,OAAA,WACAuM,KACAA,EAAA,GAAAG,EAAApD,EAAAsD,MACAG,EAAAzD,EAAA5D,MAAA6G,EAAAG,GAAAH,EAAA,GAAAG,GACAM,EAAA3D,kBAAA0D,IACyBR,EAAAG,EAAApD,EAAAsD,MACzBG,EAAAzD,EAAA5D,MAAA6G,EAAAG,EAAApD,EAAAsD,MACAI,EAAA3D,kBAAA0D,KAEAzD,EAAAqE,IAAAC,IAAAC,gBAAAvE,GACAC,EAAA,CACAM,kBACAQ,KAAAf,EAAAe,KACAS,YACA8B,KAAAtD,EAAAsD,KACAtB,KAAAhC,EAAAgC,KACAwB,kBAAAxD,EAAAwD,kBAAA,IAAA3B,MAAAgB,WACAwB,IAAAC,IAAAC,gBAAAvE,GACAuD,KAAAvD,EAAAuD,KACAjK,KAAA,QAOAiH,GAAA,EAEAkD,EAAAzD,EAAA5D,MAAA6G,EAAAG,GAAAH,EAAA,GAAAG,GACAM,EAAA3D,kBAAA0D,GArHA9D,EAAAI,kBAAA,SAAAL,EAAAS,GACA,IAAAC,EAAAD,EAAAC,cAGA,SAAAoE,EAAAnE,GACAX,EAAAG,OAAAQ,EAAAU,QACArB,EAAAG,OAAAQ,EAAAU,MAAA,CACAR,iBAAA,IAIAJ,EAAAD,MAAAC,EAAAD,OAAA,CACAM,OAAA,GAGAH,EAAAG,OAAAL,EAAAK,QAAAL,EAAAD,MAAAM,QAAA,EACAH,EAAAH,MAAAC,EAAAD,MAEAR,EAAAG,OAAAQ,EAAAU,MAAAV,EAAAE,iBAAAF,EAEAA,EAAA/G,KAAA8G,IACAA,EAAAC,EAAAU,MACAX,EAAA,MAIAC,EAAAmB,UAAA,UAAAnB,EAAAE,iBAAAH,IACAA,EAAAC,EAAAU,MACAX,EAAA,aA1BAD,EAAAC,cAsCAsC,EAAAvC,EAAAqE,IA6GA,SAAAC,IACA,IAAAC,EAAA3N,KAEA4N,EAAA,aA0BA,SAAAC,EAAA3E,EAAA4E,EAAAC,GACA7E,KAAA,aAEA,IAAAD,EAAA+E,SAAAC,cAAA,SACAhF,EAAAuD,KAAA,OAEAsB,IACA7E,EAAA6E,UAAA,GAGAC,IACA9E,EAAAiF,iBAAA,GAGAjF,EAAAkF,OAAAR,EAAAQ,OAEAlF,EAAAmF,QAAA,WACAnF,EAAAoF,cAAA,GAGAL,SAAAM,KAAAC,QAAA,WACAC,WAAA,WACAvF,EAAAoF,eACApF,EAAAoF,cAAA,EAEApF,EAAAvI,OACAkN,MAEiB,MAGjB3E,EAAAwF,SAAA,WACA,GAAAX,EAAA,CACA,IAAA7E,EAAAyF,MAAAhP,OAEA,YADAiP,QAAAC,MAAA,qBAIA,IAAA5M,EAAA,GAMA,OALAzC,MAAAC,KAAAyJ,EAAAyF,OAAA9E,QAAA,SAAAX,GACAA,EAAAqE,IAAArE,EAAA4F,mBACA7M,EAAAS,KAAAwG,UAEAC,EAAAlH,GAIAiH,EAAAyF,MAAA,IAKAxF,EAAAD,EAAAyF,MAAA,IAEAzF,EAAA6F,WAAAC,YAAA9F,IANA0F,QAAAC,MAAA,sBAQA3F,EAAA+F,MAAAC,QAAA,QACAjB,SAAAM,MAAAN,SAAAkB,iBAAAC,YAAAlG,GACAmG,EAAAnG,GAgBA,SAAAmG,EAAAC,GACA,uBAAAA,EAAAC,MAKA,uBAAAD,EAAAE,OAAA,CAKA,wBAAAvB,SAAAwB,YAAA,UACA,IAAAC,EAAAzB,SAAAwB,YAAA,SAEA,uBAAAC,EAAAC,WAAA,oBAAAL,EAAAM,cAGA,OAFAF,EAAAC,UAAA,oBACAL,EAAAM,cAAAF,GAKAA,EAAA,IAAAG,WAAA,SACAC,KAAAC,OACAC,SAAA,EACAC,YAAA,IAGAX,EAAAM,cAAAF,QApBAJ,EAAAE,cALAF,EAAAC,QApGA3B,EAAAsC,iBAAA,SAAA/G,EAAAgH,GACAA,IACAtC,EAAAsC,GAGArC,EAAA3E,IAEAyE,EAAAwC,oBAAA,SAAAjH,EAAAgH,GACAA,IACAtC,EAAAsC,GAGArC,EAAA3E,GAAA,IAEAyE,EAAAyC,gBAAA,SAAAlH,EAAAgH,GACAA,IACAtC,EAAAsC,GAGArC,EAAA3E,GAAA,OAGAyE,EAAAQ,OAAA,MA2GA,SAAAxD,EAAAhC,GACA,IAAA+B,EAAA1K,KAKA,SAAAmL,EAAA7B,EAAAJ,GACA,GAAAI,EAAAU,KAAA,CAgBA,GATAV,EAAAhH,QAAAoI,EAAA5B,OAAAQ,EAAAU,QACAU,EAAA5B,OAAAQ,EAAAU,MAAA,GACArB,EAAA2B,SAAA3B,EAAA2B,QAAAhB,KAGAA,EAAA/G,KAAA+G,EAAApC,SACAwD,EAAA5B,OAAAQ,EAAAU,MAAAV,EAAAE,iBAAAF,EAAApC,QAGAoC,EAAA/G,IAAA,CACA,IAAA8N,EAAA3F,EAAA5B,OAAAQ,EAAAU,MACAsG,EAAA,GACA5G,OAAAC,KAAA0G,GAAAzG,QAAA,SAAA2G,EAAAC,GACAF,EAAA7N,KAAA4N,EAAAE,MAGA,IAAA7D,EAAA,IAAA+D,KAAAH,EAAA,CACA9D,KAAAlD,EAAAkD,OAEAE,EAAAgE,EAAAhE,EAAApD,GACAoD,EAAAY,IAAAC,IAAAC,gBAAAd,GACAA,EAAA1C,KAAAV,EAAAU,KAEA0C,EAAAH,MAAAoC,QAAAC,MAAA,yCAEAjG,EAAA4B,OAAA5B,EAAA4B,MAAAmC,UAGAhC,EAAA5B,OAAAQ,EAAAU,aACAU,EAAAW,cAAA/B,EAAAU,MAGAV,EAAApC,QAAAyB,EAAA6B,YAAA7B,EAAA6B,WAAAlB,GAEAA,EAAA/G,MACA2G,EAAAI,GAEAoB,EAAAW,cAAA/B,EAAAU,MAAA,WACA,SAAA2G,IACArH,EAAApC,QAIAwD,EAAA5B,OAAAQ,EAAAU,QAIAV,EAAAE,iBAAAF,EAAAmB,WAAAC,EAAA5B,OAAAQ,EAAAU,MAAAV,EAAAE,mBACAN,EAAAI,GACAkF,WAAAmC,EAAA,OAGAnC,WAAAmC,EAAA,MAGAjG,EAAAW,cAAA/B,EAAAU,cA7DArB,EAAA2C,gBAAAhC,EAAA,SAAAsH,GACAzF,EAAAyF,KANAlG,EAAA5B,OAAA,GACA4B,EAAAW,cAAA,GAqEAX,EAAAS,UAGA,IAAAI,EAAA,CACAE,qBAAA,SAAAmF,EAAA1H,GACA2H,EAAAC,KAAAF,EAAA,SAAAG,GACA7H,EAAA6H,EAAA7J,WAGAsE,gBAAA,SAAAtE,EAAAgC,GACA2H,EAAAG,OAAA9J,EAAAgC,KAIA,SAAAwH,EAAAO,EAAAC,GAEA,GADAD,MAAA,KACAC,EAAA,OAAAD,EAEA,QAAAV,KAAAW,EACA,IACAD,EAAAV,GAAAW,EAAAX,GACa,MAAAtK,IAEb,OAAAgL,EAGA,IAAAE,GAAA,EAEAC,GAAA,EACAC,GAAA,EACAC,EAAApQ,WAAAqQ,kBACAC,EAAAC,YAAAF,kBACAG,EAAAC,YAAAJ,kBAEAK,EAAA,CACAC,KAAA,EACAC,UAAA,EACAC,OAAA,EACAC,OAAA,EACAC,QAAA,EACAC,MAAA,EACAC,OAAA,EACAC,UAAA,EACAC,WAAA,EACAC,WAAA,EACAC,WAAA,GACAC,YAAA,GACAC,YAAA,GACAC,aAAA,GACAC,aAAA,GACAC,YAAA,GACAC,KAAA,GACAC,KAAA,GACAC,OAAA,IAGA,GAAA5B,EACA,IAAA6B,EAAA,CACA,OACA,YACA,SACA,SACA,UACA,QACA,SACA,YACA,aACA,aACA,aACA,cACA,cACA,eACA,eACA,cACA,OACA,UAIA,IAAAC,EAAA,CACA,KACA,KACA,SACA,UACA,QACA,KACA,KACA,OACA,QACA,QACA,QACA,SACA,SACA,UACA,UACA,QACA,QACA,SAGAC,EAAA,SAAArD,EAAAvN,EAAA5C,GACA,IAAAyT,EAAA,GACAC,EAAAhC,EACAiC,EAAA,GACAF,EAAA,MACA,QAAA/R,EAAA,EAAuBA,EAAAiS,EAAgBjS,IACvC+R,EAAA,GAAA/R,KAAA,OAAAA,EAAA0K,SAAA,IAAA1K,EAAA0K,SAAA,IAEA,IAAA1K,EAAA,EAAmBA,EAAA1B,EAAY0B,IAAA,CAC/B,IAAAD,EAAA0O,EAAAyD,SAAAhR,EAAAlB,EAAAgS,GACA9S,EAAA,KAAAc,EAAAiS,GACA,qBAAAF,EAAA7S,KAAA6S,EAAA7S,GAAA,IACA6S,EAAA7S,GAAAc,EAAAiS,GAAAlS,EAAA,OAAAA,EAAA2K,SAAA,IAAA3K,EAAA2K,SAAA,IAGA,IADA6C,QAAApG,IAAA,KAAA4K,EAAA,GAAAzQ,KAAA,2BACAtB,EAAA,EAAmBA,EAAA+R,EAAAzT,OAAkB0B,IACrCuN,QAAApG,IAAA4K,EAAA/R,GAAAsB,KAAA,OAIA6Q,EAAA,SAAAC,GACA,IAAAhH,OAAApM,EAEA,QAAAA,IAAAoT,EACAhH,EAAAoF,EAAAE,eAES,UAAA0B,EACThH,EAAAoF,EAAAC,SAES,CACT,IAAA4B,EAAAD,EAAA3I,YAAAI,KACAyI,EAAAF,EAAA3I,YAAAiB,WAAArH,MAAA,WACA,QAAArE,IAAAqT,QAAArT,IAAAwR,EAAA6B,EAAAE,eAEAnH,EAAAoF,EAAA6B,EAAAE,oBAEa,QAAAvT,IAAAsT,QAAAtT,IAAAwR,EAAA8B,EAAAC,eACbnH,EAAAoF,EAAA8B,EAAAC,oBAIA,cAAAH,GACA,aACAhH,EAAAoF,EAAAG,OACA,MAEA,aACAvF,EAAAoF,EAAAI,OACA,MAEA,cACAxF,EAAAoF,EAAAK,QACA,MAEA,aACAuB,aAAAjU,MACAiN,EAAAoF,EAAAM,MAEyBsB,aAAAI,UACzBpH,EAAAoF,EAAAQ,UAEyBoB,aAAAK,WACzBrH,EAAAoF,EAAAS,WAEyBmB,aAAAM,WACzBtH,EAAAoF,EAAAU,WAEyBkB,aAAAtS,WACzBsL,EAAAoF,EAAAW,WAEyBiB,aAAA/B,YACzBjF,EAAAoF,EAAAY,YAEyBgB,aAAA7B,YACzBnF,EAAAoF,EAAAa,YAEyBe,aAAAO,aACzBvH,EAAAoF,EAAAc,aAEyBc,aAAAQ,aACzBxH,EAAAoF,EAAAe,aAEyBa,aAAAS,YACzBzH,EAAAoF,EAAAgB,YAEyBY,aAAA/C,KACzBjE,EAAAoF,EAAAiB,KAEyBW,aAAA/K,EACzB+D,EAAAoF,EAAAmB,OAEyBS,aAAA9J,SACzB8C,EAAAoF,EAAAO,QAGA,MAEA,QACA,OAIA,OAAA3F,GAgBAsE,EAAA,SAAAoD,GACA,IAAAC,EAAA,EACA/S,EAAA,EACAgT,EAAA,EACAhB,EAAAhC,EAEAiD,EAAA,IAAAJ,YAAAC,EAAA,GAAAI,YAAAJ,EAAA,GAAAK,aACA1E,EAAA,IAAA2E,SAAAH,GAEA,IAAAjT,EAAA,EAAmBA,EAAA8S,EAAAxU,OAAuB0B,IAAA,CAC1C,IAAAkB,EAAA6R,EACAI,EAAAL,EAAA9S,GAAAmT,YACA/H,EAAA0H,EAAA9S,GAAAoL,KACA9M,EAAAwU,EAAA9S,GAAA1B,OACAgB,EAAAwT,EAAA9S,GAAAV,MACA4T,EAAAJ,EAAA9S,GAAAkT,YACAG,EAAAxB,EAAAzG,GACAkI,EAAA,OAAAD,EAAA,EAAA3E,OAAA2E,EAAA,SAAAlD,kBAkCA,OA/BA/E,IAAAoF,EAAAmB,OAEAlD,EAAA8E,SAAAR,EAAAvC,EAAAiB,KAAAO,GAEAvD,EAAA8E,SAAAR,EAAA3H,EAAA4G,GAEAe,GAAA7C,EAEAH,GACAxC,QAAAiG,KAAA,UAAApI,EAAAwG,EAAAxG,IAIAA,IAAAoF,EAAAM,OAAA1F,IAAAoF,EAAAO,SACAtC,EAAAgF,UAAAV,EAAAzU,EAAA0T,GACAe,GAAA3C,EAEAL,GACAxC,QAAAiG,KAAA,iBAAAlV,IAKAmQ,EAAAiF,UAAAX,EAAAG,EAAAlB,GACAe,GAAAzC,EAEAP,IACAxC,QAAAiG,KAAA,cAAAL,EAAA,SACA5F,QAAAiG,KAAA,cAAAN,EAAA,UAGA9H,GACA,KAAAoF,EAAAC,KACA,KAAAD,EAAAE,UAEA,MAEA,KAAAF,EAAAG,OAIA,IAHAZ,GACAxC,QAAAiG,KAAA,qBAAAlU,EAAA,yBAEA0T,EAAA,EAA+BA,EAAA1U,EAAY0U,IAAAD,GAAAO,EAC3C7E,EAAAgF,UAAAV,EAAAzT,EAAAY,WAAA8S,GAAAhB,GAEA,MAEA,KAAAxB,EAAAI,OACA,KAAAJ,EAAAK,QACAd,GACAxC,QAAAiG,KAAA,KAAAlU,EAAAoL,WAAA,qBAEA+D,EAAA,MAAA4E,GAAAN,EAAAzT,EAAA0S,GACAe,GAAAO,EACA,MAEA,KAAA9C,EAAAQ,UACA,KAAAR,EAAAS,WACA,KAAAT,EAAAU,WACA,KAAAV,EAAAW,WACA,KAAAX,EAAAY,YACA,KAAAZ,EAAAa,YACA,KAAAb,EAAAc,aACA,KAAAd,EAAAe,aACA,IAAAoC,EAAA,IAAA7T,WAAA2O,EAAA3I,OAAAiN,EAAAG,GACAS,EAAAC,IAAA,IAAA9T,WAAAR,EAAAwG,SACAiN,GAAAG,EACA,MAEA,KAAA1C,EAAAgB,YACA,KAAAhB,EAAAmB,OACAgC,EAAA,IAAA7T,WAAA2O,EAAA3I,OAAAiN,EAAAG,GACAS,EAAAC,IAAA,IAAA9T,WAAAR,IACAyT,GAAAG,EACA,MAEA,KAAA1C,EAAAiB,KACA,KAAAjB,EAAAM,MACA,KAAAN,EAAAO,OACA,MAEA,QACA,yCAGAhB,GACA+B,EAAArD,EAAAvN,EAAA6R,EAAA7R,GAIA,OAAAuN,GASAmB,EAAA,SAAAnB,EAAAsE,GACA,IAGA3H,EAAA9M,EAAA4U,EAAA5T,EAAAuU,EAHA7T,EAAA,EACAgS,EAAAhC,EACA9O,EAAA6R,EAIA3H,EAAAqD,EAAAyD,SAAAa,EAAAf,GACAe,GAAA7C,EAEAH,GACAxC,QAAAiG,KAAA,YAAApI,EAAAwG,EAAAxG,IAIAA,IAAAoF,EAAAM,OAAA1F,IAAAoF,EAAAO,SACAzS,EAAAmQ,EAAAqF,UAAAf,EAAAf,GACAe,GAAA3C,EAEAL,GACAxC,QAAAiG,KAAA,iBAAAlV,IAKA4U,EAAAzE,EAAAsF,UAAAhB,EAAAf,GACAe,GAAAzC,EAEAP,GACAxC,QAAAiG,KAAA,cAAAN,EAAA,SAGA,IAAAG,EAAAxB,EAAAzG,GACAkI,EAAA,OAAAD,EAAA,EAAA3E,OAAA2E,EAAA,SAAAlD,kBAEA,OAAA/E,GACA,KAAAoF,EAAAC,KACA,KAAAD,EAAAE,UACAX,GACA+B,EAAArD,EAAAvN,EAAA6R,EAAA7R,GAGA5B,EAAA,KACA,MAEA,KAAAkR,EAAAG,OACArS,EAAA4U,EAAAI,EACA,IAAAnQ,EAAA,GACA,IAAAnD,EAAA,EAA2BA,EAAA1B,EAAY0B,IAAA,CACvC,IAAAD,EAAA0O,EAAAqF,UAAAf,EAAAf,GACAe,GAAAO,EACAnQ,EAAA9B,KAAA+B,OAAA4Q,aAAAjU,IAEAT,EAAA6D,EAAA7B,KAAA,IACAyO,IACAxC,QAAAiG,KAAA,qBAAAlU,EAAA,yBACAwS,EAAArD,EAAAvN,EAAA6R,EAAA7R,IAEA,MAEA,KAAAsP,EAAAI,OACAtR,EAAAmP,EAAAwF,WAAAlB,EAAAf,GACAe,GAAAO,EACAvD,IACAxC,QAAAiG,KAAA,qBAAAlU,EAAAoL,WAAA,yBACAoH,EAAArD,EAAAvN,EAAA6R,EAAA7R,IAEA,MAEA,KAAAsP,EAAAK,QACAvR,EAAA,IAAAmP,EAAAyD,SAAAa,EAAAf,GACAe,GAAAO,EACAvD,IACAxC,QAAAiG,KAAA,qBAAAlU,EAAAoL,WAAA,yBACAoH,EAAArD,EAAAvN,EAAA6R,EAAA7R,IAEA,MAEA,KAAAsP,EAAAQ,UACA,KAAAR,EAAAS,WACA,KAAAT,EAAAU,WACA,KAAAV,EAAAW,WACA,KAAAX,EAAAY,YACA,KAAAZ,EAAAa,YACA,KAAAb,EAAAc,aACA,KAAAd,EAAAe,aACA,KAAAf,EAAAgB,YACAqC,EAAApF,EAAA3I,OAAA7B,MAAA8O,IAAAG,GACAH,GAAAG,EAIA5T,EADA8L,IAAAoF,EAAAgB,YACAqC,EAIA,IAAAnF,OAAA2E,EAAA,SAAAQ,GAGA9D,GACA+B,EAAArD,EAAAvN,EAAA6R,EAAA7R,GAEA,MAEA,KAAAsP,EAAAiB,KAKA,GAJA1B,GACA+B,EAAArD,EAAAvN,EAAA6R,EAAA7R,GAGAwN,OAAAW,KAAA,CACA,IAAA6E,EAAAtE,EAAAnB,EAAAsE,GACAjN,EAAA8J,EAAAnB,EAAAyF,EAAAnB,QACAA,EAAAjN,EAAAiN,OACAzT,EAAA,IAAA+P,KAAA,CAAAvJ,EAAAxG,OAAA,CACA8L,KAAA8I,EAAA5U,aAIAuU,EAAApF,EAAA3I,OAAA7B,MAAA8O,IAAAG,GACAH,GAAAG,EAEA5T,EAAA,IAAA+H,EAAAwM,GAEA,MAEA,KAAArD,EAAAM,MAKA,IAJAf,GACA+B,EAAArD,EAAAvN,EAAA6R,EAAA7R,GAEA5B,EAAA,GACAU,EAAA,EAA2BA,EAAA1B,EAAY0B,IAEvC6T,EAAAjE,EAAAnB,EAAAsE,GACAA,EAAAc,EAAAd,OACAzT,EAAA+B,KAAAwS,EAAAvU,OAEA,MAEA,KAAAkR,EAAAO,OAKA,IAJAhB,GACA+B,EAAArD,EAAAvN,EAAA6R,EAAA7R,GAEA5B,EAAA,GACAU,EAAA,EAA2BA,EAAA1B,EAAY0B,IAAA,CAEvC,IAAAyI,EAAAmH,EAAAnB,EAAAsE,GACAoB,EAAAvE,EAAAnB,EAAAhG,EAAAsK,QACAA,EAAAoB,EAAApB,OACAzT,EAAAmJ,EAAAnJ,OAAA6U,EAAA7U,MAEA,MAEA,QACA,sCAEA,OACAA,QACAyT,WAUAqB,EAAA,SAAAC,EAAAvM,GAKA,IAJA,IAAAxJ,EAAA+V,EAAA/V,OACAgW,EAAA,GACAC,EAAA,EACArB,EAAA,EACAlT,EAAA,EAAuBA,EAAAqU,EAAA/V,OAAkB0B,KACzC,SAAAd,GACAsV,EAAAH,EAAAnV,GAAA,SAAAX,GAMA,GAJA+V,EAAApV,GAAAX,EAEA2U,GAAA3U,EAAA,GAAA4U,YAAA5U,EAAA,GAAA2U,cAEAqB,IAAAjW,EAAA,CAGA,IADA,IAAA+V,EAAA,GACArB,EAAA,EAAuCA,EAAAsB,EAAAhW,OAAoB0U,IAC3DqB,IAAAI,OAAAH,EAAAtB,IAEAlL,EAAAuM,EAAAnB,OAbA,CAgBalT,IASbwU,EAAA,SAAApC,EAAAtK,GACA,IAGAsD,EAHAsJ,EAAA,GACApB,EAAA,EACAH,EAAAjD,EAAAI,EACA4C,EAAA,EACA5U,EAAA,EACAgB,EAAA8S,EAOA,OALAhH,EAAA+G,EAAAC,GAEAkB,OAAAtU,IAAA6S,EAAAzG,IAAA,OAAAyG,EAAAzG,GAAA,EACAsD,OAAAmD,EAAAzG,GAAA,SAAA+E,kBAEA/E,GACA,KAAAoF,EAAAE,UACA,KAAAF,EAAAC,KACA,MAEA,KAAAD,EAAAI,OACA,KAAAJ,EAAAK,QACAqC,EAAAI,EACA,MAEA,KAAA9C,EAAAG,OACArS,EAAA8T,EAAA9T,OACA4U,GAAA5U,EAAAgV,EACA,MAEA,KAAA9C,EAAAQ,UACA,KAAAR,EAAAS,WACA,KAAAT,EAAAU,WACA,KAAAV,EAAAW,WACA,KAAAX,EAAAY,YACA,KAAAZ,EAAAa,YACA,KAAAb,EAAAc,aACA,KAAAd,EAAAe,aACAjT,EAAA8T,EAAA9T,OACA4U,GAAA5U,EAAAgV,EACA,MAEA,KAAA9C,EAAAM,MAUA,YATAsD,EAAAhC,EAAA,SAAAsC,EAAAxB,GACApL,EAAA,EACAsD,OACA9M,OAAA8T,EAAA9T,OACA6U,cAAA/C,EACA8C,cACA5T,MAAA,OACqBmV,OAAAC,MAIrB,KAAAlE,EAAAO,OACA,IAAA4D,EAAA,GACA,QAAAlM,KAAA2J,EACAA,EAAAwC,eAAAnM,KACAkM,EAAAtT,KAAAoH,GACAkM,EAAAtT,KAAA+Q,EAAA3J,IACAnK,KAYA,YATA8V,EAAAO,EAAA,SAAAD,EAAAxB,GACApL,EAAA,EACAsD,OACA9M,SACA6U,cAAA/C,EACA8C,cACA5T,MAAA,OACqBmV,OAAAC,MAIrB,KAAAlE,EAAAgB,YACA0B,GAAAd,EAAA5S,WACA,MAEA,KAAAgR,EAAAiB,KACA,IAAAoD,EAAAzC,EAAAhH,KACAG,EAAA,IAAAC,WAgBA,OAfAD,EAAAuJ,OAAA,SAAAjQ,GACAuP,EAAA,CAAAS,EAAAhQ,EAAAkH,OAAAxN,QAAA,SAAAmW,EAAAxB,GACApL,EAAA,EACAsD,OACA9M,SACA6U,cACAD,cACA5T,MAAA,OACyBmV,OAAAC,OAGzBnJ,EAAAwJ,QAAA,SAAAlQ,GACA,0BAAAA,QAEA0G,EAAA3D,kBAAAwK,GAGA,KAAA5B,EAAAmB,OACAuB,GAAAd,EAAA9T,OACA,MAEA,QACA,yBAAA8T,EAAA3I,YAAAI,KAAA,mBAGA/B,EAAA,EACAsD,OACA9M,SACA6U,cACAD,cACA5T,UACSmV,OAAAC,KAQTM,EAAA,SAAAlP,EAAAgC,GACA,IAAA2G,EAAA3I,aAAAsN,SAAAtN,EAAA,IAAAsN,SAAAtN,GACAvH,EAAAqR,EAAAnB,EAAA,GACA,OAAAlQ,EAAAe,OAGAyQ,IACArB,OAAAuG,KAAA,CACAjF,aACAC,gBACAO,QACAd,OACAE,SACA4E,YACAQ,gBAIA,IAAAvF,EAAA,CACAC,KAAA,SAAA0C,EAAAtK,GACA,IACAiI,GAAAxC,QAAAiG,KAAA,mDAA0FpB,GAC1FoC,EAAApC,EAAA,SAAAiC,GACAtE,GAAAxC,QAAAiG,KAAA,oBAAAa,GACAvM,EAAA4H,EAAA2E,MAEa,MAAAxP,GACb,MAAAA,IAGA+K,OAAA,SAAA9J,EAAAgC,GACA,IACAiI,GAAAxC,QAAAiG,KAAA,qDAA4F1N,GAC5F,IAAAvH,EAAAyW,EAAAlP,GACAiK,GAAAxC,QAAAiG,KAAA,sBAAAjV,GACAuJ,EAAAvJ,GACa,MAAAsG,GACb,MAAAA,KAKA6J,OAAAvE,gBACAuE,OAAApC,eACAoC,OAAApH,oBApsCA,uDCbA,IAAA4N,EAAe7X,EAAQ,QACvB8X,EAAU9X,EAAQ,QAClB+X,EAAY/X,EAAQ,OAARA,CAAgB,SAC5BgY,EAAA9V,QAAA,SAAA+V,GACA,IAAA3T,EACA,OAAAuT,EAAAI,UAAAtW,KAAA2C,EAAA2T,EAAAF,MAAAzT,EAAA,UAAAwT,EAAAG,yCCNA,SAAAC;;;;;;;AAUA,IAAAC,EAAanY,EAAQ,QACrBoY,EAAcpY,EAAQ,QACtBqY,EAAcrY,EAAQ,QAuCtB,SAAAsY,IACA,IACA,IAAA/U,EAAA,IAAAd,WAAA,GAEA,OADAc,EAAAgV,UAAA,CAAqBA,UAAA9V,WAAA0F,UAAAqQ,IAAA,WAAmD,YACxE,KAAAjV,EAAAiV,OACA,oBAAAjV,EAAA8T,UACA,IAAA9T,EAAA8T,SAAA,KAAAlV,WACG,MAAAqF,GACH,UAIA,SAAAiR,IACA,OAAAzO,EAAA0O,oBACA,WACA,WAGA,SAAAC,EAAAC,EAAA3X,GACA,GAAAwX,IAAAxX,EACA,UAAA4X,WAAA,8BAcA,OAZA7O,EAAA0O,qBAEAE,EAAA,IAAAnW,WAAAxB,GACA2X,EAAAL,UAAAvO,EAAA7B,YAGA,OAAAyQ,IACAA,EAAA,IAAA5O,EAAA/I,IAEA2X,EAAA3X,UAGA2X,EAaA,SAAA5O,EAAA8O,EAAAC,EAAA9X,GACA,IAAA+I,EAAA0O,uBAAAnX,gBAAAyI,GACA,WAAAA,EAAA8O,EAAAC,EAAA9X,GAIA,qBAAA6X,EAAA,CACA,qBAAAC,EACA,UAAA/V,MACA,qEAGA,OAAAgW,EAAAzX,KAAAuX,GAEA,OAAA/X,EAAAQ,KAAAuX,EAAAC,EAAA9X,GAWA,SAAAF,EAAA6X,EAAA3W,EAAA8W,EAAA9X,GACA,qBAAAgB,EACA,UAAAgX,UAAA,yCAGA,2BAAAzD,aAAAvT,aAAAuT,YACA0D,EAAAN,EAAA3W,EAAA8W,EAAA9X,GAGA,kBAAAgB,EACAkX,EAAAP,EAAA3W,EAAA8W,GAGAK,EAAAR,EAAA3W,GA4BA,SAAAoX,EAAAvL,GACA,qBAAAA,EACA,UAAAmL,UAAA,oCACG,GAAAnL,EAAA,EACH,UAAA+K,WAAA,wCAIA,SAAAS,EAAAV,EAAA9K,EAAAyL,EAAAC,GAEA,OADAH,EAAAvL,GACAA,GAAA,EACA6K,EAAAC,EAAA9K,QAEAnM,IAAA4X,EAIA,kBAAAC,EACAb,EAAAC,EAAA9K,GAAAyL,OAAAC,GACAb,EAAAC,EAAA9K,GAAAyL,QAEAZ,EAAAC,EAAA9K,GAWA,SAAAkL,EAAAJ,EAAA9K,GAGA,GAFAuL,EAAAvL,GACA8K,EAAAD,EAAAC,EAAA9K,EAAA,MAAA2L,EAAA3L,KACA9D,EAAA0O,oBACA,QAAA/V,EAAA,EAAmBA,EAAAmL,IAAUnL,EAC7BiW,EAAAjW,GAAA,EAGA,OAAAiW,EAgBA,SAAAO,EAAAP,EAAA9S,EAAA0T,GAKA,GAJA,kBAAAA,GAAA,KAAAA,IACAA,EAAA,SAGAxP,EAAA0P,WAAAF,GACA,UAAAP,UAAA,8CAGA,IAAAhY,EAAA,EAAAkB,EAAA2D,EAAA0T,GACAZ,EAAAD,EAAAC,EAAA3X,GAEA,IAAA0Y,EAAAf,EAAApP,MAAA1D,EAAA0T,GASA,OAPAG,IAAA1Y,IAIA2X,IAAAhS,MAAA,EAAA+S,IAGAf,EAGA,SAAAgB,EAAAhB,EAAA5B,GACA,IAAA/V,EAAA+V,EAAA/V,OAAA,MAAAwY,EAAAzC,EAAA/V,QACA2X,EAAAD,EAAAC,EAAA3X,GACA,QAAA0B,EAAA,EAAiBA,EAAA1B,EAAY0B,GAAA,EAC7BiW,EAAAjW,GAAA,IAAAqU,EAAArU,GAEA,OAAAiW,EAGA,SAAAM,EAAAN,EAAA5B,EAAA6C,EAAA5Y,GAGA,GAFA+V,EAAA7U,WAEA0X,EAAA,GAAA7C,EAAA7U,WAAA0X,EACA,UAAAhB,WAAA,6BAGA,GAAA7B,EAAA7U,WAAA0X,GAAA5Y,GAAA,GACA,UAAA4X,WAAA,6BAmBA,OAfA7B,OADArV,IAAAkY,QAAAlY,IAAAV,EACA,IAAAwB,WAAAuU,QACGrV,IAAAV,EACH,IAAAwB,WAAAuU,EAAA6C,GAEA,IAAApX,WAAAuU,EAAA6C,EAAA5Y,GAGA+I,EAAA0O,qBAEAE,EAAA5B,EACA4B,EAAAL,UAAAvO,EAAA7B,WAGAyQ,EAAAgB,EAAAhB,EAAA5B,GAEA4B,EAGA,SAAAQ,EAAAR,EAAA7D,GACA,GAAA/K,EAAA8P,SAAA/E,GAAA,CACA,IAAAnS,EAAA,EAAA6W,EAAA1E,EAAA9T,QAGA,OAFA2X,EAAAD,EAAAC,EAAAhW,GAEA,IAAAgW,EAAA3X,OACA2X,GAGA7D,EAAAgF,KAAAnB,EAAA,IAAAhW,GACAgW,GAGA,GAAA7D,EAAA,CACA,wBAAAS,aACAT,EAAAtM,kBAAA+M,aAAA,WAAAT,EACA,wBAAAA,EAAA9T,QAAA+Y,GAAAjF,EAAA9T,QACA0X,EAAAC,EAAA,GAEAgB,EAAAhB,EAAA7D,GAGA,cAAAA,EAAAhH,MAAAsK,EAAAtD,EAAAkF,MACA,OAAAL,EAAAhB,EAAA7D,EAAAkF,MAIA,UAAAhB,UAAA,sFAGA,SAAAQ,EAAAxY,GAGA,GAAAA,GAAAwX,IACA,UAAAI,WAAA,0DACAJ,IAAApL,SAAA,cAEA,SAAApM,EAGA,SAAAiZ,EAAAjZ,GAIA,OAHAA,OACAA,EAAA,GAEA+I,EAAAsP,OAAArY,GA+EA,SAAAkB,EAAA2D,EAAA0T,GACA,GAAAxP,EAAA8P,SAAAhU,GACA,OAAAA,EAAA7E,OAEA,wBAAAuU,aAAA,oBAAAA,YAAA2E,SACA3E,YAAA2E,OAAArU,iBAAA0P,aACA,OAAA1P,EAAA3D,WAEA,kBAAA2D,IACAA,EAAA,GAAAA,GAGA,IAAAlD,EAAAkD,EAAA7E,OACA,OAAA2B,EAAA,SAIA,IADA,IAAAwX,GAAA,IAEA,OAAAZ,GACA,YACA,aACA,aACA,OAAA5W,EACA,WACA,YACA,UAAAjB,EACA,OAAA0Y,EAAAvU,GAAA7E,OACA,WACA,YACA,cACA,eACA,SAAA2B,EACA,UACA,OAAAA,IAAA,EACA,aACA,OAAA0X,EAAAxU,GAAA7E,OACA,QACA,GAAAmZ,EAAA,OAAAC,EAAAvU,GAAA7E,OACAuY,GAAA,GAAAA,GAAAe,cACAH,GAAA,GAMA,SAAAI,EAAAhB,EAAA3V,EAAAC,GACA,IAAAsW,GAAA,EAcA,SALAzY,IAAAkC,KAAA,KACAA,EAAA,GAIAA,EAAAtC,KAAAN,OACA,SAOA,SAJAU,IAAAmC,KAAAvC,KAAAN,UACA6C,EAAAvC,KAAAN,QAGA6C,GAAA,EACA,SAOA,GAHAA,KAAA,EACAD,KAAA,EAEAC,GAAAD,EACA,SAGA2V,MAAA,QAEA,QACA,OAAAA,GACA,UACA,OAAAiB,EAAAlZ,KAAAsC,EAAAC,GAEA,WACA,YACA,OAAA4W,EAAAnZ,KAAAsC,EAAAC,GAEA,YACA,OAAA6W,EAAApZ,KAAAsC,EAAAC,GAEA,aACA,aACA,OAAA8W,EAAArZ,KAAAsC,EAAAC,GAEA,aACA,OAAA+W,EAAAtZ,KAAAsC,EAAAC,GAEA,WACA,YACA,cACA,eACA,OAAAgX,EAAAvZ,KAAAsC,EAAAC,GAEA,QACA,GAAAsW,EAAA,UAAAnB,UAAA,qBAAAO,GACAA,KAAA,IAAAe,cACAH,GAAA,GASA,SAAAW,EAAAC,EAAA9a,EAAA4I,GACA,IAAAnG,EAAAqY,EAAA9a,GACA8a,EAAA9a,GAAA8a,EAAAlS,GACAkS,EAAAlS,GAAAnG,EAmIA,SAAAsY,EAAAxS,EAAAqO,EAAA+C,EAAAL,EAAA0B,GAEA,OAAAzS,EAAAxH,OAAA,SAmBA,GAhBA,kBAAA4Y,GACAL,EAAAK,EACAA,EAAA,GACGA,EAAA,WACHA,EAAA,WACGA,GAAA,aACHA,GAAA,YAEAA,KACAjQ,MAAAiQ,KAEAA,EAAAqB,EAAA,EAAAzS,EAAAxH,OAAA,GAIA4Y,EAAA,IAAAA,EAAApR,EAAAxH,OAAA4Y,GACAA,GAAApR,EAAAxH,OAAA,CACA,GAAAia,EAAA,SACArB,EAAApR,EAAAxH,OAAA,OACG,GAAA4Y,EAAA,GACH,IAAAqB,EACA,SADArB,EAAA,EAUA,GALA,kBAAA/C,IACAA,EAAA9M,EAAAjJ,KAAA+V,EAAA0C,IAIAxP,EAAA8P,SAAAhD,GAEA,WAAAA,EAAA7V,QACA,EAEAka,EAAA1S,EAAAqO,EAAA+C,EAAAL,EAAA0B,GACG,qBAAApE,EAEH,OADAA,GAAA,IACA9M,EAAA0O,qBACA,oBAAAjW,WAAA0F,UAAAjF,QACAgY,EACAzY,WAAA0F,UAAAjF,QAAA5C,KAAAmI,EAAAqO,EAAA+C,GAEApX,WAAA0F,UAAAiT,YAAA9a,KAAAmI,EAAAqO,EAAA+C,GAGAsB,EAAA1S,EAAA,CAAAqO,GAAA+C,EAAAL,EAAA0B,GAGA,UAAAjC,UAAA,wCAGA,SAAAkC,EAAA5X,EAAAuT,EAAA+C,EAAAL,EAAA0B,GACA,IA0BAvY,EA1BA0Y,EAAA,EACAC,EAAA/X,EAAAtC,OACAsa,EAAAzE,EAAA7V,OAEA,QAAAU,IAAA6X,IACAA,EAAAzT,OAAAyT,GAAAe,cACA,SAAAf,GAAA,UAAAA,GACA,YAAAA,GAAA,aAAAA,GAAA,CACA,GAAAjW,EAAAtC,OAAA,GAAA6V,EAAA7V,OAAA,EACA,SAEAoa,EAAA,EACAC,GAAA,EACAC,GAAA,EACA1B,GAAA,EAIA,SAAArR,EAAAgT,EAAA7Y,GACA,WAAA0Y,EACAG,EAAA7Y,GAEA6Y,EAAAC,aAAA9Y,EAAA0Y,GAKA,GAAAH,EAAA,CACA,IAAAQ,GAAA,EACA,IAAA/Y,EAAAkX,EAAwBlX,EAAA2Y,EAAe3Y,IACvC,GAAA6F,EAAAjF,EAAAZ,KAAA6F,EAAAsO,GAAA,IAAA4E,EAAA,EAAA/Y,EAAA+Y,IAEA,IADA,IAAAA,MAAA/Y,GACAA,EAAA+Y,EAAA,IAAAH,EAAA,OAAAG,EAAAL,OAEA,IAAAK,IAAA/Y,KAAA+Y,GACAA,GAAA,OAKA,IADA7B,EAAA0B,EAAAD,IAAAzB,EAAAyB,EAAAC,GACA5Y,EAAAkX,EAAwBlX,GAAA,EAAQA,IAAA,CAEhC,IADA,IAAAgZ,GAAA,EACAhG,EAAA,EAAqBA,EAAA4F,EAAe5F,IACpC,GAAAnN,EAAAjF,EAAAZ,EAAAgT,KAAAnN,EAAAsO,EAAAnB,GAAA,CACAgG,GAAA,EACA,MAGA,GAAAA,EAAA,OAAAhZ,EAIA,SAeA,SAAAiZ,EAAAJ,EAAA1V,EAAA4C,EAAAzH,GACAyH,EAAA4D,OAAA5D,IAAA,EACA,IAAAmT,EAAAL,EAAAva,OAAAyH,EACAzH,GAGAA,EAAAqL,OAAArL,GACAA,EAAA4a,IACA5a,EAAA4a,IAJA5a,EAAA4a,EASA,IAAAC,EAAAhW,EAAA7E,OACA,GAAA6a,EAAA,gBAAA7C,UAAA,sBAEAhY,EAAA6a,EAAA,IACA7a,EAAA6a,EAAA,GAEA,QAAAnZ,EAAA,EAAiBA,EAAA1B,IAAY0B,EAAA,CAC7B,IAAAoZ,EAAAC,SAAAlW,EAAAmW,OAAA,EAAAtZ,EAAA,OACA,GAAAiH,MAAAmS,GAAA,OAAApZ,EACA6Y,EAAA9S,EAAA/F,GAAAoZ,EAEA,OAAApZ,EAGA,SAAAuZ,EAAAV,EAAA1V,EAAA4C,EAAAzH,GACA,OAAAkb,GAAA9B,EAAAvU,EAAA0V,EAAAva,OAAAyH,GAAA8S,EAAA9S,EAAAzH,GAGA,SAAAmb,EAAAZ,EAAA1V,EAAA4C,EAAAzH,GACA,OAAAkb,GAAAE,EAAAvW,GAAA0V,EAAA9S,EAAAzH,GAGA,SAAAqb,EAAAd,EAAA1V,EAAA4C,EAAAzH,GACA,OAAAmb,EAAAZ,EAAA1V,EAAA4C,EAAAzH,GAGA,SAAAsb,EAAAf,EAAA1V,EAAA4C,EAAAzH,GACA,OAAAkb,GAAA7B,EAAAxU,GAAA0V,EAAA9S,EAAAzH,GAGA,SAAAub,EAAAhB,EAAA1V,EAAA4C,EAAAzH,GACA,OAAAkb,GAAAM,EAAA3W,EAAA0V,EAAAva,OAAAyH,GAAA8S,EAAA9S,EAAAzH,GAkFA,SAAA4Z,EAAAW,EAAA3X,EAAAC,GACA,WAAAD,GAAAC,IAAA0X,EAAAva,OACAkX,EAAA9V,cAAAmZ,GAEArD,EAAA9V,cAAAmZ,EAAA5U,MAAA/C,EAAAC,IAIA,SAAA4W,EAAAc,EAAA3X,EAAAC,GACAA,EAAAgB,KAAAC,IAAAyW,EAAAva,OAAA6C,GACA,IAAAmD,EAAA,GAEAtE,EAAAkB,EACA,MAAAlB,EAAAmB,EAAA,CACA,IAQA4Y,EAAAC,EAAAC,EAAAC,EARAC,EAAAtB,EAAA7Y,GACAoa,EAAA,KACAC,EAAAF,EAAA,MACAA,EAAA,MACAA,EAAA,MACA,EAEA,GAAAna,EAAAqa,GAAAlZ,EAGA,OAAAkZ,GACA,OACAF,EAAA,MACAC,EAAAD,GAEA,MACA,OACAJ,EAAAlB,EAAA7Y,EAAA,GACA,WAAA+Z,KACAG,GAAA,GAAAC,IAAA,KAAAJ,EACAG,EAAA,MACAE,EAAAF,IAGA,MACA,OACAH,EAAAlB,EAAA7Y,EAAA,GACAga,EAAAnB,EAAA7Y,EAAA,GACA,WAAA+Z,IAAA,WAAAC,KACAE,GAAA,GAAAC,IAAA,OAAAJ,IAAA,KAAAC,EACAE,EAAA,OAAAA,EAAA,OAAAA,EAAA,SACAE,EAAAF,IAGA,MACA,OACAH,EAAAlB,EAAA7Y,EAAA,GACAga,EAAAnB,EAAA7Y,EAAA,GACAia,EAAApB,EAAA7Y,EAAA,GACA,WAAA+Z,IAAA,WAAAC,IAAA,WAAAC,KACAC,GAAA,GAAAC,IAAA,OAAAJ,IAAA,OAAAC,IAAA,KAAAC,EACAC,EAAA,OAAAA,EAAA,UACAE,EAAAF,IAMA,OAAAE,GAGAA,EAAA,MACAC,EAAA,GACKD,EAAA,QAELA,GAAA,MACA9V,EAAAjD,KAAA+Y,IAAA,eACAA,EAAA,WAAAA,GAGA9V,EAAAjD,KAAA+Y,GACApa,GAAAqa,EAGA,OAAAC,EAAAhW,GA98BA/E,EAAA8H,SACA9H,EAAAgY,aACAhY,EAAAgb,kBAAA,GA0BAlT,EAAA0O,yBAAA/W,IAAAuW,EAAAQ,oBACAR,EAAAQ,oBACAJ,IAKApW,EAAAuW,eAkEAzO,EAAAmT,SAAA,KAGAnT,EAAAoT,SAAA,SAAA7Z,GAEA,OADAA,EAAAgV,UAAAvO,EAAA7B,UACA5E,GA2BAyG,EAAAjJ,KAAA,SAAAkB,EAAA8W,EAAA9X,GACA,OAAAF,EAAA,KAAAkB,EAAA8W,EAAA9X,IAGA+I,EAAA0O,sBACA1O,EAAA7B,UAAAoQ,UAAA9V,WAAA0F,UACA6B,EAAAuO,UAAA9V,WACA,qBAAA4a,eAAAC,SACAtT,EAAAqT,OAAAC,WAAAtT,GAEAiB,OAAAsS,eAAAvT,EAAAqT,OAAAC,QAAA,CACArb,MAAA,KACAqG,cAAA,KAiCA0B,EAAAsP,MAAA,SAAAxL,EAAAyL,EAAAC,GACA,OAAAF,EAAA,KAAAxL,EAAAyL,EAAAC,IAiBAxP,EAAAgP,YAAA,SAAAlL,GACA,OAAAkL,EAAA,KAAAlL,IAKA9D,EAAAwT,gBAAA,SAAA1P,GACA,OAAAkL,EAAA,KAAAlL,IAiHA9D,EAAA8P,SAAA,SAAAkB,GACA,cAAAA,MAAAyC,YAGAzT,EAAA0T,QAAA,SAAAC,EAAA3C,GACA,IAAAhR,EAAA8P,SAAA6D,KAAA3T,EAAA8P,SAAAkB,GACA,UAAA/B,UAAA,6BAGA,GAAA0E,IAAA3C,EAAA,SAKA,IAHA,IAAA4C,EAAAD,EAAA1c,OACA4c,EAAA7C,EAAA/Z,OAEA0B,EAAA,EAAAC,EAAAkC,KAAAC,IAAA6Y,EAAAC,GAAuClb,EAAAC,IAASD,EAChD,GAAAgb,EAAAhb,KAAAqY,EAAArY,GAAA,CACAib,EAAAD,EAAAhb,GACAkb,EAAA7C,EAAArY,GACA,MAIA,OAAAib,EAAAC,GAAA,EACAA,EAAAD,EAAA,EACA,GAGA5T,EAAA0P,WAAA,SAAAF,GACA,OAAAzT,OAAAyT,GAAAe,eACA,UACA,WACA,YACA,YACA,aACA,aACA,aACA,WACA,YACA,cACA,eACA,SACA,QACA,WAIAvQ,EAAAoN,OAAA,SAAA0G,EAAA7c,GACA,IAAAoX,EAAAyF,GACA,UAAA7E,UAAA,+CAGA,OAAA6E,EAAA7c,OACA,OAAA+I,EAAAsP,MAAA,GAGA,IAAA3W,EACA,QAAAhB,IAAAV,EAEA,IADAA,EAAA,EACA0B,EAAA,EAAeA,EAAAmb,EAAA7c,SAAiB0B,EAChC1B,GAAA6c,EAAAnb,GAAA1B,OAIA,IAAAwH,EAAAuB,EAAAgP,YAAA/X,GACA8c,EAAA,EACA,IAAApb,EAAA,EAAaA,EAAAmb,EAAA7c,SAAiB0B,EAAA,CAC9B,IAAA6Y,EAAAsC,EAAAnb,GACA,IAAAqH,EAAA8P,SAAA0B,GACA,UAAAvC,UAAA,+CAEAuC,EAAAzB,KAAAtR,EAAAsV,GACAA,GAAAvC,EAAAva,OAEA,OAAAwH,GA8CAuB,EAAA7H,aA0EA6H,EAAA7B,UAAAsV,WAAA,EAQAzT,EAAA7B,UAAA6V,OAAA,WACA,IAAApb,EAAArB,KAAAN,OACA,GAAA2B,EAAA,MACA,UAAAiW,WAAA,6CAEA,QAAAlW,EAAA,EAAiBA,EAAAC,EAASD,GAAA,EAC1BoY,EAAAxZ,KAAAoB,IAAA,GAEA,OAAApB,MAGAyI,EAAA7B,UAAA8V,OAAA,WACA,IAAArb,EAAArB,KAAAN,OACA,GAAA2B,EAAA,MACA,UAAAiW,WAAA,6CAEA,QAAAlW,EAAA,EAAiBA,EAAAC,EAASD,GAAA,EAC1BoY,EAAAxZ,KAAAoB,IAAA,GACAoY,EAAAxZ,KAAAoB,EAAA,EAAAA,EAAA,GAEA,OAAApB,MAGAyI,EAAA7B,UAAA+V,OAAA,WACA,IAAAtb,EAAArB,KAAAN,OACA,GAAA2B,EAAA,MACA,UAAAiW,WAAA,6CAEA,QAAAlW,EAAA,EAAiBA,EAAAC,EAASD,GAAA,EAC1BoY,EAAAxZ,KAAAoB,IAAA,GACAoY,EAAAxZ,KAAAoB,EAAA,EAAAA,EAAA,GACAoY,EAAAxZ,KAAAoB,EAAA,EAAAA,EAAA,GACAoY,EAAAxZ,KAAAoB,EAAA,EAAAA,EAAA,GAEA,OAAApB,MAGAyI,EAAA7B,UAAAkF,SAAA,WACA,IAAApM,EAAA,EAAAM,KAAAN,OACA,WAAAA,EAAA,GACA,IAAAQ,UAAAR,OAAAyZ,EAAAnZ,KAAA,EAAAN,GACAuZ,EAAA3T,MAAAtF,KAAAE,YAGAuI,EAAA7B,UAAAgW,OAAA,SAAAnD,GACA,IAAAhR,EAAA8P,SAAAkB,GAAA,UAAA/B,UAAA,6BACA,OAAA1X,OAAAyZ,GACA,IAAAhR,EAAA0T,QAAAnc,KAAAyZ,IAGAhR,EAAA7B,UAAAiW,QAAA,WACA,IAAAC,EAAA,GACAC,EAAApc,EAAAgb,kBAKA,OAJA3b,KAAAN,OAAA,IACAod,EAAA9c,KAAA8L,SAAA,QAAAiR,GAAAtY,MAAA,SAAkD/B,KAAA,KAClD1C,KAAAN,OAAAqd,IAAAD,GAAA,UAEA,WAAAA,EAAA,KAGArU,EAAA7B,UAAAuV,QAAA,SAAAhP,EAAA7K,EAAAC,EAAAya,EAAAC,GACA,IAAAxU,EAAA8P,SAAApL,GACA,UAAAuK,UAAA,6BAgBA,QAbAtX,IAAAkC,IACAA,EAAA,QAEAlC,IAAAmC,IACAA,EAAA4K,IAAAzN,OAAA,QAEAU,IAAA4c,IACAA,EAAA,QAEA5c,IAAA6c,IACAA,EAAAjd,KAAAN,QAGA4C,EAAA,GAAAC,EAAA4K,EAAAzN,QAAAsd,EAAA,GAAAC,EAAAjd,KAAAN,OACA,UAAA4X,WAAA,sBAGA,GAAA0F,GAAAC,GAAA3a,GAAAC,EACA,SAEA,GAAAya,GAAAC,EACA,SAEA,GAAA3a,GAAAC,EACA,SAQA,GALAD,KAAA,EACAC,KAAA,EACAya,KAAA,EACAC,KAAA,EAEAjd,OAAAmN,EAAA,SASA,IAPA,IAAAkP,EAAAY,EAAAD,EACAV,EAAA/Z,EAAAD,EACAjB,EAAAkC,KAAAC,IAAA6Y,EAAAC,GAEAY,EAAAld,KAAAqF,MAAA2X,EAAAC,GACAE,EAAAhQ,EAAA9H,MAAA/C,EAAAC,GAEAnB,EAAA,EAAiBA,EAAAC,IAASD,EAC1B,GAAA8b,EAAA9b,KAAA+b,EAAA/b,GAAA,CACAib,EAAAa,EAAA9b,GACAkb,EAAAa,EAAA/b,GACA,MAIA,OAAAib,EAAAC,GAAA,EACAA,EAAAD,EAAA,EACA,GA6HA5T,EAAA7B,UAAAwW,SAAA,SAAA7H,EAAA+C,EAAAL,GACA,WAAAjY,KAAA2B,QAAA4T,EAAA+C,EAAAL,IAGAxP,EAAA7B,UAAAjF,QAAA,SAAA4T,EAAA+C,EAAAL,GACA,OAAAyB,EAAA1Z,KAAAuV,EAAA+C,EAAAL,GAAA,IAGAxP,EAAA7B,UAAAiT,YAAA,SAAAtE,EAAA+C,EAAAL,GACA,OAAAyB,EAAA1Z,KAAAuV,EAAA+C,EAAAL,GAAA,IAkDAxP,EAAA7B,UAAAqB,MAAA,SAAA1D,EAAA4C,EAAAzH,EAAAuY,GAEA,QAAA7X,IAAA+G,EACA8Q,EAAA,OACAvY,EAAAM,KAAAN,OACAyH,EAAA,OAEG,QAAA/G,IAAAV,GAAA,kBAAAyH,EACH8Q,EAAA9Q,EACAzH,EAAAM,KAAAN,OACAyH,EAAA,MAEG,KAAAkW,SAAAlW,GAWH,UAAA1F,MACA,2EAXA0F,GAAA,EACAkW,SAAA3d,IACAA,GAAA,OACAU,IAAA6X,MAAA,UAEAA,EAAAvY,EACAA,OAAAU,GASA,IAAAka,EAAAta,KAAAN,OAAAyH,EAGA,SAFA/G,IAAAV,KAAA4a,KAAA5a,EAAA4a,GAEA/V,EAAA7E,OAAA,IAAAA,EAAA,GAAAyH,EAAA,IAAAA,EAAAnH,KAAAN,OACA,UAAA4X,WAAA,0CAGAW,MAAA,QAGA,IADA,IAAAY,GAAA,IAEA,OAAAZ,GACA,UACA,OAAAoC,EAAAra,KAAAuE,EAAA4C,EAAAzH,GAEA,WACA,YACA,OAAAib,EAAA3a,KAAAuE,EAAA4C,EAAAzH,GAEA,YACA,OAAAmb,EAAA7a,KAAAuE,EAAA4C,EAAAzH,GAEA,aACA,aACA,OAAAqb,EAAA/a,KAAAuE,EAAA4C,EAAAzH,GAEA,aAEA,OAAAsb,EAAAhb,KAAAuE,EAAA4C,EAAAzH,GAEA,WACA,YACA,cACA,eACA,OAAAub,EAAAjb,KAAAuE,EAAA4C,EAAAzH,GAEA,QACA,GAAAmZ,EAAA,UAAAnB,UAAA,qBAAAO,GACAA,GAAA,GAAAA,GAAAe,cACAH,GAAA,IAKApQ,EAAA7B,UAAA0W,OAAA,WACA,OACA9Q,KAAA,SACAkM,KAAAnZ,MAAAqH,UAAAvB,MAAAtG,KAAAiB,KAAAud,MAAAvd,KAAA,KAwFA,IAAAwd,EAAA,KAEA,SAAA9B,EAAA+B,GACA,IAAApc,EAAAoc,EAAA/d,OACA,GAAA2B,GAAAmc,EACA,OAAAhZ,OAAA4Q,aAAA9P,MAAAd,OAAAiZ,GAIA,IAAA/X,EAAA,GACAtE,EAAA,EACA,MAAAA,EAAAC,EACAqE,GAAAlB,OAAA4Q,aAAA9P,MACAd,OACAiZ,EAAApY,MAAAjE,KAAAoc,IAGA,OAAA9X,EAGA,SAAA0T,EAAAa,EAAA3X,EAAAC,GACA,IAAAmb,EAAA,GACAnb,EAAAgB,KAAAC,IAAAyW,EAAAva,OAAA6C,GAEA,QAAAnB,EAAAkB,EAAqBlB,EAAAmB,IAASnB,EAC9Bsc,GAAAlZ,OAAA4Q,aAAA,IAAA6E,EAAA7Y,IAEA,OAAAsc,EAGA,SAAArE,EAAAY,EAAA3X,EAAAC,GACA,IAAAmb,EAAA,GACAnb,EAAAgB,KAAAC,IAAAyW,EAAAva,OAAA6C,GAEA,QAAAnB,EAAAkB,EAAqBlB,EAAAmB,IAASnB,EAC9Bsc,GAAAlZ,OAAA4Q,aAAA6E,EAAA7Y,IAEA,OAAAsc,EAGA,SAAAxE,EAAAe,EAAA3X,EAAAC,GACA,IAAAlB,EAAA4Y,EAAAva,SAEA4C,KAAA,KAAAA,EAAA,KACAC,KAAA,GAAAA,EAAAlB,KAAAkB,EAAAlB,GAGA,IADA,IAAAsc,EAAA,GACAvc,EAAAkB,EAAqBlB,EAAAmB,IAASnB,EAC9Buc,GAAAC,EAAA3D,EAAA7Y,IAEA,OAAAuc,EAGA,SAAApE,EAAAU,EAAA3X,EAAAC,GAGA,IAFA,IAAAsb,EAAA5D,EAAA5U,MAAA/C,EAAAC,GACAmD,EAAA,GACAtE,EAAA,EAAiBA,EAAAyc,EAAAne,OAAkB0B,GAAA,EACnCsE,GAAAlB,OAAA4Q,aAAAyI,EAAAzc,GAAA,IAAAyc,EAAAzc,EAAA,IAEA,OAAAsE,EA0CA,SAAAoY,EAAA3W,EAAA4W,EAAAre,GACA,GAAAyH,EAAA,OAAAA,EAAA,YAAAmQ,WAAA,sBACA,GAAAnQ,EAAA4W,EAAAre,EAAA,UAAA4X,WAAA,yCA+JA,SAAA0G,EAAA/D,EAAAvZ,EAAAyG,EAAA4W,EAAAhB,EAAAvZ,GACA,IAAAiF,EAAA8P,SAAA0B,GAAA,UAAAvC,UAAA,+CACA,GAAAhX,EAAAqc,GAAArc,EAAA8C,EAAA,UAAA8T,WAAA,qCACA,GAAAnQ,EAAA4W,EAAA9D,EAAAva,OAAA,UAAA4X,WAAA,sBAkDA,SAAA2G,EAAAhE,EAAAvZ,EAAAyG,EAAA+W,GACAxd,EAAA,IAAAA,EAAA,MAAAA,EAAA,GACA,QAAAU,EAAA,EAAAgT,EAAA7Q,KAAAC,IAAAyW,EAAAva,OAAAyH,EAAA,GAAuD/F,EAAAgT,IAAOhT,EAC9D6Y,EAAA9S,EAAA/F,IAAAV,EAAA,QAAAwd,EAAA9c,EAAA,EAAAA,MACA,GAAA8c,EAAA9c,EAAA,EAAAA,GA8BA,SAAA+c,EAAAlE,EAAAvZ,EAAAyG,EAAA+W,GACAxd,EAAA,IAAAA,EAAA,WAAAA,EAAA,GACA,QAAAU,EAAA,EAAAgT,EAAA7Q,KAAAC,IAAAyW,EAAAva,OAAAyH,EAAA,GAAuD/F,EAAAgT,IAAOhT,EAC9D6Y,EAAA9S,EAAA/F,GAAAV,IAAA,GAAAwd,EAAA9c,EAAA,EAAAA,GAAA,IAmJA,SAAAgd,EAAAnE,EAAAvZ,EAAAyG,EAAA4W,EAAAhB,EAAAvZ,GACA,GAAA2D,EAAA4W,EAAA9D,EAAAva,OAAA,UAAA4X,WAAA,sBACA,GAAAnQ,EAAA,YAAAmQ,WAAA,sBAGA,SAAA+G,EAAApE,EAAAvZ,EAAAyG,EAAA+W,EAAAI,GAKA,OAJAA,GACAF,EAAAnE,EAAAvZ,EAAAyG,EAAA,8CAEA0P,EAAA5O,MAAAgS,EAAAvZ,EAAAyG,EAAA+W,EAAA,MACA/W,EAAA,EAWA,SAAAoX,EAAAtE,EAAAvZ,EAAAyG,EAAA+W,EAAAI,GAKA,OAJAA,GACAF,EAAAnE,EAAAvZ,EAAAyG,EAAA,gDAEA0P,EAAA5O,MAAAgS,EAAAvZ,EAAAyG,EAAA+W,EAAA,MACA/W,EAAA,EA/cAsB,EAAA7B,UAAAvB,MAAA,SAAA/C,EAAAC,GACA,IAoBAic,EApBAnd,EAAArB,KAAAN,OAqBA,GApBA4C,MACAC,OAAAnC,IAAAmC,EAAAlB,IAAAkB,EAEAD,EAAA,GACAA,GAAAjB,EACAiB,EAAA,IAAAA,EAAA,IACGA,EAAAjB,IACHiB,EAAAjB,GAGAkB,EAAA,GACAA,GAAAlB,EACAkB,EAAA,IAAAA,EAAA,IACGA,EAAAlB,IACHkB,EAAAlB,GAGAkB,EAAAD,IAAAC,EAAAD,GAGAmG,EAAA0O,oBACAqH,EAAAxe,KAAA8V,SAAAxT,EAAAC,GACAic,EAAAxH,UAAAvO,EAAA7B,cACG,CACH,IAAA6X,EAAAlc,EAAAD,EACAkc,EAAA,IAAA/V,EAAAgW,OAAAre,GACA,QAAAgB,EAAA,EAAmBA,EAAAqd,IAAcrd,EACjCod,EAAApd,GAAApB,KAAAoB,EAAAkB,GAIA,OAAAkc,GAWA/V,EAAA7B,UAAA8X,WAAA,SAAAvX,EAAAvG,EAAA0d,GACAnX,GAAA,EACAvG,GAAA,EACA0d,GAAAR,EAAA3W,EAAAvG,EAAAZ,KAAAN,QAEA,IAAA6V,EAAAvV,KAAAmH,GACAwX,EAAA,EACAvd,EAAA,EACA,QAAAA,EAAAR,IAAA+d,GAAA,KACApJ,GAAAvV,KAAAmH,EAAA/F,GAAAud,EAGA,OAAApJ,GAGA9M,EAAA7B,UAAAgY,WAAA,SAAAzX,EAAAvG,EAAA0d,GACAnX,GAAA,EACAvG,GAAA,EACA0d,GACAR,EAAA3W,EAAAvG,EAAAZ,KAAAN,QAGA,IAAA6V,EAAAvV,KAAAmH,IAAAvG,GACA+d,EAAA,EACA,MAAA/d,EAAA,IAAA+d,GAAA,KACApJ,GAAAvV,KAAAmH,IAAAvG,GAAA+d,EAGA,OAAApJ,GAGA9M,EAAA7B,UAAAiY,UAAA,SAAA1X,EAAAmX,GAEA,OADAA,GAAAR,EAAA3W,EAAA,EAAAnH,KAAAN,QACAM,KAAAmH,IAGAsB,EAAA7B,UAAAkY,aAAA,SAAA3X,EAAAmX,GAEA,OADAA,GAAAR,EAAA3W,EAAA,EAAAnH,KAAAN,QACAM,KAAAmH,GAAAnH,KAAAmH,EAAA,OAGAsB,EAAA7B,UAAAsT,aAAA,SAAA/S,EAAAmX,GAEA,OADAA,GAAAR,EAAA3W,EAAA,EAAAnH,KAAAN,QACAM,KAAAmH,IAAA,EAAAnH,KAAAmH,EAAA,IAGAsB,EAAA7B,UAAAmY,aAAA,SAAA5X,EAAAmX,GAGA,OAFAA,GAAAR,EAAA3W,EAAA,EAAAnH,KAAAN,SAEAM,KAAAmH,GACAnH,KAAAmH,EAAA,MACAnH,KAAAmH,EAAA,QACA,SAAAnH,KAAAmH,EAAA,IAGAsB,EAAA7B,UAAAoY,aAAA,SAAA7X,EAAAmX,GAGA,OAFAA,GAAAR,EAAA3W,EAAA,EAAAnH,KAAAN,QAEA,SAAAM,KAAAmH,IACAnH,KAAAmH,EAAA,OACAnH,KAAAmH,EAAA,MACAnH,KAAAmH,EAAA,KAGAsB,EAAA7B,UAAAqY,UAAA,SAAA9X,EAAAvG,EAAA0d,GACAnX,GAAA,EACAvG,GAAA,EACA0d,GAAAR,EAAA3W,EAAAvG,EAAAZ,KAAAN,QAEA,IAAA6V,EAAAvV,KAAAmH,GACAwX,EAAA,EACAvd,EAAA,EACA,QAAAA,EAAAR,IAAA+d,GAAA,KACApJ,GAAAvV,KAAAmH,EAAA/F,GAAAud,EAMA,OAJAA,GAAA,IAEApJ,GAAAoJ,IAAApJ,GAAAhS,KAAAyE,IAAA,IAAApH,IAEA2U,GAGA9M,EAAA7B,UAAAsY,UAAA,SAAA/X,EAAAvG,EAAA0d,GACAnX,GAAA,EACAvG,GAAA,EACA0d,GAAAR,EAAA3W,EAAAvG,EAAAZ,KAAAN,QAEA,IAAA0B,EAAAR,EACA+d,EAAA,EACApJ,EAAAvV,KAAAmH,IAAA/F,GACA,MAAAA,EAAA,IAAAud,GAAA,KACApJ,GAAAvV,KAAAmH,IAAA/F,GAAAud,EAMA,OAJAA,GAAA,IAEApJ,GAAAoJ,IAAApJ,GAAAhS,KAAAyE,IAAA,IAAApH,IAEA2U,GAGA9M,EAAA7B,UAAAuY,SAAA,SAAAhY,EAAAmX,GAEA,OADAA,GAAAR,EAAA3W,EAAA,EAAAnH,KAAAN,QACA,IAAAM,KAAAmH,IACA,OAAAnH,KAAAmH,GAAA,GADAnH,KAAAmH,IAIAsB,EAAA7B,UAAAwY,YAAA,SAAAjY,EAAAmX,GACAA,GAAAR,EAAA3W,EAAA,EAAAnH,KAAAN,QACA,IAAA6V,EAAAvV,KAAAmH,GAAAnH,KAAAmH,EAAA,MACA,aAAAoO,EAAA,WAAAA,KAGA9M,EAAA7B,UAAAyY,YAAA,SAAAlY,EAAAmX,GACAA,GAAAR,EAAA3W,EAAA,EAAAnH,KAAAN,QACA,IAAA6V,EAAAvV,KAAAmH,EAAA,GAAAnH,KAAAmH,IAAA,EACA,aAAAoO,EAAA,WAAAA,KAGA9M,EAAA7B,UAAA0Y,YAAA,SAAAnY,EAAAmX,GAGA,OAFAA,GAAAR,EAAA3W,EAAA,EAAAnH,KAAAN,QAEAM,KAAAmH,GACAnH,KAAAmH,EAAA,MACAnH,KAAAmH,EAAA,OACAnH,KAAAmH,EAAA,QAGAsB,EAAA7B,UAAA2Y,YAAA,SAAApY,EAAAmX,GAGA,OAFAA,GAAAR,EAAA3W,EAAA,EAAAnH,KAAAN,QAEAM,KAAAmH,IAAA,GACAnH,KAAAmH,EAAA,OACAnH,KAAAmH,EAAA,MACAnH,KAAAmH,EAAA,IAGAsB,EAAA7B,UAAA4Y,YAAA,SAAArY,EAAAmX,GAEA,OADAA,GAAAR,EAAA3W,EAAA,EAAAnH,KAAAN,QACAmX,EAAA5P,KAAAjH,KAAAmH,GAAA,SAGAsB,EAAA7B,UAAA6Y,YAAA,SAAAtY,EAAAmX,GAEA,OADAA,GAAAR,EAAA3W,EAAA,EAAAnH,KAAAN,QACAmX,EAAA5P,KAAAjH,KAAAmH,GAAA,SAGAsB,EAAA7B,UAAA8Y,aAAA,SAAAvY,EAAAmX,GAEA,OADAA,GAAAR,EAAA3W,EAAA,EAAAnH,KAAAN,QACAmX,EAAA5P,KAAAjH,KAAAmH,GAAA,SAGAsB,EAAA7B,UAAA+Y,aAAA,SAAAxY,EAAAmX,GAEA,OADAA,GAAAR,EAAA3W,EAAA,EAAAnH,KAAAN,QACAmX,EAAA5P,KAAAjH,KAAAmH,GAAA,SASAsB,EAAA7B,UAAAgZ,YAAA,SAAAlf,EAAAyG,EAAAvG,EAAA0d,GAIA,GAHA5d,KACAyG,GAAA,EACAvG,GAAA,GACA0d,EAAA,CACA,IAAAuB,EAAAtc,KAAAyE,IAAA,IAAApH,GAAA,EACAod,EAAAhe,KAAAU,EAAAyG,EAAAvG,EAAAif,EAAA,GAGA,IAAAlB,EAAA,EACAvd,EAAA,EACApB,KAAAmH,GAAA,IAAAzG,EACA,QAAAU,EAAAR,IAAA+d,GAAA,KACA3e,KAAAmH,EAAA/F,GAAAV,EAAAie,EAAA,IAGA,OAAAxX,EAAAvG,GAGA6H,EAAA7B,UAAAkZ,YAAA,SAAApf,EAAAyG,EAAAvG,EAAA0d,GAIA,GAHA5d,KACAyG,GAAA,EACAvG,GAAA,GACA0d,EAAA,CACA,IAAAuB,EAAAtc,KAAAyE,IAAA,IAAApH,GAAA,EACAod,EAAAhe,KAAAU,EAAAyG,EAAAvG,EAAAif,EAAA,GAGA,IAAAze,EAAAR,EAAA,EACA+d,EAAA,EACA3e,KAAAmH,EAAA/F,GAAA,IAAAV,EACA,QAAAU,GAAA,IAAAud,GAAA,KACA3e,KAAAmH,EAAA/F,GAAAV,EAAAie,EAAA,IAGA,OAAAxX,EAAAvG,GAGA6H,EAAA7B,UAAAmZ,WAAA,SAAArf,EAAAyG,EAAAmX,GAMA,OALA5d,KACAyG,GAAA,EACAmX,GAAAN,EAAAhe,KAAAU,EAAAyG,EAAA,SACAsB,EAAA0O,sBAAAzW,EAAA6C,KAAA+E,MAAA5H,IACAV,KAAAmH,GAAA,IAAAzG,EACAyG,EAAA,GAWAsB,EAAA7B,UAAAoZ,cAAA,SAAAtf,EAAAyG,EAAAmX,GAUA,OATA5d,KACAyG,GAAA,EACAmX,GAAAN,EAAAhe,KAAAU,EAAAyG,EAAA,WACAsB,EAAA0O,qBACAnX,KAAAmH,GAAA,IAAAzG,EACAV,KAAAmH,EAAA,GAAAzG,IAAA,GAEAud,EAAAje,KAAAU,EAAAyG,GAAA,GAEAA,EAAA,GAGAsB,EAAA7B,UAAAqZ,cAAA,SAAAvf,EAAAyG,EAAAmX,GAUA,OATA5d,KACAyG,GAAA,EACAmX,GAAAN,EAAAhe,KAAAU,EAAAyG,EAAA,WACAsB,EAAA0O,qBACAnX,KAAAmH,GAAAzG,IAAA,EACAV,KAAAmH,EAAA,OAAAzG,GAEAud,EAAAje,KAAAU,EAAAyG,GAAA,GAEAA,EAAA,GAUAsB,EAAA7B,UAAAsZ,cAAA,SAAAxf,EAAAyG,EAAAmX,GAYA,OAXA5d,KACAyG,GAAA,EACAmX,GAAAN,EAAAhe,KAAAU,EAAAyG,EAAA,gBACAsB,EAAA0O,qBACAnX,KAAAmH,EAAA,GAAAzG,IAAA,GACAV,KAAAmH,EAAA,GAAAzG,IAAA,GACAV,KAAAmH,EAAA,GAAAzG,IAAA,EACAV,KAAAmH,GAAA,IAAAzG,GAEAyd,EAAAne,KAAAU,EAAAyG,GAAA,GAEAA,EAAA,GAGAsB,EAAA7B,UAAAuZ,cAAA,SAAAzf,EAAAyG,EAAAmX,GAYA,OAXA5d,KACAyG,GAAA,EACAmX,GAAAN,EAAAhe,KAAAU,EAAAyG,EAAA,gBACAsB,EAAA0O,qBACAnX,KAAAmH,GAAAzG,IAAA,GACAV,KAAAmH,EAAA,GAAAzG,IAAA,GACAV,KAAAmH,EAAA,GAAAzG,IAAA,EACAV,KAAAmH,EAAA,OAAAzG,GAEAyd,EAAAne,KAAAU,EAAAyG,GAAA,GAEAA,EAAA,GAGAsB,EAAA7B,UAAAwZ,WAAA,SAAA1f,EAAAyG,EAAAvG,EAAA0d,GAGA,GAFA5d,KACAyG,GAAA,GACAmX,EAAA,CACA,IAAAha,EAAAf,KAAAyE,IAAA,IAAApH,EAAA,GAEAod,EAAAhe,KAAAU,EAAAyG,EAAAvG,EAAA0D,EAAA,GAAAA,GAGA,IAAAlD,EAAA,EACAud,EAAA,EACA0B,EAAA,EACArgB,KAAAmH,GAAA,IAAAzG,EACA,QAAAU,EAAAR,IAAA+d,GAAA,KACAje,EAAA,OAAA2f,GAAA,IAAArgB,KAAAmH,EAAA/F,EAAA,KACAif,EAAA,GAEArgB,KAAAmH,EAAA/F,IAAAV,EAAAie,GAAA,GAAA0B,EAAA,IAGA,OAAAlZ,EAAAvG,GAGA6H,EAAA7B,UAAA0Z,WAAA,SAAA5f,EAAAyG,EAAAvG,EAAA0d,GAGA,GAFA5d,KACAyG,GAAA,GACAmX,EAAA,CACA,IAAAha,EAAAf,KAAAyE,IAAA,IAAApH,EAAA,GAEAod,EAAAhe,KAAAU,EAAAyG,EAAAvG,EAAA0D,EAAA,GAAAA,GAGA,IAAAlD,EAAAR,EAAA,EACA+d,EAAA,EACA0B,EAAA,EACArgB,KAAAmH,EAAA/F,GAAA,IAAAV,EACA,QAAAU,GAAA,IAAAud,GAAA,KACAje,EAAA,OAAA2f,GAAA,IAAArgB,KAAAmH,EAAA/F,EAAA,KACAif,EAAA,GAEArgB,KAAAmH,EAAA/F,IAAAV,EAAAie,GAAA,GAAA0B,EAAA,IAGA,OAAAlZ,EAAAvG,GAGA6H,EAAA7B,UAAA2Z,UAAA,SAAA7f,EAAAyG,EAAAmX,GAOA,OANA5d,KACAyG,GAAA,EACAmX,GAAAN,EAAAhe,KAAAU,EAAAyG,EAAA,YACAsB,EAAA0O,sBAAAzW,EAAA6C,KAAA+E,MAAA5H,IACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GACAV,KAAAmH,GAAA,IAAAzG,EACAyG,EAAA,GAGAsB,EAAA7B,UAAA4Z,aAAA,SAAA9f,EAAAyG,EAAAmX,GAUA,OATA5d,KACAyG,GAAA,EACAmX,GAAAN,EAAAhe,KAAAU,EAAAyG,EAAA,gBACAsB,EAAA0O,qBACAnX,KAAAmH,GAAA,IAAAzG,EACAV,KAAAmH,EAAA,GAAAzG,IAAA,GAEAud,EAAAje,KAAAU,EAAAyG,GAAA,GAEAA,EAAA,GAGAsB,EAAA7B,UAAA6Z,aAAA,SAAA/f,EAAAyG,EAAAmX,GAUA,OATA5d,KACAyG,GAAA,EACAmX,GAAAN,EAAAhe,KAAAU,EAAAyG,EAAA,gBACAsB,EAAA0O,qBACAnX,KAAAmH,GAAAzG,IAAA,EACAV,KAAAmH,EAAA,OAAAzG,GAEAud,EAAAje,KAAAU,EAAAyG,GAAA,GAEAA,EAAA,GAGAsB,EAAA7B,UAAA8Z,aAAA,SAAAhgB,EAAAyG,EAAAmX,GAYA,OAXA5d,KACAyG,GAAA,EACAmX,GAAAN,EAAAhe,KAAAU,EAAAyG,EAAA,0BACAsB,EAAA0O,qBACAnX,KAAAmH,GAAA,IAAAzG,EACAV,KAAAmH,EAAA,GAAAzG,IAAA,EACAV,KAAAmH,EAAA,GAAAzG,IAAA,GACAV,KAAAmH,EAAA,GAAAzG,IAAA,IAEAyd,EAAAne,KAAAU,EAAAyG,GAAA,GAEAA,EAAA,GAGAsB,EAAA7B,UAAA+Z,aAAA,SAAAjgB,EAAAyG,EAAAmX,GAaA,OAZA5d,KACAyG,GAAA,EACAmX,GAAAN,EAAAhe,KAAAU,EAAAyG,EAAA,0BACAzG,EAAA,IAAAA,EAAA,WAAAA,EAAA,GACA+H,EAAA0O,qBACAnX,KAAAmH,GAAAzG,IAAA,GACAV,KAAAmH,EAAA,GAAAzG,IAAA,GACAV,KAAAmH,EAAA,GAAAzG,IAAA,EACAV,KAAAmH,EAAA,OAAAzG,GAEAyd,EAAAne,KAAAU,EAAAyG,GAAA,GAEAA,EAAA,GAgBAsB,EAAA7B,UAAAga,aAAA,SAAAlgB,EAAAyG,EAAAmX,GACA,OAAAD,EAAAre,KAAAU,EAAAyG,GAAA,EAAAmX,IAGA7V,EAAA7B,UAAAia,aAAA,SAAAngB,EAAAyG,EAAAmX,GACA,OAAAD,EAAAre,KAAAU,EAAAyG,GAAA,EAAAmX,IAWA7V,EAAA7B,UAAAka,cAAA,SAAApgB,EAAAyG,EAAAmX,GACA,OAAAC,EAAAve,KAAAU,EAAAyG,GAAA,EAAAmX,IAGA7V,EAAA7B,UAAAma,cAAA,SAAArgB,EAAAyG,EAAAmX,GACA,OAAAC,EAAAve,KAAAU,EAAAyG,GAAA,EAAAmX,IAIA7V,EAAA7B,UAAA4R,KAAA,SAAArL,EAAA6T,EAAA1e,EAAAC,GAQA,GAPAD,MAAA,GACAC,GAAA,IAAAA,MAAAvC,KAAAN,QACAshB,GAAA7T,EAAAzN,SAAAshB,EAAA7T,EAAAzN,QACAshB,MAAA,GACAze,EAAA,GAAAA,EAAAD,IAAAC,EAAAD,GAGAC,IAAAD,EAAA,SACA,OAAA6K,EAAAzN,QAAA,IAAAM,KAAAN,OAAA,SAGA,GAAAshB,EAAA,EACA,UAAA1J,WAAA,6BAEA,GAAAhV,EAAA,GAAAA,GAAAtC,KAAAN,OAAA,UAAA4X,WAAA,6BACA,GAAA/U,EAAA,YAAA+U,WAAA,2BAGA/U,EAAAvC,KAAAN,SAAA6C,EAAAvC,KAAAN,QACAyN,EAAAzN,OAAAshB,EAAAze,EAAAD,IACAC,EAAA4K,EAAAzN,OAAAshB,EAAA1e,GAGA,IACAlB,EADAC,EAAAkB,EAAAD,EAGA,GAAAtC,OAAAmN,GAAA7K,EAAA0e,KAAAze,EAEA,IAAAnB,EAAAC,EAAA,EAAqBD,GAAA,IAAQA,EAC7B+L,EAAA/L,EAAA4f,GAAAhhB,KAAAoB,EAAAkB,QAEG,GAAAjB,EAAA,MAAAoH,EAAA0O,oBAEH,IAAA/V,EAAA,EAAeA,EAAAC,IAASD,EACxB+L,EAAA/L,EAAA4f,GAAAhhB,KAAAoB,EAAAkB,QAGApB,WAAA0F,UAAAoO,IAAAjW,KACAoO,EACAnN,KAAA8V,SAAAxT,IAAAjB,GACA2f,GAIA,OAAA3f,GAOAoH,EAAA7B,UAAAoR,KAAA,SAAAzC,EAAAjT,EAAAC,EAAA0V,GAEA,qBAAA1C,EAAA,CASA,GARA,kBAAAjT,GACA2V,EAAA3V,EACAA,EAAA,EACAC,EAAAvC,KAAAN,QACK,kBAAA6C,IACL0V,EAAA1V,EACAA,EAAAvC,KAAAN,QAEA,IAAA6V,EAAA7V,OAAA,CACA,IAAAyB,EAAAoU,EAAAjU,WAAA,GACAH,EAAA,MACAoU,EAAApU,GAGA,QAAAf,IAAA6X,GAAA,kBAAAA,EACA,UAAAP,UAAA,6BAEA,qBAAAO,IAAAxP,EAAA0P,WAAAF,GACA,UAAAP,UAAA,qBAAAO,OAEG,kBAAA1C,IACHA,GAAA,KAIA,GAAAjT,EAAA,GAAAtC,KAAAN,OAAA4C,GAAAtC,KAAAN,OAAA6C,EACA,UAAA+U,WAAA,sBAGA,GAAA/U,GAAAD,EACA,OAAAtC,KAQA,IAAAoB,EACA,GANAkB,KAAA,EACAC,OAAAnC,IAAAmC,EAAAvC,KAAAN,OAAA6C,IAAA,EAEAgT,MAAA,GAGA,kBAAAA,EACA,IAAAnU,EAAAkB,EAAmBlB,EAAAmB,IAASnB,EAC5BpB,KAAAoB,GAAAmU,MAEG,CACH,IAAAsI,EAAApV,EAAA8P,SAAAhD,GACAA,EACAuD,EAAA,IAAArQ,EAAA8M,EAAA0C,GAAAnM,YACAzK,EAAAwc,EAAAne,OACA,IAAA0B,EAAA,EAAeA,EAAAmB,EAAAD,IAAiBlB,EAChCpB,KAAAoB,EAAAkB,GAAAub,EAAAzc,EAAAC,GAIA,OAAArB,MAMA,IAAAihB,EAAA,qBAEA,SAAAC,EAAApE,GAIA,GAFAA,EAAAqE,EAAArE,GAAA/Q,QAAAkV,EAAA,IAEAnE,EAAApd,OAAA,WAEA,MAAAod,EAAApd,OAAA,MACAod,GAAA,IAEA,OAAAA,EAGA,SAAAqE,EAAArE,GACA,OAAAA,EAAAsE,KAAAtE,EAAAsE,OACAtE,EAAA/Q,QAAA,iBAGA,SAAA6R,EAAAjf,GACA,OAAAA,EAAA,OAAAA,EAAAmN,SAAA,IACAnN,EAAAmN,SAAA,IAGA,SAAAgN,EAAAvU,EAAA8c,GAEA,IAAA7F,EADA6F,KAAAtZ,IAMA,IAJA,IAAArI,EAAA6E,EAAA7E,OACA4hB,EAAA,KACAzD,EAAA,GAEAzc,EAAA,EAAiBA,EAAA1B,IAAY0B,EAAA,CAI7B,GAHAoa,EAAAjX,EAAAjD,WAAAF,GAGAoa,EAAA,OAAAA,EAAA,OAEA,IAAA8F,EAAA,CAEA,GAAA9F,EAAA,QAEA6F,GAAA,OAAAxD,EAAApb,KAAA,aACA,SACS,GAAArB,EAAA,IAAA1B,EAAA,EAET2hB,GAAA,OAAAxD,EAAApb,KAAA,aACA,SAIA6e,EAAA9F,EAEA,SAIA,GAAAA,EAAA,QACA6F,GAAA,OAAAxD,EAAApb,KAAA,aACA6e,EAAA9F,EACA,SAIAA,EAAA,OAAA8F,EAAA,UAAA9F,EAAA,YACK8F,IAELD,GAAA,OAAAxD,EAAApb,KAAA,aAMA,GAHA6e,EAAA,KAGA9F,EAAA,KACA,IAAA6F,GAAA,WACAxD,EAAApb,KAAA+Y,QACK,GAAAA,EAAA,MACL,IAAA6F,GAAA,WACAxD,EAAApb,KACA+Y,GAAA,MACA,GAAAA,EAAA,UAEK,GAAAA,EAAA,OACL,IAAA6F,GAAA,WACAxD,EAAApb,KACA+Y,GAAA,OACAA,GAAA,SACA,GAAAA,EAAA,SAEK,MAAAA,EAAA,SASL,UAAA/Z,MAAA,sBARA,IAAA4f,GAAA,WACAxD,EAAApb,KACA+Y,GAAA,OACAA,GAAA,UACAA,GAAA,SACA,GAAAA,EAAA,MAOA,OAAAqC,EAGA,SAAA/C,EAAAgC,GAEA,IADA,IAAAyE,EAAA,GACAngB,EAAA,EAAiBA,EAAA0b,EAAApd,SAAgB0B,EAEjCmgB,EAAA9e,KAAA,IAAAqa,EAAAxb,WAAAF,IAEA,OAAAmgB,EAGA,SAAArG,EAAA4B,EAAAuE,GAGA,IAFA,IAAAnZ,EAAAsZ,EAAAC,EACAF,EAAA,GACAngB,EAAA,EAAiBA,EAAA0b,EAAApd,SAAgB0B,EAAA,CACjC,IAAAigB,GAAA,WAEAnZ,EAAA4U,EAAAxb,WAAAF,GACAogB,EAAAtZ,GAAA,EACAuZ,EAAAvZ,EAAA,IACAqZ,EAAA9e,KAAAgf,GACAF,EAAA9e,KAAA+e,GAGA,OAAAD,EAGA,SAAAxI,EAAA+D,GACA,OAAAlG,EAAA/V,YAAAqgB,EAAApE,IAGA,SAAAlC,GAAA8G,EAAAC,EAAAxa,EAAAzH,GACA,QAAA0B,EAAA,EAAiBA,EAAA1B,IAAY0B,EAAA,CAC7B,GAAAA,EAAA+F,GAAAwa,EAAAjiB,QAAA0B,GAAAsgB,EAAAhiB,OAAA,MACAiiB,EAAAvgB,EAAA+F,GAAAua,EAAAtgB,GAEA,OAAAA,EAGA,SAAAqX,GAAAlD,GACA,OAAAA,kEC3vDA,SAAAoB,EAAAiL,GAAA,IAAAC,EAAAC,EAcAC,EAAA,SAAAC,EAAAC,GAEA,IAAAC,EAAA,sFA4GA,SAAAC,EAAAC,EAAAC,GACA,SAAAC,EAAAC,GACA,OAAAA,EAAAC,QAAAD,EAAAE,QAAAF,EAAAG,QAAAH,EAAA7J,KAGA,IAAAiK,EAAA,GAEAA,GAAA,WAAAP,EAAA3Y,OACAkZ,GAAA,cAAAP,EAAAQ,UACAD,GAAA,aAAAP,EAAAS,mBACAF,GAAA,sBAAAP,EAAAU,kBACAH,GAAA,6BAAAP,EAAAW,wBAEA,IAAAX,EAAAG,QAAAS,YACAL,GAAA,mBAGAA,GAAA,2BAAAP,EAAAa,uBAEAb,EAAAc,0BACAP,GAAA,gCACAA,GAAA,0BAAAP,EAAAe,sBAAA,IAGAR,GAAA,UAAAS,KAAAC,UAAAjB,EAAAjZ,OAAA,IAEAiZ,EAAAkB,yBACAX,GAAAP,EAAAkB,wBAGA,IACAC,GAAAC,QAAA,GACS,MAAAvd,IAMT,GAJAmc,EAAAqB,YACArB,EAAAqB,UAAA,KAGA,KAAArB,EAAAqB,UAAA/I,OAAA0H,EAAAqB,UAAA/jB,OAAA,KAEA,0CAGA0iB,EAAAsB,aACA,KAAAtB,EAAAqB,UACA9U,QAAAiG,KAAA,qBAAA+O,SAAAC,OAAA,KAEAjV,QAAAiG,KAAA,qBAAAwN,EAAAqB,YAIA,IACArB,EAAAyB,OAAAN,GAAAnB,EAAAqB,UAAAd,GACS,MAAA1c,GACTmc,EAAAyB,OAAAN,GAAAO,QAAA1B,EAAAqB,UAAAd,EAAAP,EAAA2B,eAGA,IAAAC,EAAA5B,EAAA6B,kBAcA,SAAAC,EAAA7Z,EAAAlB,GACAiZ,EAAA+B,YAAA9Z,KACA+X,EAAA+B,YAAA9Z,GAAA,CACAZ,OAAAY,EACAlB,MAAA,KAIAiZ,EAAA+B,YAAA9Z,GAAAlB,QAGA,SAAAib,EAAAC,GACA,GAAAA,EAAAha,cAAA+X,EAAA3Y,OAYA,GAVA2Y,EAAAkC,MAAAD,EAAAE,SAAAnC,EAAAkC,MAAAD,EAAAE,QAAApb,OAAAkb,UAAAlb,QACAiZ,EAAAkC,MAAAD,EAAAE,QAAApb,MAAAkb,EAAAlb,MACAiZ,EAAAoC,mBAAA,CACA/a,OAAA4a,EAAAE,OACApb,MAAAkb,EAAAlb,QAGA+a,EAAAG,EAAAE,OAAAF,EAAAlb,QAGAkb,UAAAI,kBAAArC,EAAAkC,MAAAD,EAAAE,QAAA,CACA,IAAAG,EAAAtC,EAAAuC,aAAAN,UAAAO,UACA,IAAAF,aACA,OAGA,IAAAG,EAAAR,UAAAQ,OAEA,aAAAA,GAAA,aAAAA,GAAA,mBAAAA,EAKA,OAJAzC,EAAA+B,YAAAO,EAAAjb,UACAib,EAAAvb,MAAAiZ,EAAA+B,YAAAO,EAAAjb,QAAAN,YAEAiZ,EAAA0C,cAAAJ,GAIA,IAAAlY,EAAA,QAAA6X,UAAA7X,KAAA6X,UAAA7X,KAAA,KAEA,mBAAAkY,SAAAG,IACAH,SAAAG,GAAArY,QAKA,0BAAA6X,UAAA,CAKA,GAAAA,UAAAU,gBAmBA,OAlBA,IAAAV,UAAAU,gBAAApjB,QAAA0iB,EAAAE,SACAF,UAAAU,gBAAAtiB,KAAA4hB,EAAAE,aAGAF,UAAAU,gBAAAnb,QAAA,SAAAob,GACAhB,EAAA5B,EAAAkC,MAAAU,GAAA,mCAAAA,EAAA,CACAC,wBAAA,CACAC,oBAAA9C,EAAA+C,eAAAC,UAAAF,oBACAG,oBAAAjD,EAAA+C,eAAAC,UAAAC,qBAEAC,yBAAA,CACAJ,oBAAA9C,EAAAG,QAAAgD,SAAAnD,EAAAG,QAAAC,MAAAJ,EAAA+C,eAAAC,UAAAF,oBACAG,oBAAAjD,EAAAG,QAAAgD,SAAAnD,EAAAG,QAAAE,SAAAL,EAAAG,QAAAG,OAAAN,EAAA+C,eAAAC,UAAAC,qBAEAG,WAAApD,EAAAG,QAAAgD,QAAA,YAAAnD,EAAAqD,UACAC,WAAApD,EAAAF,EAAAG,aAMA,GAAA8B,UAAAsB,eAAA,CACA,GAAAtB,UAAAsB,gBAAAvD,EAAA3Y,OAAA,OACA,GAAA2Y,EAAAkC,MAAAD,UAAAsB,gBAAA,OAEA3B,EAAA4B,cAAAvB,UAAAsB,eAAAtB,UAAAwB,iBAAA,CACAZ,wBAAA,CACAC,oBAAA9C,EAAA+C,eAAAC,UAAAF,oBACAG,oBAAAjD,EAAA+C,eAAAC,UAAAC,qBAEAC,yBAAA,CACAJ,oBAAA9C,EAAAG,QAAAgD,SAAAnD,EAAAG,QAAAC,MAAAJ,EAAA+C,eAAAC,UAAAF,oBACAG,oBAAAjD,EAAAG,QAAAgD,SAAAnD,EAAAG,QAAAE,SAAAL,EAAAG,QAAAG,OAAAN,EAAA+C,eAAAC,UAAAC,qBAEAG,WAAApD,EAAAG,QAAAgD,QAAA,YAAAnD,EAAAqD,UACAC,WAAApD,EAAAF,EAAAG,gBAKA,GAAA8B,UAAAyB,gBACA1D,EAAA2D,cAAArmB,SACA0iB,EAAA4D,sBAAA,GAGA5D,EAAA4D,sBAGAxX,WAAA,WACA4V,EAAAC,IACqB,QAKrB,GAAAA,UAAA4B,yBAAA5B,EAAAE,SAAAnC,EAAA3Y,OAAA,CACA2Y,EAAAkC,MAAAD,EAAAE,SACAnC,EAAA8D,WAAA7B,EAAAE,QAGA,IAAAsB,EAAA,CACA1c,MAAAkb,EAAAlb,OAAA,GACA8b,wBAAAZ,UAAAiB,0BAAA,CACAJ,oBAAA9C,EAAA+C,eAAAC,UAAAF,oBACAG,oBAAAjD,EAAA+C,eAAAC,UAAAC,qBAEAC,yBAAAjB,UAAAY,yBAAA,CACAC,oBAAA9C,EAAAG,QAAAgD,SAAAnD,EAAAG,QAAAC,MAAAJ,EAAA+C,eAAAC,UAAAF,oBACAG,oBAAAjD,EAAAG,QAAAgD,SAAAnD,EAAAG,QAAAE,SAAAL,EAAAG,QAAAG,OAAAN,EAAA+C,eAAAC,UAAAC,qBAEAG,SAAA,qBAAAnB,UAAAmB,SAAAnB,UAAAmB,WAAApD,EAAAG,QAAAgD,QAAA,YAAAnD,EAAAqD,UACAC,WAAA,qBAAArB,UAAAqB,WAAArB,UAAAqB,WAAApD,EAAAF,EAAAG,SACA4D,oBAAA,qBAAA9B,UAAAmB,SAAAnB,UAAAmB,WAAApD,EAAAG,QAAAgD,QAAA,YAAAnD,EAAAqD,UACAW,wBAAA/B,UAAA8B,oBACAE,sBAAAhC,EACAiC,gBAAA,cAGAlE,EAAAmE,iBAAAlC,EAAAE,OAAAsB,OAvBA,CAkCA,GAPAxB,UAAAmC,aACApE,EAAAkC,MAAAD,UAAAoC,WACArE,EAAAkC,MAAAD,UAAAqC,SAAAtE,EAAAkC,MAAAD,UAAAoC,gBACArE,EAAAkC,MAAAD,UAAAoC,UAIApC,UAAAsC,SAOA,OANA3C,EAAA4C,WAAAvC,EAAAE,aAEAF,UAAAtB,wBACAX,EAAAyE,SAMA7C,EAAA8C,qBAAAzC,YAAAE,cAxGAnC,EAAA8D,WAAA7B,EAAAE,QA7DAnC,EAAAyB,OAAAkD,GAAA,8BAAA1c,EAAAlB,GACAiZ,EAAAkC,MAAAja,KACA+X,EAAAkC,MAAAja,GAAAlB,QAEAiZ,EAAAoC,mBAAA,CACA/a,OAAAY,EACAlB,UAGA+a,EAAA7Z,EAAAlB,MA+JAiZ,EAAAyB,OAAAkD,GAAA3E,EAAAS,mBAAAuB,GAEA,IAAA4C,GAAA,EAEA5E,EAAAyB,OAAAoD,WAAA,WACAD,GAAA,GAGA5E,EAAAyB,OAAAkD,GAAA,qBACAC,IAGAA,GAAA,EAEA5E,EAAAsB,YACA/U,QAAAiG,KAAA,mCAGApG,WAAA,WACA4T,EAAAyB,OAAAqD,KAAA,qBAAA9E,EAAAjZ,QACa,KAEbkZ,GACAA,EAAAD,EAAAyB,WAIAzB,EAAAyB,OAAAkD,GAAA,sBAAAtX,GACA2S,EAAA+E,mBAAA1X,KAGA2S,EAAAyB,OAAAkD,GAAA,iBAAAtX,GACA2S,EAAAgF,cAAA3X,KAGA2S,EAAAyB,OAAAkD,GAAA,6BAAA1c,GACAA,IAAA+X,EAAA3Y,SAIA2Y,EAAAiF,oBAAA,CACA5d,OAAAY,EACAid,OAAA,UACAne,MAAAiZ,EAAAkC,MAAAja,IAAA+X,EAAAkC,MAAAja,GAAAlB,OAAkG,KAGlGiZ,EAAA8D,WAAA7b,MAGA+X,EAAAyB,OAAAkD,GAAA,0BAAAtd,GACAA,IAAA2Y,EAAA3Y,QAIA2Y,EAAAiF,oBAAA,CACA5d,SACA6d,OAAA,SACAne,MAAAiZ,EAAAkC,MAAA7a,IAAA2Y,EAAAkC,MAAA7a,GAAAN,OAAsF,OAItFiZ,EAAAyB,OAAAkD,GAAA,iCAAAnE,EAAAzZ,GACAiZ,EAAAyE,QACAzE,EAAAmF,sBAAA,CACA3E,YACAnZ,OAAAmZ,EACAzZ,YAIAiZ,EAAAyB,OAAAkD,GAAA,gCAAAS,EAAAC,GACArF,EAAAsF,qBAAAF,EAAAC,KAGArF,EAAAyB,OAAAkD,GAAA,gBAAAxe,GACA6Z,EAAAsB,YACA/U,QAAAwC,MAAA,cAAA5I,KAGA6Z,EAAAyB,OAAAkD,GAAA,+CAAArO,GACA0J,EAAAuF,kCAAAjP,KAGA0J,EAAAyB,OAAAkD,GAAA,gCAAAnE,GACAA,GAAAR,EAAAQ,YACAR,EAAAwF,aAAA,KAIA,SAAAC,EAAAzF,GACA,IAAA0F,EAAA9nB,KAEA+nB,EAAA,4EAyXA,SAAAC,IACA5F,EAAAzZ,IAAA,IAAAD,iBACA0Z,EAAAzZ,IAAA6B,WAAA,SAAAlB,GACA8Y,EAAA6F,eAAA3e,IAEA8Y,EAAAzZ,IAAA2B,QAAA,SAAArB,GACAmZ,EAAA8F,YAAAjf,IAEAmZ,EAAAzZ,IAAA4B,MAAA,SAAAtB,GACAmZ,EAAA+F,UAAAlf,IAjYAmZ,EAAAkC,MAAA,CACA8D,UAAA,WACA,IAAAC,EAAA,EACA,QAAAC,KAAAtoB,MACA,GAAA+nB,EAAApmB,QAAA2mB,IACAD,IAGA,OAAAA,GAEAE,YAAA,WACA,IAAAC,EACA,QAAAF,KAAAtoB,MACA,GAAA+nB,EAAApmB,QAAA2mB,KACAE,EAAAxoB,KAAAsoB,IAGA,OAAAE,GAEAC,mBAAA,SAAAlE,GACA,IAAAmE,EAAA,GACA,QAAAJ,KAAAtoB,MACA,GAAA+nB,EAAApmB,QAAA2mB,OAAA/D,GACAmE,EAAAjmB,KAAA6lB,GAGA,OAAAI,GAEA9e,QAAA,SAAA+e,GACA3oB,KAAAyoB,qBAAA7e,QAAA,SAAAob,GACA2D,EAAAvG,EAAAkC,MAAAU,OAGA4D,KAAA,SAAAlQ,EAAArO,GACA,IAAAgN,EAAArX,KAEA,IAAA6oB,EAAAnQ,EAAAnM,QAAAsc,EAAAnQ,EAAAlM,MAAA,CACA,GAAA4V,EAAA0G,kBAEA,YADAhB,EAAAiB,UAAArQ,EAAArO,GAIA,kBAAAqO,IACAA,EAAA0K,KAAAC,UAAA3K,IAIA,YAAAA,EAAAlM,MAAAkM,aAAAzE,aAAAyE,aAAAlE,SAAA,CAcA,GAJA,SAAAkE,EAAAlM,OACAkM,EAAA0K,KAAAC,UAAA3K,IAGArO,EAAA,CACA,IAAA2e,EAAA5G,EAAAkC,MAAAja,GACA,GAAA2e,EACA,OAAAA,EAAAC,SAAAvpB,YASAspB,EAAAC,SAAArf,QAAA,SAAAsf,GACAA,EAAAN,KAAAlQ,MATA0J,EAAAkC,MAAAja,GAAA8e,oBACA/G,EAAAgH,YAAA/e,QACAmE,WAAA,WACA6I,EAAAuR,KAAAlQ,EAAArO,IAC6B,MAW7BrK,KAAAyoB,qBAAA7e,QAAA,SAAAob,GACA,IAAA3N,EAAA2N,GAAAiE,SAAAvpB,OAQA,OAPA0iB,EAAAkC,MAAAU,GAAAmE,oBACA/G,EAAAgH,YAAApE,QACAxW,WAAA,WACA6I,EAAA2N,GAAAiE,SAAArf,QAAA,SAAAsf,GACAA,EAAAN,KAAAlQ,MAEyB,KAIzBrB,EAAA2N,GAAAiE,SAAArf,QAAA,SAAAsf,GACAA,EAAAN,KAAAlQ,YA7CA2Q,EAAAT,KAAA,CACAU,KAAA5Q,EACAwQ,QAAAlpB,KACAoiB,aACA/X,mBA+CArK,KAAAgK,KAAAoY,EAAA3Y,OAEAzJ,KAAAupB,eAAA,SAAAC,EAAAnf,EAAAwb,GAKA,OAJAA,IACAA,EAAA,IAGA,CACA4D,eAAA5D,EAAA4D,gBAAA,GACAC,mBAAAtH,EACAiE,sBAAAR,EAAAQ,sBACA5c,OAAAY,EACA4a,wBAAAY,EAAAZ,wBACAK,yBAAAO,EAAAP,yBACAa,sBAAAN,EAAAM,oBACAC,wBAAAP,EAAAO,sBACAuD,oBAAA9D,EAAA8D,kBACAC,QAAA/D,EAAA+D,QACAX,SAAApD,EAAAoD,UAAA,GACAY,WAAA,SAAAC,GACAhC,EAAAiC,oBAAAD,EAAAzf,IAEA2f,iBAAA,SAAAC,GACAA,EAAAC,EAAAC,kBAAA/H,EAAA6H,GACAA,GACAnC,EAAAiC,oBAAAE,EAAA5f,IAGAmf,YACAY,qBAAA,SAAA/F,GAGA,IAFAjC,EAAAzZ,KAAAyZ,EAAA0G,mBAAAd,IAEA,iBAAA3D,GAAAjC,EAAA0G,kBAAA,CAKA,IAAAzR,EAAArX,KAEAqkB,aAAApQ,aAAAoQ,aAAA7P,SACA4N,EAAAzZ,IAAA2C,gBAAA+Y,EAAA,SAAAzT,GACAyG,EAAA+S,qBAAAxZ,KAKAyT,EAAAjZ,kBACAgX,EAAAzZ,IAAAmB,aAAAua,EAAA,SAAAna,EAAAmgB,GACAjI,EAAAkC,MAAAja,GAAA4e,SAAArf,QAAA,SAAAsf,GACAA,EAAAN,KAAA1e,MAEyBG,GAIzBga,EAAAja,aACAgY,EAAAzZ,IAAAyB,aAAAia,GAIAjC,EAAAzZ,IAAAuC,SAAAmZ,EAAA,SAAAiG,GACAlI,EAAAkC,MAAAja,GAAAie,KAAAY,QAAAN,KAAA0B,UA5BAxC,EAAAsC,qBAAA/F,EAAAha,IA+BAkgB,mBAAA,SAAA3b,GACAkZ,EAAAyC,mBAAA3b,EAAAvE,IAEAmgB,oBAAA,SAAAtB,GACApB,EAAA0C,oBAAAtB,EAAA7e,IAEAogB,oBAAA,SAAAhb,GACAqY,EAAA2C,oBAAAhb,EAAApF,IAEAqgB,eAAA,SAAAhG,GACAtC,EAAAkC,MAAAja,IACA+X,EAAAkC,MAAAja,GAAAsgB,QAAAloB,KAAAiiB,GAGAoD,EAAA8C,qBAAAlG,EAAAra,IAEAwgB,sBAAA,SAAAnG,GACAoD,EAAAgD,sBAAApG,EAAAra,IAEA0gB,mBAAA,SAAAC,GACAlD,EAAAiD,mBAAAC,GAEA,QAAAA,EAAAC,oBACAnD,EAAAoD,qBAAA7gB,EAAA2gB,GAGA,cAAAA,EAAAC,oBACAnD,EAAAqD,uBAAA9gB,EAAA2gB,IAGA,IAAAA,EAAAC,mBAAAG,OAAA,qBACAtD,EAAAlB,WAAAvc,GACAyd,EAAAuD,eAAAhhB,OAMArK,KAAA4lB,cAAA,SAAAvb,EAAAwb,GACA,KAAAzD,EAAAa,wBAAAb,EAAAqG,qBAAA/oB,QAAA,CAYA,GARAmmB,KAAA,GAEAzD,EAAAwF,aAAAxF,EAAAG,QAAAC,OAAA,YAAAJ,EAAAG,QAAAC,QAAAqD,EAAA4D,iBACA5D,EAAAL,UAAA,EACAK,EAAAH,YAAA,EACAG,EAAAtD,QAAAH,EAAAG,UAGAsD,EAAAL,WAAAK,EAAAH,WAMA,OALAG,EAAAL,UAAA,OACAxlB,KAAA+pB,oBAAA,CACAuB,aAAA,EACAzF,mBACiBxb,GAIjBwb,EAAAzD,EAAAmJ,mBAAA1F,EAAAxb,GACA,IAAAmhB,EAAAxrB,KAAAupB,eAAA,KAAAlf,EAAAwb,GACAzD,EAAAkC,MAAAja,GAAA,IAAAohB,EAAAD,KAGAxrB,KAAA0rB,oBAAA,SAAAlC,EAAAnf,EAAAwb,GACAA,EAAAzD,EAAAmJ,mBAAA1F,GAAA,GAAiFxb,GAEjF,IAAAmhB,EAAAxrB,KAAAupB,eAAAC,EAAAnf,EAAAwb,GACAzD,EAAAkC,MAAAja,GAAA,IAAAohB,EAAAD,IAGAxrB,KAAA2rB,gBAAA,SAAAthB,EAAAwb,EAAA2D,GACA,GAAApH,EAAAkC,MAAAja,GAAA,CAOAwb,IACAA,EAAA,IAGAA,EAAA8D,mBAAA,EACA9D,EAAA+D,QAAAxH,EAAAkC,MAAAja,GAAAie,KACAzC,EAAAoD,SAAA7G,EAAAkC,MAAAja,GAAA4e,SAEA,IAAAuC,EAAAxrB,KAAAupB,eAAAC,EAAAnf,EAAAwb,GAEAzD,EAAAkC,MAAAja,GAAA,IAAAohB,EAAAD,QAhBApJ,EAAAsB,YACA/U,QAAAC,MAAA,SAAAvE,EAAA,6CAkBArK,KAAA4rB,aAAA,SAAAC,EAAAxhB,EAAAyhB,GACA,IAAA1J,EAAAkC,MAAAja,GACA,mBAAAA,EAAA,oBAGA,IAAAie,EAAAlG,EAAAkC,MAAAja,GAAAie,KAEAA,EAAAyD,YAAA,oBAAAzD,EAAAyD,YAAAzD,EAAAyD,aAAArsB,OACA4oB,EAAAyD,aAAAniB,QAAA,SAAAoiB,GACAF,GAAA,UAAAE,EAAAH,MAAAI,OACA7J,EAAAkC,MAAAja,GAAAie,KAAA4D,eAAAF,EAAAH,MACAG,EAAAJ,aAAAC,IAGAC,GAAA,UAAAE,EAAAH,MAAAI,OACA7J,EAAAkC,MAAAja,GAAAie,KAAA6D,eAAAH,EAAAH,MACAG,EAAAJ,aAAAC,OAMAld,QAAAyd,KAAA,4CACApsB,KAAA2rB,gBAAAthB,KAGArK,KAAA+pB,oBAAA,SAAA1F,EAAAha,KACArK,KAAA8mB,qBAAA,SAAAzC,EAAAha,GACA,GAAAga,EAAA7X,MAAA6X,EAAAgI,IAkBA,MAjBA,UAAAhI,EAAA7X,MACA4V,EAAAkC,MAAAja,IACA+X,EAAAkC,MAAAja,GAAAiiB,aAAAjI,GAIA,SAAAA,EAAA7X,OACA6X,EAAAsF,kBACA3pB,KAAA2rB,gBAAAthB,EAAA,KAAAga,GAEArkB,KAAA0rB,oBAAArH,EAAAha,SAIA+X,EAAAsB,YACA/U,QAAApG,IAAA,qBAAA8b,EAAAgI,MAKA,GAAAhI,EAAAkI,UAQA,OAPAnK,EAAAkC,MAAAja,IACA+X,EAAAkC,MAAAja,GAAAmiB,mBAAAnI,QAGAjC,EAAAsB,YACA/U,QAAApG,IAAA,iCAAA8b,EAAAkI,YAKA,GAAAlI,EAAAiH,YAAA,CACAlJ,EAAAG,QAAA8B,EAAAwB,gBAAAtD,SAAAH,EAAAG,QAEAH,EAAAG,QAAAgD,QAAAnD,EAAA2D,cAAArmB,SACA0iB,EAAA2D,cAAA,IAGA1B,EAAAwB,gBAAAH,YAAAtD,EAAA2D,cAAArmB,SACA0iB,EAAA2D,cAAArmB,OAAA,IAGA,IAAA+pB,EAAA,GACArH,EAAA2D,cAAAnc,QAAA,SAAA8a,GACA+E,EAAA/E,EAAAE,UAAA,CACA6H,UAAA/H,EAAA+H,QACAC,UAAAhI,EAAAgI,QACAC,WAAAjI,EAAAiI,YAGAtI,EAAAwB,gBAAA4D,iBAEA3B,EAAAiC,oBAAA,CACAjE,eAAA,EACAD,gBAAAxB,EAAAwB,iBACiBxb,GAGjBga,EAAAyB,eACA1D,EAAAwK,gBAAAviB,EAAAga,EAAAwB,kBAyBA7lB,KAAA4qB,qBAAA,SAAAlG,EAAAra,KACArK,KAAA8qB,sBAAA,SAAApG,EAAAra,KACArK,KAAA6sB,oBAAA,SAAAC,KACA9sB,KAAA+sB,kBAAA,SAAAne,EAAAoe,GACA5K,EAAA6K,aAAAre,EAAAoe,IAgBAhtB,KAAA+oB,UAAA,SAAA9f,EAAAoB,GACA2d,IAEA5F,EAAAzZ,IAAAK,kBAAAC,EAAA,SAAAe,GACA,IAAAkjB,EAAA9K,EAAAqG,qBAEApe,IACA6iB,EAAA,CAAA7iB,IAGA6iB,EAAAtjB,QAAA,SAAAob,GACA5C,EAAAzZ,IAAAmB,aAAAE,EAAA,SAAAE,GACAkY,EAAAkC,MAAAU,GAAAiE,SAAArf,QAAA,SAAAsf,GACAA,EAAAN,KAAA1e,MAEqB8a,MAER,CACbvb,OAAA2Y,EAAA3Y,OAEAuC,UAAA,YAAAmhB,UAAAC,QAAAniB,KAAA,KAAAmX,EAAApW,WAAA,KAKA,IAAAqhB,EAAA,IAAAC,EAAAlL,GAGApiB,KAAAoqB,qBAAA,SAAA/F,EAAAha,GACAgjB,EAAAliB,QAAAiY,KAAAmK,MAAAlJ,GAAAha,EAAA+X,EAAAkC,MAAAja,GAAA+X,EAAAkC,MAAAja,GAAAlB,MAAA,KAGAnJ,KAAAyqB,oBAAA,SAAAhb,EAAApF,GACAoF,EAAAhG,OAAAY,EACAoF,EAAAtG,MAAAiZ,EAAAkC,MAAAja,GAAA+X,EAAAkC,MAAAja,GAAAlB,MAAA,GACAiZ,EAAAoL,QAAA/d,IAGAzP,KAAAuqB,mBAAA,SAAA3b,EAAAvE,GACAuE,EAAAnF,OAAAY,EACAoF,MAAAtG,MAAAiZ,EAAAkC,MAAAja,GAAA+X,EAAAkC,MAAAja,GAAAlB,MAAA,GACAiZ,EAAAjM,QAAAvH,IAGA5O,KAAAwqB,oBAAA,SAAAtB,EAAA7e,GAEA+X,EAAAkC,MAAAja,GAAA4e,SAAAvpB,OACA0iB,EAAAkC,MAAAja,GAAA4e,SAAA,CAAAC,IAIA9G,EAAAkC,MAAAja,GAAA4e,SAAAxmB,KAAAymB,GACA9G,EAAAqL,OAAA,CACAhkB,OAAAY,EACAlB,MAAAiZ,EAAAkC,MAAAja,GAAA+X,EAAAkC,MAAAja,GAAAlB,MAAA,GACA+f,cAIAlpB,KAAA+qB,mBAAA,SAAA2C,GACAtL,EAAA2I,mBAAA2C,IAGA1tB,KAAAkrB,qBAAA,SAAA7gB,EAAA2gB,KACAhrB,KAAAmrB,uBAAA,SAAA9gB,EAAA2gB,KAEAhrB,KAAA2tB,iBAAA,SAAAtjB,GAEA,OADAA,KAAA+X,EAAAkC,MAAAmE,qBAAA,GACArG,EAAAkC,MAAAja,GAAA+X,EAAAkC,MAAAja,GAAAsgB,QAAA,IA6oCA,SAAAiD,EAAApa,EAAAqa,EAAAC,GACA,wBAAAC,YAAA,CAIA,IAAAC,EAAA,CACA9tB,UAAA4tB,EACAG,iBAAAH,GAGAre,EAAA,IAAAse,YAAAF,EAAAG,GACAxa,EAAA7D,cAAAF,IAGA,SAAAye,EAAA9L,EAAA+L,GACA,GAAAA,EAAAzJ,QAAA0J,EAAAD,EAAAzJ,OAAA,SAAAhlB,OAAA,CAEA,IAAA0iB,IAAA+L,EACA,oCAGA,GAAA/L,EAAAiM,YAAAjM,EAAAkM,UAAA,CAIA,wBAAAC,KACA,0BAGAA,KAAAJ,EAAAzJ,OAAA,CACA2J,WAAA,WACAjM,EAAAiM,WAAAF,IAEAG,UAAA,WACAlM,EAAAkM,UAAAH,IAEAK,eAAA,SAAAC,EAAAC,GACAtM,EAAAoM,gBAGApM,EAAAoM,eAAA9d,MAAA,CACA+d,SACAC,aACiBP,SAKjB,SAAAQ,EAAAvM,EAAA+L,GACAA,EAAAzJ,QAAAyJ,EAAAzJ,QAAAyJ,EAAAzJ,OAAAkK,mBAEAT,EAAAzJ,OAAAkK,iBAAA,gBAAAnf,GACAA,EAAA2S,EAAAuC,aAAAwJ,EAAAvJ,UAEAnV,EAAA8S,QAAA,CACAC,MAAA,UAAA/S,EAAAof,SACApM,MAAA,UAAAhT,EAAAof,UAGAzM,EAAA0M,OAAArf,KACS,GAET0e,EAAAzJ,OAAAkK,iBAAA,kBAAAnf,GACAA,EAAA2S,EAAAuC,aAAAwJ,EAAAvJ,UAEAnV,EAAA8S,QAAA,CACAC,MAAA,UAAA/S,EAAAsf,WACAtM,MAAA,UAAAhT,EAAAsf,YAGA3M,EAAA4M,SAAAvf,KACS,IAGT,SAAAwf,IACA,GAAAnf,OAAAof,QAAApf,OAAAof,OAAAC,kBAAA,IAAAC,UAAAC,UAAA1tB,QAAA,WAGA,IAFA,IAAAya,EAAAtM,OAAAof,OAAAC,gBAAA,IAAAxd,YAAA,IACA2d,EAAA,GACAluB,EAAA,EAAAmuB,EAAAnT,EAAA1c,OAAyC0B,EAAAmuB,EAAOnuB,IAChDkuB,GAAAlT,EAAAhb,GAAA0K,SAAA,IAEA,OAAAwjB,EAEA,OAAA/rB,KAAAsI,UAAA,IAAAf,MAAA0kB,WAAA1jB,SAAA,IAAAC,QAAA,UAOA,SAAA0jB,EAAA/K,EAAAxb,EAAAkZ,GACA,GAAAA,EAAAsN,uBAAA,CAKA,IAAAC,GAAA,EACAvB,EAAA1J,EAAA,SAAAhlB,QAAAglB,EAAAgI,SAAAhI,EAAAiI,WACAgD,GAAA,GAGA,YAAAxC,UAAAC,QAAAniB,OACAmX,EAAAG,QAAAE,OAAAL,EAAAG,QAAAG,UACAiN,GAAA,GAIA,IAAAC,EAAA5hB,SAAAC,cAAA0hB,EAAA,iBAYA,GAVAC,EAAAC,UAAAnL,EAEAkL,EAAAE,aAAA,eACAF,EAAAE,aAAA,kBACAF,EAAAE,aAAA,eACAF,EAAAE,aAAA,YACAF,EAAAE,aAAA,YAIA,YAAA3C,UAAAC,QAAAniB,KAAA,CACA,IAAA8kB,EAAA,QAEA,eAAAH,IACAG,EAAA,YAGAH,EAAAhB,iBAAAmB,EAAA,WAIA,GAFAC,wBAAAC,OAAAvL,EAAAwL,YAEA,UAAAxL,EAAAlY,KAAA,CACAujB,EAAA,QAEA,eAAArL,IACAqL,EAAA,YAGAI,EAAAC,aAAA1L,EAAAE,SAAAmL,GAEA3N,EAAA2D,cAAAnc,QAAA,SAAAymB,EAAA7f,GACAkU,EAAAE,WAAAyL,EAAAzL,iBACAxC,EAAA2D,cAAAvV,KAIA,IAAA8f,EAAA,GACAlO,EAAA2D,cAAAnc,QAAA,SAAAymB,GACAA,GACAC,EAAA7tB,KAAA4tB,KAGAjO,EAAA2D,cAAAuK,EAEA,IAAAnC,EAAA/L,EAAAuC,aAAAD,EAAAE,UAEA,GAAAuJ,EAEA,YADA/L,EAAA0C,cAAAqJ,GAGAnuB,KAAA8O,YACA9O,KAAA8O,WAAAC,YAAA/O,SAGa,GAGb,IAAAuwB,EAAAX,EAAAY,OACA,wBAAAD,EAAA,CACA,IAAAE,GAAA,EACAjiB,WAAA,WACAiiB,IACAA,GAAA,EACAvnB,EAAA0mB,KAEa,KACbW,EAAAG,KAAA,WACAD,IACAA,GAAA,EACAvnB,EAAA0mB,MACae,MAAA,SAAA/hB,GACb6hB,IACAA,GAAA,EACAvnB,EAAA0mB,WAGA1mB,EAAA0mB,QA7FA1mB,EAAA,IA2GA,SAAA0nB,EAAA/C,EAAAgD,GACA/gB,OAAAghB,oBAAAjD,EAAAgD,GACA/gB,OAAA8e,iBAAAf,EAAAgD,GAAA,GAOA,SAAAE,EAAAtb,GACA,IAAAub,EAAA,GAMA,OALAvb,EAAA7L,QAAA,SAAA2G,GACAA,GACAygB,EAAAvuB,KAAA8N,KAGAygB,EAIA,SAAA1O,EAAAC,GACA,OAAAA,EAAAC,QAAAD,EAAAE,QAAAF,EAAAG,QAAAH,EAAA7J,KAGA,SAAAmQ,EAAArV,GACA,2BAAAA,EAGA,SAAAyd,EAAAzd,GACA,wBAAAA,GApuEA,SAAA6D,GACAA,GAIA,qBAAAvH,QAIA,qBAAA6G,IAIAA,EAAAyY,UAAA,CACAC,UAAAnN,EACAgP,aAAA,cAGAva,EAAAhI,UACAgI,EAAAhI,QAAA,IAGA,qBAAAgI,EAAAhI,QAAAwC,QACAwF,EAAAhI,QAAAwC,MAAAwF,EAAAhI,QAAAiG,KAAA+B,EAAAhI,QAAAC,MAAA+H,EAAAhI,QAAApG,IAAAoO,EAAAhI,QAAApG,KAAA,WACAoG,QAAApG,IAAArI,aAIA,qBAAA8N,WAEAqJ,EAAArJ,SAAA,GAEAA,SAAAC,cAAAD,SAAAmjB,cAAAnjB,SAAAojB,iBAAA,WACA,IAAA5d,EAAA,CACA6d,WAAA,WACA,OAAA7d,GAEAgd,KAAA,aACAc,MAAA,aACAC,UAAA,aACAC,UAAA,WACA,WAGA,OAAAhe,GAGAxF,SAAA4gB,iBAAA5gB,SAAA8iB,oBAAAzZ,EAAAuX,iBAAAvX,EAAAyZ,oBAAA,aAEAzZ,EAAAoa,iBAAApa,EAAAqa,iBAAA,cAGA,qBAAAnO,KACAlM,EAAAkM,GAAA,WACA,OACAwD,GAAA,SAAA8G,EAAA3kB,GACAA,KAAA,aAEA,YAAA2kB,GACA3kB,KAGAge,KAAA,SAAA2G,EAAAnV,EAAAxP,GACAA,KAAA,aACA,cAAA2kB,GAAA,cAAAA,GACA3kB,GAAA,EAAAwP,EAAAkK,UAAA,UAOA,qBAAAe,WAEAtM,EAAAsM,SAAA,CACAgO,SAAA,QACAC,KAAA,GACAC,KAAA,GACAjO,OAAA,SAIA,qBAAAlB,SAEArL,EAAAqL,OAAA,CACAoP,MAAA,EACAC,OAAA,IAIA,qBAAAxkB,MAEA8J,EAAA9J,IAAA,CACAC,gBAAA,WACA,UAEAwkB,gBAAA,WACA,YAMA3a,EAAAvH,OAAA6G,IAvGA,CAwGK,qBAAAA,IAAA,MA6xBL,WAEA,IAAAuL,EAAA,sFAEA+P,EAAA,kBAAArQ,GAAA,kBAAAA,EAAAsQ,UAAAtQ,EAAAsQ,SAAAC,OAAAvQ,EAAAwL,QACA,GAAA6E,EAAA,CACA,IAAAG,EAAAxQ,EAAAsQ,SAAAC,KAAArmB,WAAAC,QAAA,QACAmW,EAAA,UAAAkQ,EAAA,yBAAAA,EAAA,+BAAAA,EAAA,WAAAA,GAGA,SAAA/a,GACA,qBAAAvH,SAIA,qBAAAA,QAAA,qBAAA6G,IACAA,EAAAyY,UAAA,CACAC,UAAAnN,EACAgP,aAAA,cAIA7Z,EAAAvH,OAAA6G,GAKA,qBAAAgN,WAEAtM,EAAAsM,SAAA,CACAgO,SAAA,QACAC,KAAA,GACAC,KAAA,KAIA,qBAAAnP,SAEArL,EAAAqL,OAAA,CACAoP,MAAA,EACAC,OAAA,MA9BA,CAiCS,qBAAApb,IAAA7G,QAGT,IAAAsf,EAAAtf,OAAAsf,UAEA,qBAAAA,GACA,qBAAAA,EAAAiD,qBACAjD,EAAA8B,aAAA9B,EAAAiD,oBAGA,qBAAAjD,EAAAkD,kBACAlD,EAAA8B,aAAA9B,EAAAkD,kBAGAlD,EAAA,CACA8B,aAAA,aACA7B,UAAAnN,GAIA,IAAAqQ,IAAA,oFAAAhtB,KAAA6pB,EAAAC,WAAA,IAEAmD,GAAA,IAAApD,EAAAC,UAAA1tB,QAAA,YAAAytB,EAAAqD,oBAAArD,EAAAsD,YAEAC,IAAA7iB,OAAA8iB,OAAAxD,EAAAC,UAAA1tB,QAAA,YACAkxB,EAAA,qBAAA/iB,OAAAgjB,eACAC,EAAA,iCAAAxtB,KAAA6pB,EAAAC,WACA2D,IAAAljB,OAAAmjB,SAAAN,EACAO,EAAA,qBAAAllB,qBAAAmlB,eAAAX,EAKA,SAAAY,IACAhE,EAAAiE,WAAA,IAKAC,EAAAC,EAAAC,EAJAC,EAAArE,EAAAC,UACAqE,EAAAtE,EAAAuE,QACAC,EAAA,GAAAC,WAAAzE,EAAAiE,YACAS,EAAArZ,SAAA2U,EAAAiE,WAAA,IAUA,GANAN,IAAAC,IAAA,IAAAS,EAAA9xB,QAAA,WACAoxB,GAAA,EACAC,GAAA,GAIAL,EAAA,CACAe,EAAA,QACA,IACAE,EAAAxE,EAAAC,UAAA0E,MAAA,WAAAA,MAAA,QACAD,EAAAF,EAAAG,MAAA,QACiB,MAAA9tB,GACjB2tB,EAAA,UACAE,EAAA,QAKAZ,GACAK,EAAAE,EAAA9xB,QAAA,OACA4xB,EAAA,EACAK,EAAAH,EAAAO,UAAAT,EAAA,IAEAA,EAAAE,EAAA9xB,QAAA,QACAiyB,EAAAH,EAAAO,UAAAT,EAAA,IAEAG,EAAA,MAGAV,GACAO,EAAAE,EAAA9xB,QAAA,UACA+xB,EAAA,SACAE,EAAAH,EAAAO,UAAAT,EAAA,IAGAR,GACAQ,EAAAE,EAAA9xB,QAAA,UAEA+xB,EAAA,SACAE,EAAAH,EAAAO,UAAAT,EAAA,IAEA,KAAAA,EAAAE,EAAA9xB,QAAA,cACAiyB,EAAAH,EAAAO,UAAAT,EAAA,KAGA,IAAAnE,EAAAC,UAAA1tB,QAAA,cACAiyB,EAAAxE,EAAAC,UAAA0E,MAAA,eAAAA,MAAA,UAIAlB,GACAU,EAAAE,EAAA9xB,QAAA,WACA+xB,EAAA,UACAE,EAAAH,EAAAO,UAAAT,EAAA,KAIAD,EAAAG,EAAA5Z,YAAA,SAAA0Z,EAAAE,EAAA5Z,YAAA,QACA6Z,EAAAD,EAAAO,UAAAV,EAAAC,GACAK,EAAAH,EAAAO,UAAAT,EAAA,GAEAG,EAAA1a,gBAAA0a,EAAA/f,gBACA+f,EAAAtE,EAAAuE,UAsBA,OAlBAnB,IACAkB,EAAA,OACAE,EAAAxE,EAAAC,UAAA0E,MAAA,cAK4C,KAA5CP,EAAAI,EAAAxI,OAAA,aACAwI,IAAAI,UAAA,EAAAR,IAGAM,EAAArZ,SAAA,GAAAmZ,EAAA,IAEAvrB,MAAAyrB,KACAF,EAAA,GAAAC,WAAAzE,EAAAiE,YACAS,EAAArZ,SAAA2U,EAAAiE,WAAA,KAGA,CACAO,cACAxB,QAAA0B,EACA7oB,KAAAyoB,EACAO,mBAAA,GAMA,SAAAC,EAAAC,EAAA3zB,GACA,IAAA4zB,EAAA,EACAC,EAAA,GAEAC,GAAA,EACAC,EAAAzkB,OAAA0kB,YACA,WACAL,MACArkB,OAAA2kB,cAAAF,GACA/zB,EAAA8zB,IAEAF,IAAAC,IACAvkB,OAAA2kB,cAAAF,GACAD,GAAA,EACA9zB,EAAA8zB,KAGA,IAIA,SAAAI,EAAArF,GACA,IAAAsF,EAAAtF,EAAArW,cACA,OAAA2b,EAAAhzB,QAAA,aAAAgzB,EAAAhzB,QAAA,WACA,SAEA,IAAA8C,EAAA,2BAAAmwB,KAAAD,GACA,SAAAlwB,GAAAgW,SAAAhW,EAAA,YAMA,SAAAowB,EAAA3rB,GACA,IAAA4rB,EAEA,IAEA,GAAAhlB,OAAAilB,wBACAjlB,OAAAilB,wBACAjlB,OAAAklB,UAAA,EACA,WACAF,GAAA,GAEA,SAAA7uB,GACA6uB,GAAA,SAGiB,GAAAhlB,OAAAmlB,WAAA,UAAA1vB,KAAAuK,OAAAsf,UAAAC,WAAA,CACjB,IAAA6F,EACA,IACAA,EAAAplB,OAAAmlB,UAAAE,KAAA,QACAD,EAAA/e,QAAA,WACA,UAEqB,MAAAlQ,GACrB6uB,GAAA,EAGA,qBAAAA,GACAZ,EACA,WACA,eAAAgB,EAAA9nB,YAEA,SAAAknB,GACAA,IACAQ,GAAAI,EAAAv1B,eAKiB,GAAA+0B,EAAA5kB,OAAAsf,UAAAC,WAAA,CACjByF,GAAA,EACA,IACAhlB,OAAAmlB,YACAH,GAAA,GAEqB,MAAA7uB,GACrB6uB,GAAA,QAEiB,GAAAhlB,OAAAslB,cAAA,SAAA7vB,KAAAuK,OAAAsf,UAAAC,WAAA,CACjB,IACAvf,OAAAslB,aAAAC,QAAA,UACqB,MAAApvB,GACrB6uB,GAAA,EAGA,qBAAAA,IACAA,GAAA,EACAhlB,OAAAslB,aAAAE,WAAA,UAIa,MAAArvB,GACb6uB,GAAA,EAGAZ,EACA,WACA,2BAAAY,GAEA,SAAAR,GACAprB,EAAA4rB,KAKA,IAAAS,EAAA,CACAC,QAAA,WACA,OAAApG,EAAAC,UAAA5qB,MAAA,aAEAgxB,WAAA,WACA,OAAArG,EAAAC,UAAA5qB,MAAA,qBAEAixB,IAAA,WACA,OAAAtG,EAAAC,UAAA5qB,MAAA,sBAEAkxB,MAAA,WACA,OAAAvG,EAAAC,UAAA5qB,MAAA,gBAEAmxB,QAAA,WACA,OAAAxG,EAAAC,UAAA5qB,MAAA,cAEAoxB,IAAA,WACA,OAAAN,EAAAC,WAAAD,EAAAE,cAAAF,EAAAG,OAAAH,EAAAI,SAAAJ,EAAAK,WAEAE,UAAA,WACA,IAAAC,EAAA,aAqBA,OApBAR,EAAAC,YACAO,EAAA,WAGAR,EAAAE,eACAM,EAAA,cAGAR,EAAAG,QACAK,EAAA,OAGAR,EAAAI,UACAI,EAAA,cAGAR,EAAAK,YACAG,EAAA,WAGAA,IAKA,SAAAC,IAsFA,IArFA,IAqFAC,EArFAC,EAAA,IAEAC,EAAA/G,EAAAiE,WACAI,EAAArE,EAAAC,UAEA+G,EAAAF,EACAG,EAAA,EACAxuB,EAAA,aACAyuB,EAAA,kCACa,CACbzuB,EAAA,cACAyuB,EAAA,gCACa,CACbzuB,EAAA,YACAyuB,EAAA,8BACa,CACbzuB,EAAA,YACAyuB,EAAA,8BACa,CACbzuB,EAAA,gBACAyuB,EAAA,kBACa,CACbzuB,EAAA,sBACAyuB,EAAA,kBACa,CACbzuB,EAAA,aACAyuB,EAAA,+BACa,CACbzuB,EAAA,eACAyuB,EAAA,iCACa,CACbzuB,EAAA,aACAyuB,EAAA,4BACa,CACbzuB,EAAA,aACAyuB,EAAA,sBACa,CACbzuB,EAAA,aACAyuB,EAAA,iCACa,CACbzuB,EAAA,iBACAyuB,EAAA,8CACa,CACbzuB,EAAA,aACAyuB,EAAA,cACa,CACbzuB,EAAA,eACAyuB,EAAA,SACa,CACbzuB,EAAA,UACAyuB,EAAA,WACa,CACbzuB,EAAA,WACAyuB,EAAA,WACa,CACbzuB,EAAA,SACAyuB,EAAA,SACa,CACbzuB,EAAA,QACAyuB,EAAA,eACa,CACbzuB,EAAA,MACAyuB,EAAA,sBACa,CACbzuB,EAAA,WACAyuB,EAAA,YACa,CACbzuB,EAAA,SACAyuB,EAAA,2CACa,CACbzuB,EAAA,MACAyuB,EAAA,OACa,CACbzuB,EAAA,OACAyuB,EAAA,QACa,CACbzuB,EAAA,OACAyuB,EAAA,QACa,CACbzuB,EAAA,OACAyuB,EAAA,SACa,CACbzuB,EAAA,aACAyuB,EAAA,iFAEAl1B,EAAA,EAA+B60B,EAAAI,EAAAj1B,GAAuBA,IACtD,GAAA60B,EAAAK,EAAA/wB,KAAAkuB,GAAA,CACA2C,EAAAH,EAAApuB,EACA,MAIA,IAAA0uB,EAAAL,EASA,OAPA,UAAA3wB,KAAA6wB,KACA,eAAA7wB,KAAA6wB,KACAG,EAAA,eAAA3B,KAAAwB,GAAA,IAEAA,EAAA,WAGAA,GACA,eACA,yBAAA7wB,KAAAkuB,KACA8C,EAAA,yBAAA3B,KAAAnB,GAAA,IAEA,MACA,cACA,sBAAAluB,KAAAkuB,KACA8C,EAAA,sBAAA3B,KAAAnB,GAAA,IAEA,MACA,UACA,yBAAAluB,KAAAkuB,KACA8C,EAAA,yBAAA3B,KAAAuB,GACAI,IAAA,OAAAA,EAAA,UAAAA,EAAA,KAEA,MAGA,OACAR,OAAAK,EACAG,aAIA,IAAAR,EAAA,aACAQ,EAAA,qBAEA,SAAAC,EAAA7B,GACAA,MAAAvF,EAAAC,WAAArW,cACA,IAAAvU,EAAAkwB,EAAAlwB,MAAA,uBACA,QAAAA,KAAA,GAGA,IAAAgyB,EAAAT,IAEAS,KAAAV,QAAA,KAAAU,EAAAV,QACAA,EAAAU,EAAAV,OACAQ,EAAAE,EAAAF,WACShB,EAAAM,QACTE,EAAAR,EAAAO,YAEA,WAAAC,IACAQ,EAAAC,MAIAvE,EAAA,kBAAArQ,GAAA,kBAAAA,EAAAsQ,UAAAtQ,EAAAsQ,SAAAC,KAEA,eAAA4D,GAAA9D,IACA8D,EAAA,SACAQ,EAAA3U,EAAAsQ,SAAAC,KAAArmB,WAAAC,QAAA,SAGA,IAAA2qB,GAAA,EACAC,GAAA,EACA,2DAAA/sB,QAAA,SAAA2G,GACA,qBAAAvC,UAAA,oBAAAA,SAAAC,iBAIAyoB,GAAAnmB,KAAAvC,SAAAC,cAAA,YACAyoB,GAAA,IAGAC,GAAApmB,KAAAvC,SAAAC,cAAA,WACA0oB,GAAA,MAIA,IAAAC,EAAA,wDACAC,EAAA,gCACAC,EAAA,mCAGA,SAAAC,EAAA7tB,EAAAwb,GACA,GAAAyI,EAAA6J,kBAAA,CAIA,IAAAC,GAAA,EACAC,GAAA,EACAC,EAAA,SAAAC,GACAA,EAEiBA,EAAA3yB,MAAAmyB,IACjBK,GAAA,EACA/tB,EAAA,UAAAkuB,EAAAH,EAAAC,IACiBE,EAAA3yB,MAAAqyB,IACjBI,GAAA,EACAhuB,EAAA,WAAAkuB,EAAAH,EAAAC,IAEAhuB,EAAA,WAAAkuB,EAAAH,EAAAC,GARAhuB,KAUawb,IAGb,SAAAyS,EAAAjuB,EAAAwb,GACA,wBAAA1W,UAAA,oBAAAA,SAAAqpB,eAAA,CAIA,IAAAC,EAAA,GAEAC,EAAAznB,OAAAynB,mBAAAznB,OAAA0nB,sBAAA1nB,OAAA2nB,wBAEA,IAAAF,EAAA,CACA,IAAAG,EAAA1pB,SAAAqpB,eAAA,UACA,IAAAK,EACA,OAEA,IAAAC,EAAAD,EAAAE,cACAL,EAAAI,EAAAJ,mBAAAI,EAAAH,sBAAAG,EAAAF,wBAGA,GAAAF,EAAA,CAIA,IAAAM,EAAA,KAEA,WAAA1K,EAAAC,SAAAD,EAAAC,QAAAgF,QAAA,KAEAyF,EAAA,CACAC,SAAA,EACAC,iBAAA,MAKA,IAAAC,EAAA,CACAC,WAAA,EACAC,KAAA,kCAIAC,EAAA,IAAAZ,EAAAS,EAAAH,GAyCA,GAvCAnT,IACAyT,EAAAC,UACAD,EAAAC,UAAA1T,GACiByT,EAAAE,UAAA3T,EAAA0J,YAAA,IACjB+J,EAAAE,SAAA3T,EAAA0J,YAAA,GAAA1J,IA0BAyT,EAAAG,eAAA,SAAA7oB,GACAA,EAAA8c,WAAA9c,EAAA8c,oBACAgM,EAAA9oB,EAAA8c,qBAEAgM,MAKA7T,EACA,IACAyT,EAAAhP,kBAAA,WACiB,MAAAljB,IAIjBknB,EAAAqL,oBACAL,EAAAM,cAAA/H,KAAA,SAAA/wB,GACAw4B,EAAAO,oBAAA/4B,GAAA+wB,KAAAiI,KAGAR,EAAAM,YAAA,SAAA94B,GACAw4B,EAAAO,oBAAA/4B,EAAAg5B,EAAA,eACiB,eA7CjB,SAAAJ,EAAAhM,GACA,GAAAA,EAAA,CAKA,IAAA9nB,EAAAoyB,EAAAjC,KAAArI,GACA,GAAA9nB,EAAA,CAGA,IAAAm0B,EAAAn0B,EAAA,GACAwyB,EAAA1K,EAAA9nB,MAAAmyB,GACAM,GAAA,OAEA92B,IAAAk3B,EAAAsB,IACA1vB,EAAA0vB,EAAA3B,EAAAC,GAGAI,EAAAsB,IAAA,QAhBA1vB,IA8CA,SAAAyvB,IACA,IAAAE,EAAAV,EAAAW,iBAAAzM,IAAA0H,MAAA,MAEA8E,EAAAjvB,QAAA,SAAAmvB,GACAA,GAAA,IAAAA,EAAAp3B,QAAA,iBACA42B,EAAAQ,MAMA,IAAAC,EAAA,GAEAC,EAAA,GACAC,EAAA,GACAC,EAAA,GAEA/J,EAAAgK,cAAAhK,EAAAgK,aAAAC,mBAGAjK,EAAAiK,iBAAA,SAAAnwB,GACA,IAAAmwB,EAAAjK,EAAAgK,aAAAC,mBACAA,KAAA3I,KACAtB,EAAAgK,aAAAC,mBAAA3I,KAAAxnB,GAAAynB,MAAA,WACAznB,EAAA,MAGAA,EAAA,MAMA,IAAAowB,GAAA,EAGA,qBAAAC,GAAA,eAAAA,EACAD,GAAA,EACSlK,EAAAgK,cAAAhK,EAAAgK,aAAAC,mBACTC,GAAA,GAGA,IAAAE,GAAA,EACAC,GAAA,EACAC,GAAA,EAEAC,GAAA,EACAC,GAAA,EAGA,SAAAC,EAAA3wB,GACA,GAAAowB,EAeA,IARAlK,EAAAiK,kBAAAvpB,OAAAypB,kBAAAzpB,OAAAypB,iBAAAO,aACA1K,EAAAiK,iBAAAvpB,OAAAypB,iBAAAO,WAAAC,KAAAjqB,OAAAypB,oBAGAnK,EAAAiK,kBAAAjK,EAAAiK,mBACAjK,EAAAiK,iBAAAjK,EAAAiK,iBAAAU,KAAA3K,IAGAA,EAAAiK,iBAAA,CAOAL,EAAA,GAEAC,EAAA,GACAC,EAAA,GACAC,EAAA,GAEAK,GAAA,EACAC,GAAA,EACAC,GAAA,EAEAC,GAAA,EACAC,GAAA,EAGA,IAAAI,EAAA,GAEA5K,EAAAiK,iBAAA,SAAAY,GACAA,EAAArwB,QAAA,SAAAswB,GACA,IAAAC,EAAA,GACA,QAAAvyB,KAAAsyB,EACA,IACA,oBAAAA,EAAAtyB,KACAuyB,EAAAvyB,GAAAsyB,EAAAtyB,IAEyB,MAAA3B,IAGzB+zB,EAAAG,EAAAC,SAAAD,EAAAE,MAAAF,EAAAlO,QAKA,UAAAkO,EAAAlO,OACAkO,EAAAlO,KAAA,cAGA,UAAAkO,EAAAlO,OACAkO,EAAAlO,KAAA,cAGAkO,EAAAC,WACAD,EAAAC,SAAAD,EAAA5F,IAGA4F,EAAA5F,KACA4F,EAAA5F,GAAA4F,EAAAC,UAGAD,EAAAE,OAoBA,eAAAF,EAAAlO,MAAA2N,IACAA,GAAA,GAGA,eAAAO,EAAAlO,MAAA0N,IACAA,GAAA,KAxBAQ,EAAAG,eAAA,EAEA,eAAAH,EAAAlO,KACAkO,EAAAE,MAAA,WAAAlB,EAAAz5B,OAAA,GACyB,eAAAy6B,EAAAlO,KACzBkO,EAAAE,MAAA,eAAApB,EAAAv5B,OAAA,GACyB,gBAAAy6B,EAAAlO,KACzBkO,EAAAE,MAAA,YAAAnB,EAAAx5B,OAAA,GAEAy6B,EAAAE,MAAA,mCAGA,qBAAAlN,KAAAC,QAAA4F,UAAA7F,EAAAC,QAAAgF,SAAA,qCAAA7sB,KAAAoe,SAAAgO,UAAA,KACA,qBAAA3jB,UAAA,kBAAAA,SAAAusB,QAAAvsB,SAAAusB,OAAAnP,SAAA,IAAApd,SAAAusB,OAAAnP,OAAA,uBACA+O,EAAAE,MAAA,0CAAAF,EAAAlO,KAAA,aAcA,eAAAkO,EAAAlO,OACAuN,GAAA,GAEA,IAAAP,EAAAt3B,QAAAw4B,IACAlB,EAAAx2B,KAAA03B,IAIA,gBAAAA,EAAAlO,OACAwN,GAAA,GAEA,IAAAP,EAAAv3B,QAAAw4B,IACAjB,EAAAz2B,KAAA03B,IAIA,eAAAA,EAAAlO,OACAyN,GAAA,GAEA,IAAAP,EAAAx3B,QAAAw4B,IACAhB,EAAA12B,KAAA03B,IAKAnB,EAAAv2B,KAAA03B,GAEAH,EAAAG,EAAAC,SAAAD,EAAAE,MAAAF,EAAAlO,MAAAkO,KAGA,qBAAAhN,IAEAA,EAAA6L,eACA7L,EAAAqM,gBACArM,EAAAsM,cACAtM,EAAAuM,YAEAvM,EAAAyM,gCACAzM,EAAAwM,oCAEAxM,EAAA8L,oBACA9L,EAAA+L,qBACA/L,EAAAgM,qBAGAjwB,GACAA,WAjIAA,GACAA,SAhBAA,GACAA,IAoJA,IAAAikB,EAAArd,OAAAqd,WAAA,GAIAA,EAAAC,QAAAgG,IAEAyB,EAAA,SAAAZ,GACA9G,EAAAC,QAAA6G,wBAIA9G,EAAAC,QAAA,KAAAD,EAAAC,QAAAniB,OAAA,EAGAkiB,EAAA4I,SACA5I,EAAAoJ,YAEA,kBAAA3U,GAAA,kBAAAA,EAAAsQ,UAAAtQ,EAAAsQ,SAAA,mBAGA8E,GAAA,EACA,wFAAAptB,QAAA,SAAA2G,GACAymB,GAIAzmB,KAAAT,SACAknB,GAAA,KAGA7J,EAAA6J,oBAGA7J,EAAAqN,gBAAA,qBAAAC,eAGA,IAAAC,GAAA,EAWA,GAVAvN,EAAAC,QAAA4F,UAAA7F,EAAAC,QAAAgF,SAAA,GACAsI,GAAA,EACSvN,EAAAC,QAAAyF,WAAA1F,EAAAC,QAAAgF,SAAA,GACTsI,GAAA,EACSvN,EAAAC,QAAAoF,QAAArF,EAAAC,QAAAgF,SAAA,GACTsI,GAAA,EACS,YAAAvN,EAAA4I,QAAA5I,EAAAC,QAAA4F,WACT0H,GAAA,IAGA,gCAAAn1B,KAAAoe,SAAAgO,UAAA,KACA,IAAAgJ,EAAA,qBAAA3sB,UAAA,kBAAAA,SAAAusB,QAAAvsB,SAAAusB,OAAAnP,SAAA,IAAApd,SAAAusB,OAAAnP,OAAA,qBACAuP,IAAAxN,EAAAC,QAAA4F,UAAA7F,EAAAC,QAAAoF,QAAArF,EAAAC,QAAAuF,SACA+H,GAAA,EACavN,EAAAC,QAAAyF,YACb6H,GAAA,GAGAvN,EAAAuN,6BAGA,IAAAE,EAAA,CACAC,aAAA,EACAC,oCAAA,GAGA,yEAAAlxB,QAAA,SAAA2G,GACAqqB,EAAAC,aAIAtqB,KAAAT,SACA8qB,EAAAC,aAAA,EAEA/qB,OAAAS,IAAA,4BAAAT,OAAAS,GAAA3J,YACAg0B,EAAAE,oCAAA,MAIA3N,EAAA4N,wBAAAH,EAAAC,YACA1N,EAAA2N,mCAAAF,EAAAE,mCAIA,IAAAE,GAAA,EACA7N,EAAAC,QAAA4F,UAAA7F,EAAAC,QAAAgF,QAAA,KACA4I,GAAA,GAEA7N,EAAA6N,6BAEA,IAAAC,GAAA,EACA9N,EAAAC,QAAAyF,WAAA1F,EAAAC,QAAAgF,QAAA,GACA6I,GAAA,EACS9N,EAAAC,QAAA4F,UAAA7F,EAAAC,QAAAgF,QAAA,GACT6I,GAAA,EACS9N,EAAAC,QAAAuF,SAAAxF,EAAAC,QAAAgF,SAAA,KACT6I,GAAA,GAEA9N,EAAA+N,4BAAAD,EAIA9N,EAAAoF,iBAGA,IAAA4I,GAAA,EACA/L,EAAA8B,aACAiK,GAAA,EACS/L,EAAAgK,cAAAhK,EAAAgK,aAAAlI,eACTiK,GAAA,GAGAhO,EAAAC,QAAA4F,UAAA7F,EAAAC,QAAAgF,SAAA,qCAAA7sB,KAAAoe,SAAAgO,UAAA,KACA,qBAAA3jB,UAAA,kBAAAA,SAAAusB,QAAAvsB,SAAAusB,OAAAnP,SAAA,IAAApd,SAAAusB,OAAAnP,OAAA,uBACA+P,EAAA,kBAIA,WAAAhO,EAAA4I,SACAoF,GAAA,GAEAhO,EAAAgO,0BAEA,IAAAC,GAAA,GACA,GAAA1Y,OAAAoP,MAAA,CACA,IAAAA,GAAApP,OAAA,MAAAA,OAAAoP,MAAA,GACAC,GAAArP,OAAA,OAAAA,OAAAqP,OAAA,GACAqJ,IAAAtJ,GAAA,MAAAC,GAIA,SAAAsJ,GAAAC,EAAAC,GACA,SAAAC,EAAApf,EAAA3C,GACA,UAAAA,EAAA2C,EAAAof,EAAA/hB,EAAA2C,EAAA3C,GAEA,IAAA6c,EAAAkF,EAAAF,EAAAC,GACA,OAAAD,EAAAhF,GAAAiF,EAAAjF,GAPAnJ,EAAAiO,qBAUAjO,EAAAsO,mBAAAJ,GAAA3Y,OAAAoP,MAAApP,OAAAqP,QAAA2J,QAAA,GAGAvO,EAAAuJ,kCACAvJ,EAAAwJ,iCAEA,UAAAxJ,EAAAC,QAAAniB,MAAAkiB,EAAAC,QAAAgF,SAAA,KACAjF,EAAAuJ,kCACAvJ,EAAAuJ,gCAAA,mEAGAvJ,EAAAwJ,iCACAxJ,EAAAwJ,+BAAA,oEAKAxJ,EAAA4J,uBAEA5J,EAAAwO,sBAAA,cAAA7rB,QAAA,IAAAA,OAAA8rB,UAAAC,QACA1O,EAAA2O,qBAAA3O,EAAAwO,sBAEA,WAAAxO,EAAA4I,SACA5I,EAAAwO,uBAAA,EACAxO,EAAA2O,qBAAA,GAGA3O,EAAA4O,uBAAA,SAAA7yB,GACAA,KAAA,aACA,IACA,IAAA8yB,EACAC,EAAA,IAAAL,UAAA,iCACAK,EAAAxO,OAAA,WACAN,EAAA2O,qBAAA,EACAE,GAAA,IAAAlxB,MAAA0kB,UACAyM,EAAArT,KAAA,SAEAqT,EAAAC,UAAA,WACA/O,EAAAgP,kBAAA,IAAArxB,MAAA0kB,UAAAwM,EAAA,KACA9yB,IACA+yB,EAAAG,QACAH,EAAA,MAEAA,EAAA9lB,QAAA,WACAgX,EAAA2O,qBAAA,EACA5yB,KAEa,MAAAjD,GACbknB,EAAA2O,qBAAA,EACA5yB,MAKAikB,EAAAkP,KAAA,SAAAnzB,GACAA,KAAA,aACA2wB,EAAA3wB,IASAikB,EAAA6L,aADA,qBAAAA,EACAA,EAEA,GAGA7L,EAAAqM,gBACArM,EAAAsM,cACAtM,EAAAuM,YAEAvM,EAAAyM,gCACAzM,EAAAwM,oCAEAxM,EAAA8L,oBACA9L,EAAA+L,qBACA/L,EAAAgM,oBAGA,IAAAmD,IAAA,EACA,qBAAAtuB,UAAA,oBAAAA,SAAAC,eAAA,cAAAD,SAAAC,cAAA,WACAquB,IAAA,GAEAnP,EAAAmP,wBAGA,IAAAC,IAAA,EACApP,EAAAC,QAAAyF,WAAA,qBAAA2E,qBAEA,eAAAA,qBAAA5wB,YACA21B,IAAA,GAESpP,EAAAC,QAAA4F,UAAA,qBAAAyE,yBAET,eAAAA,wBAAA7wB,YACA21B,IAAA,GAGApP,EAAAoP,qCAGA,IAAAC,IAAA,EACArP,EAAAC,QAAAyF,WAAA1F,EAAAC,QAAAgF,QAAA,KACAoK,IAAA,GAEArP,EAAAqP,qCAGA,IAAAC,IAAA,EAGA,qBAAAlD,GAAA,qBAAAA,EAAA3yB,YACA61B,IAAA,GAEAtP,EAAAsP,+BAGA,IAAAC,IAAA,EACAvP,EAAAC,QAAAyF,WAAA1F,EAAAC,QAAAgF,SAAA,KAGAsK,IAAA,GAEAvP,EAAAuP,0CAEAvP,EAAAqL,uBAAA,YAAA1oB,QAGAqd,EAAAiF,QAAA,QAEA,qBAAAjF,IACArd,OAAAqd,UAAA,IAGA,IAAAwP,GAAA7sB,OAAA6sB,YAEA,qBAAAA,IAAA,qBAAAC,oBACAD,GAAAC,mBAIAzP,EAAAwP,YADA,qBAAAA,IAAA,oBAAAA,IACAjzB,OAAAC,KAAAgzB,GAAA/1B,WAIAumB,EAAAoM,iBADA,qBAAAA,GACA7vB,OAAAC,KAAA4vB,EAAA3yB,WAGA,IAAA2wB,GAAAznB,OAAAynB,mBAAAznB,OAAA0nB,sBAAA1nB,OAAA2nB,wBAGAtK,EAAAoK,kBADA,qBAAAA,IACA7tB,OAAAC,KAAA4tB,GAAA3wB,WAGAkJ,OAAAqd,YAGA1W,EAAA9V,QAAAwsB,EAIYtL,EAAoB,GAAEC,EAAA,WAClC,OAAAqL,GACa7nB,MAAA3E,EAAAkhB,QAAAzhB,IAAA0hB,IAAArL,EAAA9V,QAAAmhB,GA3mCb,GAinCA,qBAAA+a,UACA1P,UAAAoF,gBAAA,EACApF,UAAAC,QAAAniB,KAAA,UAGAmkB,qBAAAC,YAAA,IAAAD,UAAAC,UAAA1tB,QAAA,eACAwrB,UAAAoF,gBAAA,EACApF,UAAAC,QAAAniB,KAAA,UAiMA6E,OAAA8e,mBACA9e,OAAA8e,iBAAA,SAAAkO,EAAAjP,EAAAgD,GACAiM,EAAAC,aAGAD,EAAAC,YAAA,KAAAlP,EAAAgD,KASA/gB,OAAAktB,oBAAA,SAAAva,EAAAjW,EAAAywB,EAAAC,GACAza,EAAAmM,iBAAApiB,EAAAywB,EAAAC,IA0BA,IAAAP,EAAA7sB,OAAA6sB,YAiBA,SAAAQ,EAAA/a,EAAAgb,GACA,QAAAhb,EAAAG,QAAAC,OAAA,YAAAJ,EAAAG,QAAAC,SAIA,YAAA2K,UAAAC,QAAAniB,OAAA,IAAAmyB,KAIA,WAAAjQ,UAAAC,QAAAniB,MAAAkiB,UAAAC,QAAAgF,QAAA,OAEA,WAAAgL,KAIA,qBAAAA,IAAAhb,EAAAG,QAAAC,QAAAJ,EAAAG,QAAAG,QAAAN,EAAAG,QAAAE,SACA2a,GAAA,GACA,KAuBA,SAAAhP,EAAA1J,EAAAuH,GACA,OAAAvH,KAAA0J,UAIA1J,EAAA0J,YAAAiP,OAAA,SAAAC,GACA,OAAAA,EAAArR,WAAA,WAJA,GAQA,SAAAsR,IACA,IAAAC,GAAA,EAEA,IACA,wBAAAC,kBAAA,SACA,0BAAAA,kBAAA72B,WAAA,SAEA,IAAA82B,EAAA,IAAAnG,EAEA,IACAmG,EAAAC,eAAA,SACAH,GAAA,EACa,MAAAv3B,IAEby3B,EAAAtB,QACS,MAAAn2B,GACTu3B,GAAA,EAGA,OAAAA,GAAAI,IAGA,SAAAA,IACA,IAAAC,GAAA,EAEA,IACA,IAAA1F,EAAA,IAAAZ,EAAA,CACAuG,aAAA,iBAGA,IACA,IAAAC,EAAA5F,EAAA6F,mBAEAH,EADA,gBAAAE,EAAAD,eAEAC,EAAAD,cACA,GAGa,MAAA73B,GACb43B,GAAA,GAES,MAAA53B,GACT43B,GAAA,EAGA,OAAAA,EAKA,SAAAI,IAEA,wBAAApB,SAAA,qBAAAA,QAAAqB,SAAA,qBAAArB,QAAAqB,QAAAC,OAAA,CAEA,IAAAA,EAAAtB,QAAAqB,QAAAC,OACAruB,OAAA2nB,wBAAA0G,EAAA5G,kBACAznB,OAAAsuB,sBAAAD,EAAAC,sBACAtuB,OAAAuuB,gBAAAF,EAAAE,gBACAvuB,OAAA6sB,YAAAwB,EAAAxB,YACA7sB,OAAAypB,iBAAA4E,EAAA5E,iBACAnK,UAAA8B,aAAA9B,UAAAiD,mBAAA8L,EAAAjN,aAEAiN,EAAAhtB,MAAAmtB,OAAA,WACA,mBAAAH,EAAAI,mBACAJ,EAAAI,kBAAAzuB,OAAA0uB,6BAAA,WAEAL,EAAAM,mBAnIA,qBAAA9B,GAAA,qBAAAC,oBACAD,EAAAC,mBAIA,qBAAAD,IACA,SAAAA,EAAA/1B,YACA+1B,EAAA/1B,UAAA83B,KAAA,WACA1+B,KAAAouB,YAAAxkB,QAAA,SAAAiiB,GACAA,EAAA6S,YA4CA5uB,OAAA0uB,4BAAA1uB,OAAA0uB,6BAAA,UAiFAxwB,SAAA4gB,iBAAA,cAAAqP,GAAA,GACAA,IAIA,IAWA1G,EAXAoH,EAAA,GAEA,SAAAC,EAAAb,GACA,IAAA5Y,EAAA,CACAD,sBAAA6Y,EAAA7Y,oBACAG,sBAAA0Y,EAAA1Y,qBAGA,OAAAF,EAIA,qBAAArV,OAAAynB,kBACAA,EAAAznB,OAAAynB,kBACK,qBAAAC,qBACLD,EAAAC,qBACK,qBAAAC,0BACLF,EAAAE,yBAGA,IAAA2G,EAAAtuB,OAAAsuB,uBAAAtuB,OAAA+uB,yBACAR,EAAAvuB,OAAAuuB,iBAAAvuB,OAAAgvB,mBACAvF,EAAAzpB,OAAAypB,iBAEA,SAAA9N,EAAAsS,GAaA,GAZA,qBAAAjuB,OAAAynB,kBACAA,EAAAznB,OAAAynB,kBACS,qBAAAC,qBACTD,EAAAC,qBACS,qBAAAC,0BACTF,EAAAE,yBAGA2G,EAAAtuB,OAAAsuB,uBAAAtuB,OAAA+uB,yBACAR,EAAAvuB,OAAAuuB,iBAAAvuB,OAAAgvB,mBACAvF,EAAAzpB,OAAAypB,kBAEAhC,EACA,6EAGA,IAAAnV,EAAA2b,EAAArU,mBAEA1pB,KAAAmJ,MAAA40B,EAAAvU,UAAAuU,EAAAvU,UAAArgB,MAAAiZ,EAAAjZ,MACAnJ,KAAAyJ,OAAAs0B,EAAAt0B,OACAzJ,KAAA2qB,QAAA,GACA3qB,KAAAipB,SAAA8U,EAAA9U,UAAA,GACAjpB,KAAAqmB,sBAAA0X,EAAA1X,sBAEArmB,KAAAo4B,UAAA,SAAA7V,GACAH,EAAAgW,UAAA7V,EAAAuF,EAAAre,SAGAzJ,KAAA++B,aAAA,SAAAna,GACAxC,EAAA2c,aAAAna,EAAAkD,EAAAre,SAGA,IAAAqe,EAAA9nB,KAEA+9B,EAAAvU,YACAxpB,KAAAqmB,sBAAA0X,EAAAvU,UAAAnD,uBAGA,IAOAiC,EAPA0W,EAAA,GAEAL,EAAAxZ,eAAAyZ,EAAA,CACA1Z,qBAAA,EACAG,qBAAA,IAKA,IAAAsE,IAAAoU,EAAApU,kBACAoU,EAAAvU,YACAG,IAAAoU,EAAAvU,UAAAG,mBAGA,IAAAsV,EAAA,GAOA,GANA7c,EAAA2D,cAAAnc,QAAA,SAAA8a,GACAA,GACAua,EAAAx8B,KAAAiiB,KAIAiF,EAiDArB,EAAAyV,EAAAnU,YAjDA,CACA,IAAAsV,EAAA,OACA9c,EAAA+c,WAAAC,MAAAhd,EAAA+c,WAAAE,SACAjd,EAAA+c,WAAAG,MAAAld,EAAA+c,WAAAI,WAAAnd,EAAA+c,WAAAK,OACAN,EAAA,UAIA,IAEA,IAAAO,EAAA,CACAxH,WAAA7V,EAAA6V,WACAyH,mBAAAtd,EAAAsd,oBAAAR,GAGA,qBAAA9c,EAAAud,uBACAF,EAAAE,qBAAAvd,EAAAud,sBAGA,qBAAAvd,EAAAwd,eACAH,EAAAG,aAAAxd,EAAAwd,cAGA,qBAAAxd,EAAAyd,gBACAJ,EAAAI,cAAAzd,EAAAyd,eAGAzd,EAAA0b,eACA2B,EAAA3B,aAAA1b,EAAA0b,cAAA,gBAGA1b,EAAA6V,YAAA7V,EAAA6V,WAAAv4B,SACA+/B,EAAA,KACArd,EAAA0d,iBAAA,MAGAxX,EAAA,IAAAiP,EAAAkI,EAAArd,EAAA0d,kBACa,MAAA75B,GACb,IACAw5B,EAAA,CACAxH,WAAA7V,EAAA6V,YAGA3P,EAAA,IAAAiP,EAAAkI,GACiB,MAAAx5B,GACjBqiB,EAAA,IAAAiP,KAOAjP,EAAAqF,kBAAArF,EAAAyX,eACAzX,EAAAqF,iBAAA,WACA,IAAAjJ,EAAA,IAAAiY,EAIA,OAHArU,EAAAyX,eAAAn2B,QAAA,SAAAo2B,GACAtb,EAAA2T,SAAA2H,EAAAnU,SAEA,CAAAnH,MAIA4D,EAAA2X,iBAAA3X,EAAAyD,aACAzD,EAAA2X,gBAAA,WACA,IAAAvb,EAAA,IAAAiY,EAIA,OAHArU,EAAAyD,aAAAniB,QAAA,SAAA2a,GACAG,EAAA2T,SAAA9T,EAAAsH,SAEA,CAAAnH,KAIA4D,EAAAgQ,eAAA,SAAA7oB,GACA,GAAAA,EAAA8c,UAiBAnK,EAAA8d,YACAnC,EAAA/T,iBAAA,CACAuC,UAAA9c,EAAA8c,oBACA4T,OAAA1wB,EAAA8c,UAAA4T,OACAC,cAAA3wB,EAAA8c,UAAA6T,qBApBA,IAAAhe,EAAA8d,WAAA,CACA,IAAApW,EAAAxB,EAAAwQ,iBACAiF,EAAAlU,WAAA,CACArd,KAAAsd,EAAAtd,KACA6f,IAAAvC,EAAAuC,IACA/G,yBAAAyY,EAAAzY,2BAAA,EACAqE,oBAAAoU,EAAApU,oBAAA,EACAtD,sBAAAyB,EAAAzB,sBACAF,sBAAA4X,EAAA5X,oBACAhd,MAAAiZ,IAAAjZ,MAAA,GACAsgB,qBAcAwV,EAAAr1B,QAAA,SAAAkjB,GACAiR,EAAAvU,WAAAuU,EAAAvU,UAAAlE,0BAAAyY,EAAAvU,UAAAlE,yBAAAa,qBAIA4X,EAAA3X,wBAIA0G,EAAA1K,EAAAie,mBAAAvT,EAAAhF,GAEAgF,IAEAxE,EAAA2X,kBAAAr2B,QAAA,SAAA8a,GACAoI,GAAApI,EAAA6P,IAAAzH,EAAAyH,KACAzH,EAAA,QAIAA,KAAAsB,WACAtB,EAAAsB,YAAAxkB,QAAA,SAAAiiB,GACA,IAGAvD,EAAA+P,SAAAxM,EAAAiB,GACqB,MAAA7mB,WAKrBqiB,EAAAgY,2BAAAhY,EAAAiY,uBAAA,WACA,IAAAp3B,EAAA2e,EAAA3e,MACAiZ,EAAAkC,MAAAwD,EAAAre,UACAN,EAAAiZ,EAAAkC,MAAAwD,EAAAre,QAAAN,UAGAmf,IAIAyV,EAAAhT,mBAAA,CACAE,mBAAA3C,EAAA2C,mBACAuV,kBAAAlY,EAAAkY,kBACAC,eAAAnY,EAAAmY,eACAt3B,QACAM,OAAAqe,EAAAre,SAGA6e,KAAA2C,qBAAA,IAAA3C,EAAA2C,mBAAAG,OAAA,oBAAAtD,EAAA6C,mBAAAprB,OACAuoB,EAAA6C,QAAA/gB,QAAA,SAAA8a,GACA,IAAAyJ,EAAA/L,EAAAuC,aAAAD,EAAA6P,KAAA,CACA3P,SAAAF,EAAA6P,GACA7P,SACAlY,KAAA,UAGA4V,EAAA0C,cAAAqJ,OAKA,IAAAhJ,EAAA,CACAD,sBAAA+Z,EAAAv/B,OACA2lB,sBAAA4Z,EAAAv/B,QAGAq+B,EAAA9Y,0BAAAE,EAAA4Y,EAAA9Y,yBAEA0Z,EAAAxZ,eAAAyZ,EAAAzZ,GAGA,IAAAub,EAAA,GAEApY,EAAAqY,QAAA,SAAAlxB,GACA,GAAAA,GAAA,UAAAA,EAAAjD,KAQA,GANAiD,EAAAiV,OAAAjV,EAAAkb,QAAAlb,EAAAkb,QAAAjrB,OAAA,GAEA+P,EAAAiV,OAAA6P,KACA9kB,EAAAiV,OAAA6P,GAAA9kB,EAAAoc,MAAA0I,IAGAmM,EAAAjxB,EAAAiV,OAAA6P,KAAA,WAAApH,UAAAC,QAAAniB,KACAwE,EAAAoc,QACApc,EAAAoc,MAAA+U,QAAA,WACAtY,KAAAuY,eAAApxB,SAHA,CASAixB,EAAAjxB,EAAAiV,OAAA6P,IAAA9kB,EAAAiV,OAAA6P,GAEA,IAAA9K,EAAA,GACAsU,EAAAvU,WAAAuU,EAAAvU,UAAAC,eACAA,EAAAsU,EAAAvU,UAAAC,eACasU,EAAAtU,iBACbA,EAAAsU,EAAAtU,gBAGA,IAAAqX,EAAArX,EAAAha,EAAAiV,OAAA6P,IACAuM,GACArxB,EAAAiV,OAAA+H,QAAAqU,EAAArU,QACAhd,EAAAiV,OAAAgI,QAAAoU,EAAApU,QACAjd,EAAAiV,OAAAiI,SAAAmU,EAAAnU,WAEAld,EAAAiV,OAAAgI,UAAA0B,EAAA3e,EAAAiV,OAAA,SAAAhlB,OACA+P,EAAAiV,OAAA+H,SAAAhd,EAAAiV,OAAAgI,QACAjd,EAAAiV,OAAAiI,UAAA,GAGAld,EAAAiV,OAAAE,SAAAnV,EAAAiV,OAAA6P,GAEAyK,EAAAvvB,EAAAiV,OAAA6P,IAAA9kB,EAAAiV,OACAqZ,EAAArT,eAAAjb,EAAAiV,QAEAjV,EAAAiV,OAAA0J,YAAAxkB,QAAA,SAAAiiB,GACAA,EAAA+U,QAAA,WACAtY,KAAAuY,eAAApxB,MAIAA,EAAAiV,OAAAqc,cAAA,WACAzY,KAAAuY,eAAApxB,MAIA6Y,EAAAuY,eAAA,SAAApxB,GAEAA,EAAAiV,OAAAE,SAAAnV,EAAAiV,OAAA6P,GAEAyK,EAAAvvB,EAAAiV,OAAA6P,YACAyK,EAAAvvB,EAAAiV,OAAA6P,IAGAwJ,EAAAlT,sBAAApb,EAAAiV,SAGA,oBAAA4D,EAAAyW,eAEAzW,EAAAyW,aAAA,SAAAra,GACAA,EAAA0J,YAAAxkB,QAAA,SAAAiiB,GACAvD,EAAA0Y,YAAAnV,EAAAnH,OAKA1kB,KAAAwsB,mBAAA,SAAAyU,GACA3Y,EAAA4Y,gBAAA,IAAA7C,EAAA4C,KAkBAjhC,KAAAssB,aAAA,SAAA9C,EAAA2X,GACAA,KAAA,aAEA,WAAAhU,UAAAC,QAAAniB,OACAue,EAAA6C,IAAAjK,EAAAgf,WAAA5X,EAAA6C,MAGA/D,EAAA+Y,qBAAA,IAAAjD,EAAA5U,IAAAkH,KAAAyQ,EAAA,SAAAvyB,GACAwT,EAAAsB,YACA/U,QAAAC,MAAA,mCAAAA,EAAA,KAAA4a,EAAA6C,KAGA8U,MACaxQ,MAAA,SAAA/hB,GACbwT,EAAAsB,YACA/U,QAAAC,MAAA,mCAAAA,EAAA,KAAA4a,EAAA6C,KAGA8U,OAIA,IAAAG,GAAA,EAgDA,SAAAC,EAAArY,GAEAA,EAAAsY,WAAA,cAEAtY,EAAAgT,UAAA,SAAAzsB,GACAsuB,EAAA3T,qBAAA3a,EAAAiJ,OAGAwQ,EAAAuE,OAAA,WACAsQ,EAAAvT,oBAAAtB,IAGAA,EAAA/S,QAAA,SAAAvH,GACAmvB,EAAAxT,mBAAA3b,IAGAsa,EAAAsE,QAAA,SAAA/d,GACAsuB,EAAAtT,oBAAAhb,IAGAyZ,EAAAuY,aAAAvY,EAAAN,KACAM,EAAAN,KAAA,SAAAlQ,GACA,SAAAwQ,EAAA9b,YAIA8b,EAAAuY,aAAA/oB,IAGA4P,EAAAY,UA3EA6U,EAAAvU,YACA8X,GAAA,GAGAthC,KAAAmpB,kBAAA,WACA,IAAAD,EAAAZ,EAAAa,kBAAA,WACAoY,EAAArY,KAGA,IAAA9G,EAAAG,QAAA7J,MAAAiR,IACA2X,EAMAthC,KAAAmpB,oBALAb,EAAAoZ,cAAA,SAAAjyB,GACA,IAAAyZ,EAAAzZ,EAAAyZ,QACAqY,EAAArY,KAOAlpB,KAAA2hC,2BAAA,SAAArD,GACA,IAAAsD,EAOA,GANAtZ,EAAAyD,aAAAniB,QAAA,SAAA2a,GACAqd,GAAA,UAAArd,EAAAsH,MAAAI,OACA2V,EAAArd,KAIAqd,KAAAC,cAAA,CAEA,IAAAlf,EAAAif,EAAAC,gBACAlf,EAAAmf,UAAA,KAAAnf,EAAAmf,UAAA,GAAAC,SAAAzD,GACA3b,EAAAmf,UAAA,KAAAnf,EAAAmf,UAAA,GAAAC,SAAAzD,GACAsD,EAAAI,cAAArf,KAGAob,EAAAvU,YACAuU,EAAAvU,UAAAlE,2BACAH,EAAA4Y,EAAAvU,UAAAlE,0BAEAqZ,EAAAxZ,eAAAyZ,EAAAzZ,GACAnlB,KAAAssB,aAAAyR,EAAAvU,UAAA,WACAyY,EAAA,mBAoCA,WAAA7f,EAAAG,QAAAC,OAAA,WAAAJ,EAAAG,QAAAE,OAAA,WAAAL,EAAAG,QAAAG,SACAic,EAAAxZ,eAAAyZ,EAAA,CACA1Z,oBAAA,WAAA9C,EAAAG,QAAAC,OAAAub,EAAAvU,WAAAuU,EAAAvU,UAAAlE,0BAAAyY,EAAAvU,UAAAlE,yBAAAJ,oBACAG,oBAAA,WAAAjD,EAAAG,QAAAE,OAAA,WAAAL,EAAAG,QAAAG,QAAAqb,EAAAvU,WAAAuU,EAAAvU,UAAAlE,0BAAAyY,EAAAvU,UAAAlE,yBAAAJ,uBAIA,IAAAuE,EAAA,GAyCA,SAAAwY,EAAAC,GACA5Z,EAAA4Z,GAAAvD,EAAAxZ,gBAAAuL,KAAA,SAAA5G,GACA,WAAAqD,UAAAC,QAAAniB,OACA6e,EAAAuC,IAAAjK,EAAAgf,WAAAtX,EAAAuC,MAEA/D,EAAAoQ,oBAAA5O,GAAA4G,KAAA,WACAtO,EAAA8d,aAEAnC,EAAAlU,WAAA,CACArd,KAAAsd,EAAAtd,KACA6f,IAAAvC,EAAAuC,IACA/G,yBAAAyY,EAAAzY,2BAAA,EACAqE,oBAAAoU,EAAApU,oBAAA,EACAtD,sBAAAyB,EAAAzB,sBACAF,sBAAA4X,EAAA5X,oBACAhd,MAAAiZ,IAAAjZ,MAAA,GACAsgB,mBAGArH,EAAA+f,0BAAAra,KACiB,SAAAlZ,GACjBwT,EAAAsB,YACA/U,QAAAC,MAAA,4BAAAA,MAEa,SAAAA,GACbwT,EAAAsB,YACA/U,QAAAC,MAAA,YAAAA,KAlEA0Z,EAAA2X,kBAAAr2B,QAAA,SAAA8a,GACA+E,EAAA/E,EAAAE,UAAA,CACA6H,UAAA/H,EAAA+H,QACAC,UAAAhI,EAAAgI,QACAC,WAAAjI,EAAAiI,YAmEA2U,GACAW,EAAA,eAGA3Z,EAAA8Z,YAAA9Z,EAAA8T,MACA9T,EAAA8T,MAAA,WACA,GAAA9T,EAAA,CAIA,IACAA,EAAA8Z,cAAA9Z,EAAA8T,OACA9T,EAAA8Z,cAEa,MAAAn8B,IAEbqiB,EAAA,KACAR,EAAAQ,KAAA,OAGAtoB,KAAAsoB,OAKA,IAAA+Z,EAAA,WACA,SAAAC,EAAAjW,EAAAkW,GACA,IAAA3tB,EAAA4tB,EAAAnW,GAEA,OAAAzX,EAAA6tB,kBAIA,QAAAF,GAAA3tB,EAAA8tB,gBAAA9tB,EAAA6tB,kBAAA,GACApW,EAGA,QAAAkW,GAAA3tB,EAAA+tB,gBAAA/tB,EAAA6tB,kBAAA,GACApW,EAGA,SAAAkW,GAAA3tB,EAAAguB,iBAAAhuB,EAAA6tB,kBAAA,GACApW,GAGAA,EAAAwW,EAAAxW,EAAAkW,EAAA3tB,GAEAyX,GAjBAA,EAoBA,SAAAwW,EAAAxW,EAAAyW,EAAAluB,EAAAmuB,GACA,IAAAC,EAAA,GAEA,WAAAF,EAAA,CACA,IAAAluB,EAAA8tB,cACA,OAAArW,EAEA2W,EAAApuB,EAAA8tB,cAGA,WAAAI,EAAA,CACA,IAAAluB,EAAA+tB,cACA,OAAAtW,EAEA2W,EAAApuB,EAAA+tB,cAGA,YAAAG,EAAA,CACA,IAAAluB,EAAAguB,eACA,OAAAvW,EAGA2W,EAAApuB,EAAAguB,eAGA,IAAAK,EAAAruB,EAAAsuB,0BAAAnP,MAAA,qBAEAoP,EAAA,CAAAH,GAcA,OAZAD,IACAI,EAAA,IAGAvuB,EAAA6tB,kBAAA74B,QAAA,SAAAw5B,GACAA,IAAAJ,GACAG,EAAA1gC,KAAA2gC,KAGAH,GAAAE,EAAAzgC,KAAA,KAEA2pB,IAAAtgB,QAAA6I,EAAAsuB,0BAAAD,GACA5W,EAGA,SAAAmW,EAAAnW,GACA,IAAAzX,EAAA,GAyBA,OAxBAyX,EAAA0H,MAAA,MAAAnqB,QAAA,SAAAmvB,GACA,IAAAA,EAAAp3B,QAAA,aACAiT,EAAA6tB,kBAAA,GACA1J,EAAAhF,MAAA,YAAAA,MAAA,KAAAnqB,QAAA,SAAAw5B,GACAA,IAAAhiB,OACAgiB,KAAA1jC,SACAkV,EAAA6tB,kBAAAhgC,KAAA2gC,GACAxuB,EAAAsuB,0BAAAnK,OAIA,IAAAA,EAAAp3B,QAAA,cAAAiT,EAAA8tB,gBACA9tB,EAAA8tB,cAAA3J,EAAAhtB,QAAA,gBAAAgoB,MAAA,UAGA,IAAAgF,EAAAp3B,QAAA,cAAAiT,EAAA+tB,gBACA/tB,EAAA+tB,cAAA5J,EAAAhtB,QAAA,gBAAAgoB,MAAA,UAGA,IAAAgF,EAAAp3B,QAAA,eAAAiT,EAAAguB,iBACAhuB,EAAAguB,eAAA7J,EAAAhtB,QAAA,gBAAAgoB,MAAA,WAIAnf,EAGA,SAAAyuB,EAAAhX,GACA,IAAAzX,EAAA4tB,EAAAnW,GAMA,OAHAA,EAAAwW,EAAAxW,EAAA,MAAAzX,GAAA,GACAyX,EAAAwW,EAAAxW,EAAA,MAAAzX,GAAA,GAEAyX,EAGA,SAAAiX,EAAAjX,GACA,IAAAA,GAAA,kBAAAA,EACA,0BAQA,OALAA,IAAAtgB,QAAA,6BACAsgB,IAAAtgB,QAAA,sDACAsgB,IAAAtgB,QAAA,4BACAsgB,IAAAtgB,QAAA,oDAEAsgB,EAGA,SAAAkX,EAAAC,EAAAlb,GACA,GAAAA,KAAAyD,YAAAzD,EAAAyD,aAAArsB,OAAA,CAIA,IAAA8jC,GAAA,kBAAAA,EACA,0BAGAlb,EAAAyD,aAAAniB,QAAA,SAAA2a,GAEA,IADA,IAAAkb,EAAAlb,EAAAsd,gBACAzgC,EAAA,EAA+BA,EAAAq+B,EAAAgE,OAAA/jC,OAA0B0B,IACzD,GAAAq+B,EAAAgE,OAAAriC,GAAAsiC,UAAAF,EAAA,CACA/D,EAAAgE,OAAAE,QAAAlE,EAAAgE,OAAAG,OAAAxiC,EAAA,IACA,MAGAmjB,EAAAyd,cAAAvC,MAIA,SAAAoE,EAAAxX,GACA,OAAAA,EAAAtgB,QAAA,mEAGA,SAAA+3B,EAAAzX,EAAA0X,EAAApX,GACA,OAAAoX,EAIA,qBAAAlR,qBACAxG,GAGAM,IACAoX,EAAArhB,OAEiBqhB,EAAArhB,OAAA,KACjB/T,QAAAyd,KAAA,qGAFAzd,QAAAyd,KAAA,8FAOA2X,EAAArhB,QAAAiK,IACAN,IAAAtgB,QAAA,0BACAsgB,IAAAtgB,QAAA,0CAAAg4B,EAAArhB,OAAA,UAIAqhB,EAAAvhB,OAAAuhB,EAAAthB,SACA4J,IAAAtgB,QAAA,2BAGAg4B,EAAAvhB,QACA6J,IAAAtgB,QAAA,0CAAAg4B,EAAAvhB,MAAA,SAGAuhB,EAAArhB,OACA2J,IAAAtgB,QAAA,0CAAAg4B,EAAArhB,OAAA,QACaqhB,EAAAthB,QACb4J,IAAAtgB,QAAA,0CAAAg4B,EAAAthB,MAAA,SAGA4J,GApCAA,EAyCA,SAAA2X,EAAAC,EAAAC,EAAAxpB,GACA,OAAAypB,EAAAF,EAAA,KAAAC,EAAAxpB,GAKA,SAAAypB,EAAAF,EAAAG,EAAAC,EAAAH,EAAAxpB,GAEA,IADA,IAAA4pB,GAAA,IAAAD,IAAAJ,EAAAvkC,OACA0B,EAAAgjC,EAAmChjC,EAAAkjC,IAAiBljC,EACpD,OAAA6iC,EAAA7iC,GAAAO,QAAAuiC,MACAxpB,IACA,IAAAupB,EAAA7iC,GAAA4X,cAAArX,QAAA+Y,EAAA1B,gBACA,OAAA5X,EAIA,YAIA,SAAAmjC,EAAAC,GACA,IAAAC,EAAA,IAAA1gC,OAAA,+BACApE,EAAA6kC,EAAA//B,MAAAggC,GACA,OAAA9kC,GAAA,IAAAA,EAAAD,OAAAC,EAAA,QAGA,SAAA+kC,EAAArY,EAAAoT,GACAA,KAAA,GACA,IAOAkF,EAPAC,EAAAnF,EAAAj8B,IACAqhC,EAAApF,EAAA1iB,IAEAknB,EAAA5X,EAAA0H,MAAA,QAGA+Q,EAAAd,EAAAC,EAAA,wBAMA,GAJAa,IACAH,EAAAJ,EAAAN,EAAAa,MAGAH,EACA,OAAAtY,EAGA,IACA0Y,EADAC,EAAAhB,EAAAC,EAAA,wBAMA,GAJAe,IACAD,EAAAR,EAAAN,EAAAe,MAGAA,EACA,OAAA3Y,EAGA,IAAA4Y,EAAAjB,EAAAC,EAAA,UAAAc,EAAAj5B,YACA,UAAAm5B,EAAA,CACA,IAAAC,EAAA,OACAA,GAAA,UAAAP,EAAA,0BAAAC,GAAA,kCAAwHC,GAAA,OACxHZ,EAAAgB,GAAAhB,EAAAgB,GAAApvB,OAAAqvB,GACA7Y,EAAA4X,EAAAvhC,KAAA,QAGA,OAAA2pB,EAGA,SAAA8Y,EAAA9Y,EAAAoT,GACAA,KAAA,GAEA,IAIA2F,EAJAnB,EAAA5X,EAAA0H,MAAA,QAGAsR,EAAArB,EAAAC,EAAA,yBAMA,GAJAoB,IACAD,EAAAb,EAAAN,EAAAoB,MAGAD,EACA,OAAA/Y,EAGA,IAAAiZ,EAAAtB,EAAAC,EAAA,UAAAmB,EAAAt5B,YACA,UAAAw5B,EACA,OAAAjZ,EAGA,IAAAkZ,EAAA,GA+BA,OA9BAA,GAAA,aAAgC,oBAAA9F,EAAA+F,OAAA/F,EAAA+F,OAAA,KAChCD,GAAA,mBAAgC,oBAAA9F,EAAA,gBAAAA,EAAA,qBAEhC,oBAAAA,EAAAgG,oBACAF,GAAA,wBAAoC9F,EAAAgG,mBAAA,UAGpC,oBAAAhG,EAAAiG,kBACAH,GAAA,sBAAoC9F,EAAAiG,iBAAA,UAGpC,oBAAAjG,EAAAkG,MACAJ,GAAA,UAAoC,oBAAA9F,EAAAkG,IAAAlG,EAAAkG,IAAA,MAGpC,oBAAAlG,EAAAmG,eACAL,GAAA,kBAAoC9F,EAAAmG,cAGpC,oBAAAnG,EAAAoG,SACAN,GAAA,YAAoC9F,EAAAoG,QAGpC,oBAAApG,EAAAqG,WACAP,GAAA,kBAAA9F,EAAAqG,UAGA7B,EAAAqB,GAAArB,EAAAqB,GAAAzvB,OAAA0vB,GAEAlZ,EAAA4X,EAAAvhC,KAAA,QACA2pB,EAKA,SAAA0Z,EAAA1Z,GAGA,IAFA,IAAA4X,EAAA5X,EAAA0H,MAAA,QACAiS,EAAA,KACA5kC,EAAA,EAA2BA,EAAA6iC,EAAAvkC,OAAqB0B,IAChD,QAAA6iC,EAAA7iC,GAAAgqB,OAAA,eACA,IAAAga,EAAAa,WAAAhC,EAAA7iC,GAAA,uBACA,MAGA,IAAAA,EAAA,EAA2BA,EAAA6iC,EAAAvkC,OAAqB0B,IAChD,QAAA6iC,EAAA7iC,GAAAgqB,OAAA,WACA,IAAA8a,EAAAD,WAAAhC,EAAA7iC,GAAA,gBACA,GAAA8kC,IAAAd,EAAA,CACAY,EAAA5kC,EACA,OAIA,cAAA4kC,EAAA3Z,GACA4X,EAAA+B,GAAA/B,EAAA+B,GAAAnwB,OAAA,8BACAwW,EAAA4X,EAAAvhC,KAAA,QACA2pB,GAGA,OACAgX,YACAC,cACAC,aACAM,gBACAsC,gCAAA,SAAA9Z,EAAA0X,EAAApX,GACA,OAAAmX,EAAAzX,EAAA0X,EAAApX,IAEA+X,iBAAA,SAAArY,EAAAoT,GACA,OAAAiF,EAAArY,EAAAoT,IAEA0F,kBAAA,SAAA9Y,EAAAoT,GACA,OAAA0F,EAAA9Y,EAAAoT,IAEA2G,UAAA,SAAA/Z,GACA,OAAAiW,EAAAjW,EAAA,QAEAiW,cACAyD,oBAjWA,GAsWAj2B,OAAAu2B,iBAAAhE,EAIA,IAAAnY,EAAA,WACA,SAAAC,EAAA/H,EAAAkkB,GACA,IAAA/Z,EAAA+Z,EAAA/Z,UAEAga,EAAAnkB,EAAA+c,WACAG,EAAAiH,EAAAjH,KACAF,EAAAmH,EAAAnH,KAUA,GARAvW,EAAA0d,EAAAhH,aACAD,EAAAiH,EAAAhH,WAGA1W,EAAA0d,EAAAlH,SACAD,EAAAmH,EAAAlH,QAGAkH,EAAA/G,OAAAjT,EAAA9nB,MAAA,gBAIA26B,IAAA7S,EAAA9nB,MAAA,iBAIA66B,IAAA/S,EAAA9nB,MAAA,gBAIA,IAAAktB,EAAAvP,EAAAokB,aAEA,IAAA7U,EAAA8U,MAAAla,EAAA9nB,MAAA,aAIAktB,EAAA+U,MAAAna,EAAA9nB,MAAA,WAQA,OAJA2d,EAAAsB,YACA/U,QAAAwC,MAAA,wBAAAob,GAGA,CACAA,YACA4T,OAAAmG,EAAAnG,OACAC,cAAAkG,EAAAlG,gBAIA,OACAjW,qBAlDA,GAwDAwc,EAAA,WACA,SAAAC,EAAAxkB,GAGA,IAAA6V,EAAA,EACAC,KAAA,CACA,+BACA,gCACA,gCACA,gDAIA,OAAAD,EAGA,OACA2O,iBAjBA,GAuBA,SAAAC,EAAA7Z,EAAAtI,GACAsI,EAAA5H,WAAA4H,EAAA5H,UAAA0hB,kBACApiB,EAAAiI,UAAA,EACSK,EAAA+Z,gBAAA/Z,EAAAga,YACTtiB,EAAAiI,UAAA,EACSK,EAAAvK,MACTiC,EAAAgI,SAAA,EACSM,EAAAxK,QACTkC,EAAA+H,SAAA,GA+BA,SAAAwa,EAAA79B,GACA,QAAA4mB,wBAAAkX,MAAA,CAIAlX,wBAAAkX,OAAA,EAGA,IAAAhX,EAAA9M,KAAAC,UAAAja,EAAA+9B,uBAiCA,GAAAnX,wBAAArF,QAAAuF,GACAkX,EAAApX,wBAAArF,QAAAuF,GAAAxL,QAAA,OACS,CACT,IAAA2iB,IAAA,mBAAA9hC,KAAA6pB,UAAAC,WAAA,IACA,GAAAgY,GAAA,qBAAAjY,UAAAgK,cAAA,oBAAAhK,UAAAgK,aAAAlI,aASA,OARA9B,UAAA8B,aAAA9B,UAAA8B,cAAA9B,UAAAiD,oBAAAjD,UAAAkD,qBACAlD,UAAA8B,aAAA9nB,EAAA+9B,sBAAA,SAAAziB,GACAA,EAAAE,SAAAF,EAAAE,UAAAF,EAAA6P,IAAAtF,IACAvK,EAAAwL,aACAkX,EAAA1iB,IACiB,SAAA9V,GACjBxF,EAAA2jB,kBAAAne,EAAAxF,EAAA+9B,yBAKA,wBAAA/X,UAAAgK,aAAA,CACAhK,UAAA8B,aAAA9B,UAAA8B,cAAA9B,UAAAiD,oBAAAjD,UAAAkD,gBACA,IAGAgV,EAAAC,EAFAC,EAAA,aAGApY,UAAAgK,aAAA,CACAlI,aAAA,SAAAuW,GASA,OARArY,UAAA8B,aAAAuW,EAAA,SAAAC,GACAA,EAAAhjB,QACA4iB,EAAA5iB,QACyB,SAAA9V,GACzB44B,EAAA54B,GACA24B,EAAA34B,IAGA,CACA8hB,KAAA,SAAAiX,GACA,IAAAL,EAOA,OAFAK,EAEA,CACAjX,KAAA,SAAAkX,GACAL,EACAK,EAAAL,GAIAC,EAAAI,IAbAD,EAAAL,OAsBA,QAAAl+B,EAAA+9B,sBAAAxa,SAAA,CACA,GAAAyC,UAAAgK,aAAAyO,gBACAzY,UAAAgK,aAAAyO,gBAAAz+B,EAAA+9B,uBAAAzW,KAAA,SAAAhM,GACAA,EAAAE,SAAAF,EAAAE,UAAAF,EAAA6P,IAAAtF,IACAvK,EAAAwL,aAEAkX,EAAA1iB,KACqBiM,MAAA,SAAA/hB,GACrBxF,EAAA2jB,kBAAAne,EAAAxF,EAAA+9B,6BAEiB,KAAA/X,UAAAyY,gBAUjB,UAAApmC,MAAA,wDATA2tB,UAAAyY,gBAAAz+B,EAAA+9B,uBAAAzW,KAAA,SAAAhM,GACAA,EAAAE,SAAAF,EAAAE,UAAAF,EAAA6P,IAAAtF,IACAvK,EAAAwL,aAEAkX,EAAA1iB,KACqBiM,MAAA,SAAA/hB,GACrBxF,EAAA2jB,kBAAAne,EAAAxF,EAAA+9B,yBAKA,OAGA/X,UAAAgK,aAAAlI,aAAA9nB,EAAA+9B,uBAAAzW,KAAA,SAAAhM,GACAA,EAAAE,SAAAF,EAAAE,UAAAF,EAAA6P,IAAAtF,IACAvK,EAAAwL,aAEAkX,EAAA1iB,KACaiM,MAAA,SAAA/hB,GACbxF,EAAA2jB,kBAAAne,EAAAxF,EAAA+9B,+BA/HAnX,wBAAA8X,cAAArlC,KAAA2G,GAQA,SAAAg+B,EAAA1iB,EAAAqjB,GACAlB,EAAAz9B,EAAA+9B,sBAAAziB,GAEA,IAAAqL,EAAA,QAEA,eAAArL,IACAqL,EAAA,YAEArL,EAAAkK,iBAAAmB,EAAA,kBACAC,wBAAArF,QAAAuF,GAEAF,wBAAAkX,OAAA,EACAlX,wBAAA8X,cAAAnmC,QAAAyH,YACA4mB,wBAAA8X,cAAA9X,wBAAA8X,cAAAnmC,QAAAyH,IACA4mB,wBAAA8X,cAAA/W,EAAAf,wBAAA8X,kBAEa,GAEb9X,wBAAArF,QAAAuF,GAAA,CACAxL,UAEAsL,wBAAAkX,OAAA,EAEAlX,wBAAA8X,cAAApoC,QACAunC,EAAAjX,wBAAA8X,cAAAE,SAIA5+B,EAAAyjB,oBAAAnI,EAAAqjB,IAhEAj4B,OAAAkgB,wBAAA,CACArF,QAAA,GACAuc,OAAA,EACAY,cAAA,GACA7X,OAAA,SAAAC,GACAlwB,KAAAknC,OAAA,EAEA,IAAAxiB,EAAA1kB,KAAA2qB,QAAAuF,GACA,GAAAxL,EAAA,CAIAA,WAEA,IAAAtb,EAAAsb,EAAAujB,+BAEAjoC,KAAA8nC,cAAAnmC,QAAAyH,YACApJ,KAAA8nC,cAAA9nC,KAAA8nC,cAAAnmC,QAAAyH,IACApJ,KAAA8nC,cAAA/W,EAAA/wB,KAAA8nC,gBAGA9nC,KAAA2qB,QAAAuF,GAAAxL,OAAA,YACA1kB,KAAA2qB,QAAAuF,MA4IA,IAAAC,EAAA,WACA,SAAA+X,EAAA17B,GACA,GAAAA,EAIA,wBAAAA,GAAA,qBAAAA,EACAA,EAGAA,EAAAgW,OAAAhW,EAAAiW,MACA,KAGAjW,EAAAgW,MACA,QAGAhW,EAAAiW,MACA,aADA,EAOA,SAAA0lB,EAAAzjB,EAAA0jB,EAAAhmB,GACA,GAAAsC,KAAAkK,iBAAA,CAEA,uBAAAwZ,GAAA,GAAAA,EAAA,CACA,IAAArY,EAAA,QAEA,eAAArL,IACAqL,EAAA,YAGArL,EAAAkK,iBAAAmB,EAAA,WACAI,EAAAC,aAAApwB,KAAA4kB,SAAAmL,KACiB,GAGjBrL,EAAA2jB,KAAA,SAAA77B,EAAA87B,GACA97B,EAAA07B,EAAA17B,GAEA,qBAAA87B,IACAF,EAAAE,GAGA,oBAAA97B,GAAA,SAAAA,GACA4hB,EAAA1J,EAAA,SAAA9a,QAAA,SAAAiiB,GACAA,EAAA0c,SAAA,EACAnmB,EAAAuC,aAAAD,EAAAE,UAAA4jB,cAAA,IAIA,oBAAAh8B,GAAA,SAAAA,GACA4hB,EAAA1J,EAAA,SAAA9a,QAAA,SAAAiiB,GACAA,EAAA0c,SAAA,IAIA,oBAAAH,GAAA,GAAAA,GACAjY,EAAAC,aAAA1L,EAAAE,SAAA,OAAApY,GAGA4V,EAAAuC,aAAAD,EAAAE,UAAAiK,SAAAriB,GAAA,OAEAohB,EAAAlJ,EAAA,OAAAlY,IAGAkY,EAAA+jB,OAAA,SAAAj8B,EAAA87B,GACA97B,EAAA07B,EAAA17B,GAEA,qBAAA87B,IACAF,EAAAE,GAGAI,IAEA,oBAAAl8B,GAAA,SAAAA,GACA4hB,EAAA1J,EAAA,SAAA9a,QAAA,SAAAiiB,GACAA,EAAA0c,SAAA,EACAnmB,EAAAuC,aAAAD,EAAAE,UAAA4jB,cAAA,IAIA,oBAAAh8B,GAAA,SAAAA,IACA4hB,EAAA1J,EAAA,SAAA9a,QAAA,SAAAiiB,GACAA,EAAA0c,SAAA,IAIA,qBAAA/7B,GAAA,SAAAA,GAAA4V,EAAAuC,aAAAD,EAAAE,UAAA4jB,cACA,SAAA73B,EAAAg4B,GACAA,IACAA,EAAA,GAGAA,IAGAA,EAAA,KAAAvmB,EAAAuC,aAAAD,EAAAE,UAAA4jB,eACA9jB,EAAA2jB,KAAA,SAEA75B,WAAA,WACAmC,EAAAg4B,IACiC,KAbjC,IAmBA,oBAAAP,GAAA,GAAAA,GACAjY,EAAAC,aAAA1L,EAAAE,SAAA,SAAApY,GAGA4V,EAAAuC,aAAAD,EAAAE,UAAAmK,WAAAviB,GAAA,OAEAohB,EAAAlJ,EAAA,SAAAlY,IAGA,SAAAk8B,IACA,GAAAtmB,EAAAuC,aAAAD,EAAAE,UAAAgL,aAAA,CAIA,IAAAA,EAAAxN,EAAAuC,aAAAD,EAAAE,UAAAgL,aACAA,EAAAnB,OAAA,EACAma,EAAA,iBACA,IACAhZ,EAAAnB,QAAA,GACqB,MAAAxoB,GACrB2pB,EAAAnB,OAAA,OAMA,SAAAma,EAAAC,EAAAC,EAAA5/B,EAAA6/B,GACAA,MAAA,KACAA,GAAAD,GAEAt6B,WAAA,WACAtF,IACA0/B,EAAAC,EAAAC,EAAA5/B,EAAA6/B,IACaF,GAGb,OACAV,cACA/X,aAAA,SAAAxL,EAAAC,EAAArY,MArJA,GA2JA,SAAA8gB,EAAAlL,GACA,IAAA4mB,EAAA,GAEA,SAAA79B,EAAAuN,EAAAjP,EAAAN,GAEA,IAAAa,EAAA0O,EAAA1O,KAOA,GANAg/B,EAAAh/B,KACAg/B,EAAAh/B,GAAA,IAGAg/B,EAAAh/B,GAAAvH,KAAAiW,EAAA2L,SAEA3L,EAAAuwB,KAAA,CACA,IAAA5kB,EAAA2kB,EAAAh/B,GAAAtH,KAAA,IACAgW,EAAAwwB,WACA7kB,EAAAjB,KAAAmK,MAAAlJ,IAIA,IAAA8kB,GAAA,IAAAr+B,MAAA0kB,UACA4Z,EAAAD,EAAAzwB,EAAA2wB,YAEApjC,EAAA,CACAyS,KAAA2L,EACA5a,SACAN,QACAigC,WAGAhnB,EAAAknB,mBACArjC,EAAAsjC,SAAAtjC,EAAAyS,KACA0J,EAAAonB,WAAAC,cAAAxjC,EAAAyS,KAAA,SAAAgxB,GACAzjC,EAAAyS,KAAAgxB,EACAtnB,EAAA8Z,UAAAj2B,MAGAmc,EAAA8Z,UAAAj2B,UAGA+iC,EAAAh/B,IAIA,OACAmB,WAKA,IAAAke,EAAA,CACAT,KAAA,SAAAmV,GACA,IAAA3b,EAAA2b,EAAA3b,WAEA8G,EAAA6U,EAAA7U,QACA7e,EAAA0zB,EAAA1zB,aACAs/B,EAAA5L,EAAAzU,KACAsgB,EAAAxnB,EAAApW,WAAA,IACA69B,EAAA,GACAX,GAAA,EAEAjY,EAAA0Y,KACAT,GAAA,EACAS,EAAAvmB,KAAAC,UAAAsmB,IAIA,IAAA3/B,EAAAilB,IACAoa,GAAA,IAAAv+B,MAAA0kB,UAIA,SAAAsa,EAAAC,EAAAzgB,GACA,IAAA5Q,EAAA,CACAlM,KAAA,OACAxC,OACAq/B,eAGAU,IACAzgB,EAAAygB,EACArxB,EAAAsxB,QAAAvvB,SAAA6O,EAAA5pB,OAAAkqC,IAGAtgB,EAAA5pB,OAAAkqC,EACAlxB,EAAA2L,QAAAiF,EAAAjkB,MAAA,EAAAukC,IAEAlxB,EAAA2L,QAAAiF,EACA5Q,EAAAuwB,MAAA,EACAvwB,EAAAwwB,YAGAhgB,EAAAN,KAAAlQ,EAAArO,GAEAw/B,EAAAvgB,EAAAjkB,MAAAqT,EAAA2L,QAAA3kB,QAEAmqC,EAAAnqC,QACA8O,WAAA,WACAs7B,EAAA,KAAAD,IACqBznB,EAAA6nB,eAAA,KA7BrBH,EAAAH,KAqCAO,EAAA,WACA,SAAAC,EAAA/nB,GACA,IAAAgoB,EAAA,GAgFA,SAAAC,EAAAC,EAAAjQ,GACA,QAAAiQ,EAAAC,SAAA,CAIA,IAAAA,GAAAD,EAAAC,SAAA7O,QAAA,GAAA3H,MAAA,aACAsG,EAAAmQ,UAAAD,EAAA,KAnFAnoB,EAAA8F,YAAA,SAAAjf,GACA,IAAAwhC,EAAAz8B,SAAAC,cAAA,OAcA,GAbAw8B,EAAAC,MAAAzhC,EAAAgC,KACAw/B,EAAAD,UAAA,0CAEAvhC,EAAAoB,eACAogC,EAAAD,WAAA,kBAAAvhC,EAAAoB,aAAA,KAGA+X,EAAAuoB,iBACAvoB,EAAAuoB,eAAA38B,SAAAM,MAAAN,SAAAkB,iBAGAkT,EAAAuoB,eAAAC,aAAAH,EAAAroB,EAAAuoB,eAAAE,aAEA5hC,EAAAoB,aAOA,OANA+/B,EAAAnhC,EAAAe,MAAA,CACAygC,MACAH,SAAAG,EAAAK,cAAA,YACAzQ,MAAAoQ,EAAAK,cAAA,eAEAV,EAAAnhC,EAAAe,MAAAsgC,SAAAvtB,IAAA9T,EAAAwB,WAIA2/B,EAAAnhC,EAAAe,QACAogC,EAAAnhC,EAAAe,MAAA,IAGAogC,EAAAnhC,EAAAe,MAAAf,EAAAoB,cAAA,CACAogC,MACAH,SAAAG,EAAAK,cAAA,YACAzQ,MAAAoQ,EAAAK,cAAA,UAEAV,EAAAnhC,EAAAe,MAAAf,EAAAoB,cAAAigC,SAAAvtB,IAAA9T,EAAAwB,WAIA2X,EAAA6F,eAAA,SAAA3e,GACA,IAAAyhC,EAAAX,EAAA9gC,EAAAU,MACA+gC,IAGAzhC,EAAAe,eACA0gC,EAAAX,EAAA9gC,EAAAU,MAAAV,EAAAe,eACA0gC,KAKAA,EAAAT,SAAA5pC,MAAA4I,EAAAE,iBAAAF,EAAAmB,WAAAsgC,EAAAT,SAAAvtB,IACAstB,EAAAU,EAAAT,SAAAS,EAAA1Q,UAIAjY,EAAA+F,UAAA,SAAAlf,GACA,IAAA8hC,EAAAX,EAAAnhC,EAAAe,MACA,GAAA+gC,GAKA,IAAA9hC,EAAAoB,eACA0gC,EAAAX,EAAAnhC,EAAAe,MAAAf,EAAAoB,cACA0gC,GAFA,CAOA,IAAAN,EAAAM,EAAAN,KACA,GAAAxhC,EAAAuD,KAAA7K,QAAA,SACA8oC,EAAAD,UAAA,YAAAvhC,EAAAqE,IAAA,eAAArE,EAAAgC,KAAA,yCAA+HhC,EAAAgC,KAAA,iCAAAhC,EAAAqE,IAAA,YAAArE,EAAAgC,KAAA,6BAE/Hw/B,EAAAD,UAAA,YAAAvhC,EAAAqE,IAAA,eAAArE,EAAAgC,KAAA,yCAA+HhC,EAAAgC,KAAA,oCAAAhC,EAAAqE,IAAA,YAAArE,EAAAgC,KAAA,iFAf/H0D,QAAAC,MAAA,yCAAA3F,IA6BA,OACAkhC,UA7FA,GAmGAa,EAAA,WACA,SAAAb,EAAA/nB,GACAA,EAAAknB,mBAAA,EACAlnB,EAAA6oB,SAAA,KACA7oB,EAAA8oB,QAAA,0CAGA9oB,EAAAonB,WAAA,CACAC,cAAA,SAAAngB,EAAApgB,GAGA,IAAAiiC,EAAAn9B,SAAAC,cAAA,UACAk9B,EAAA3+B,KAAA,kBAEA,IAAA4+B,EAAAC,mBAAA/hB,GAEAgiB,EAAA,SAAAlpB,EAAAkN,QACAxf,OAAAw7B,GAAA,SAAAC,GACAA,EAAA7yB,MAAA6yB,EAAA7yB,KAAA8yB,aAAA,IAAAtiC,EACAA,EAAAqiC,EAAA7yB,KAAA8yB,aAAA,GAAA9B,gBAIA6B,EAAA38B,OAAA,yBAAA28B,EAAA38B,MAAAyV,QACA1V,QAAAC,MAAA,mEAIA28B,EAAA38B,MACAD,QAAAC,MAAA28B,EAAA38B,MAAAyV,SAIA1V,QAAAC,MAAA28B,IAGA,IAAAnmC,EAAA,wDAAAgd,EAAA8oB,QAAA,YAAA9oB,EAAA6oB,UAAA,6BAAAK,EAAA,MAAAF,EACAD,EAAAzpB,IAAAtc,EACA4I,SAAAy9B,qBAAA,WAAAt8B,YAAAg8B,IAEAO,mBAAA,SAAAxiC,GACA,IAAAyiC,EAAA,IAAAC,eACAD,EAAAE,mBAAA,WACA,GAAAF,EAAAv+B,YAAAw+B,eAAAv+B,KAAA,CACA,IAAAk+B,EAAAnoB,KAAAmK,MAAAoe,EAAAG,cAEA,GAAAP,KAAA7yB,MAAA6yB,EAAA7yB,KAAAqzB,UAEA,YADA7iC,EAAAqiC,EAAA7yB,KAAAqzB,WAIA,GAAAR,EAAA38B,OAAA,yBAAA28B,EAAA38B,MAAAyV,QAEA,YADA1V,QAAAC,MAAA,mEAIA,GAAA28B,EAAA38B,MAEA,YADAD,QAAAC,MAAA28B,EAAA38B,MAAAyV,SAIA1V,QAAAC,MAAA28B,KAGA,IAAAj+B,EAAA,kEAAA8U,EAAA8oB,QAAA,aACAS,EAAAxW,KAAA,MAAA7nB,GAAA,GACAq+B,EAAA/iB,KAAA,QAKA,OACAuhB,UAxEA,IA+EA,SAAA/nB,GACAH,KAAA,CACA+pB,mBAAA,GAGA5pB,EAAA8G,QAAA9G,EAAAQ,WAAAZ,GAAA2B,SAAAiO,KAAA7lB,QAAA,qDAAAgoB,MAAA,MAAArxB,KAAA,IAAAqxB,MAAA,MAAArxB,KAAA,QAEA,IAAAshB,EAAA,IAAA6D,EAAAzF,GAEA6pB,EAAA,GA8HA,SAAArlB,EAAAvc,GACA+X,EAAA8D,WAAA7b,GAkBA,SAAA6hC,EAAA7pB,GAGA,GAFAD,EAAA+pB,qBAAA,EAEA/pB,EAAAyB,OACAxB,GACAA,EAAAD,EAAAyB,YAFA,CAOA,wBAAA1B,EACA,wBAAAiqB,mBACAt8B,OAAAqS,iBAAAiqB,uBACiB,yBAAAC,iBAGjB,yCAFAv8B,OAAAqS,iBAAAkqB,iBAMA,IAAAlqB,EAAAC,EAAA,SAAAva,GACAwa,GACAA,EAAAD,EAAAyB,WAyNA,SAAAyoB,EAAAjmB,EAAA8a,GACA/e,EAAAyB,OAAAqD,KAAA,aACAtE,UAAAR,EAAAQ,UACAL,QAAAH,EAAAG,QACAgqB,iBAAAnqB,EAAAmqB,iBACApnB,eAAA/C,EAAA+C,eACAwF,QAAA6hB,IACArjC,MAAAiZ,EAAAjZ,MACAsjC,SAAA,qBAAArqB,EAAAqqB,UAAA,kBAAArqB,EAAAqqB,SAAArqB,EAAAqqB,SAAA,IACa,SAAAC,EAAA99B,GACb,QAAA89B,EAAA,CAKA,GAJAtqB,EAAAsB,YACA/U,QAAApG,IAAA,iBAAAmkC,EAAA,YAAAtqB,EAAAQ,WAGAR,EAAAkC,MAAAlC,EAAAQ,WAEA,OAGAoB,EAAA+F,oBAAA1D,IAGA,IAAAqmB,GACAtqB,EAAAsB,YACA/U,QAAAyd,KAAA,iBAAAxd,EAAA,YAAAwT,EAAAQ,WASAue,EAAAuL,EAAAtqB,EAAAQ,UAAAhU,KAMA,SAAA+9B,EAAAzjC,GACAkZ,EAAAsB,YACA/U,QAAApG,IAAA,yCAGA6Z,EAAA4D,sBAAA,EACA5D,EAAAyB,OAAAqD,KAAA,aACAtE,UAAAR,EAAAQ,UACAL,QAAAH,EAAAG,QACAgqB,iBAAAnqB,EAAAmqB,iBACApnB,eAAA/C,EAAA+C,eACAwF,QAAA6hB,IACArjC,MAAAiZ,EAAAjZ,MACAyjC,WAAAxqB,EAAAyqB,qBACAJ,SAAA,qBAAArqB,EAAAqqB,UAAA,kBAAArqB,EAAAqqB,SAAArqB,EAAAqqB,SAAA,IACa,SAAAK,EAAAl+B,IACb,IAAAk+B,IACA1qB,EAAAsB,YACA/U,QAAApG,IAAA,iBAAAukC,EAAA,YAAA1qB,EAAAQ,WAEA1Z,EAAA4jC,EAAA1qB,EAAAQ,aAGA,IAAAkqB,IACA1qB,EAAAsB,YACA/U,QAAAyd,KAAA,iBAAAxd,EAAA,YAAAwT,EAAAQ,WAGA1Z,EAAA4jC,EAAA1qB,EAAAQ,UAAAhU,MAKA,SAAA49B,IACA,IACA,OAAApqB,EAAAuC,aAAAooB,UAAA,SAAAC,IAAA,SAAAv9B,GACA,OACAmV,SAAAnV,EAAAmV,SACAqoB,OAAAx9B,EAAAiV,OAAA0J,YAAA1uB,UAGa,MAAAuG,GACb,UAIA,SAAAinC,EAAArnB,EAAA3c,GACA,GAAAkZ,EAAA+qB,sBAAAtnB,EAAAH,WACAxc,QADA,CAKA,IAAAi+B,EAAA,GAEAthB,EAAAZ,wBAAAC,sBACAiiB,EAAA3kB,MAAAJ,EAAAmqB,iBAAA/pB,OAGAqD,EAAAZ,wBAAAI,sBACA8hB,EAAA1kB,MAAAL,EAAAmqB,iBAAA9pB,OAGA,IAAAF,EAAAsD,EAAAtD,SAAAH,EAAAG,QAEAA,EAAAgD,QAAA,YAAAhD,EAAAC,OAAA,YAAAD,EAAAE,OAAA,YAAAF,EAAAG,OACAxZ,KAIAqZ,EAAAgD,QAAAhD,EAAAC,OAAA,YAAAD,EAAAC,QACAD,EAAA,CACAC,OAAA,KAIAD,EAAAC,OAAAD,EAAAE,OAAAF,EAAAG,UACAH,EAAAG,OACA,SAAAyK,UAAAC,QAAAniB,KACAmkB,UAAAyY,gBAAA,CACAplB,OAAA,EACAD,MAAA2a,EAAA/a,KACyBsO,KAAA,SAAAhO,GACzBA,EAAAiK,UAAA,EACA3I,EAAA6I,oBAAAnK,IAEAH,EAAAC,QAAAD,EAAAE,OAAA0a,EAAA/a,GAGAlZ,EAAAwZ,GAFAN,EAAAgrB,mBAAA,KAAAlkC,IAIyB,SAAA0F,GACzBD,QAAAC,MAAA,0EAGAwT,EAAAgrB,mBAAA,CACA5qB,MAAA2a,EAAA/a,GACAK,OAAA,EACAkK,UAAA,IACyBpK,EAAAC,QAAAD,EAAAE,OAAA0a,EAAA/a,GAAAlZ,EAAAkZ,EAAAgrB,mBAAA,KAAAlkC,KAERqZ,EAAAC,OAAAD,EAAAE,QACjBL,EAAAgrB,mBAAA,KAAAlkC,EAAAqZ,MAojBA,SAAA8qB,EAAA3oB,EAAA6nB,GACA7nB,GAOA6nB,EAAA/pB,OACA4L,EAAA1J,EAAA,SAAA9a,QAAA,SAAAiiB,GACAA,EAAAwhB,iBAAAd,EAAA/pB,SAIA+pB,EAAA9pB,OACA2L,EAAA1J,EAAA,SAAA9a,QAAA,SAAAiiB,GACAA,EAAAwhB,iBAAAd,EAAA9pB,UAdAL,EAAAsB,YACA/U,QAAAC,MAAA,kCAsCA,SAAAgd,EAAAC,EAAAxhB,EAAAyhB,GACAzhB,EACA2Z,EAAA4H,aAAAC,EAAAxhB,EAAAyhB,GAIA1J,EAAAkC,MAAAmE,qBAAA7e,QAAA,SAAAob,GACAhB,EAAA4H,aAAAC,EAAA7G,EAAA8G,KAhnCA9H,EAAA6I,oBAAA,SAAAnI,EAAAxb,GAGA,GAFAA,KAAA,aAEA+iC,EAAAvnB,EAAAE,UACA1b,QADA,CAIA+iC,EAAAvnB,EAAAE,WAAA,EAEA,IACAF,EAAAlY,KAAA,QACa,MAAAvG,IAEbmc,EAAAkrB,oBAAA5oB,GAEA+K,EAAA/K,EAAA,SAAAkL,GACAA,EAAA2E,GAAA7P,EAAAE,SACAgL,EAAA2d,OAAA,EACA3d,EAAAnB,OAAA,GAEA,IAAArM,EAAA2D,cAAApkB,QAAA+iB,IACAtC,EAAA2D,cAAAtjB,KAAAiiB,GAGA,qBAAAyL,GACAA,EAAAgY,YAAAzjB,GAAA,EAAAtC,GAGAA,EAAAuC,aAAAD,EAAAE,UAAA,CACAF,SACAlY,KAAA,QACAojB,eACAnmB,OAAA2Y,EAAA3Y,OACAN,MAAAiZ,EAAAjZ,MACAyb,SAAAF,EAAAE,SACA4jB,cAAA,GAGA,IACAta,EAAA9L,IAAAuC,aAAAD,EAAAE,WACA+J,EAAAvM,IAAAuC,aAAAD,EAAAE,WAEAxC,EAAAorB,SAAAprB,EAAAuC,aAAAD,EAAAE,WACiB,MAAA3e,IAIjBiD,KACakZ,KAGb4B,EAAA4G,qBAAA,SAAAlG,EAAAra,GACA,IACAqa,EAAAlY,KAAA,SACa,MAAAvG,IAEbmc,EAAAkrB,oBAAA5oB,EAAA,iBAEA+K,EAAA/K,EAAA,SAAAkL,GACAA,EAAA2E,GAAA7P,EAAAE,SAEA,qBAAAuL,GACAA,EAAAgY,YAAAzjB,GAAA,EAAAtC,GAGAA,EAAAuC,aAAAD,EAAAE,UAAA,CACAF,SACAlY,KAAA,SACA/C,OAAAY,EACAlB,MAAAiZ,EAAAkC,MAAAja,GAAA+X,EAAAkC,MAAAja,GAAAlB,MAAA,GACAymB,eACAhL,SAAAF,EAAAE,UAGA+J,EAAAvM,IAAAuC,aAAAD,EAAAE,WAEAxC,EAAAorB,SAAAprB,EAAAuC,aAAAD,EAAAE,YACaxC,IAGb4B,EAAA8G,sBAAA,SAAApG,EAAAra,GACA,IAAA8jB,EAAA/L,EAAAuC,aAAAD,EAAAE,UACAuJ,IACAA,EAAA,CACAzJ,SACAlY,KAAA,SACA/C,OAAAY,EACAlB,MAAAiZ,EAAAkC,MAAAja,GAAA+X,EAAAkC,MAAAja,GAAAlB,MAAA,GACAyb,SAAAF,EAAAE,SACAgL,aAAAxN,EAAAuC,aAAAD,EAAAE,UAAAxC,EAAAuC,aAAAD,EAAAE,UAAAgL,aAAA,OAIAxN,EAAA+B,YAAAgK,EAAA1kB,UACA0kB,EAAAhlB,MAAAiZ,EAAA+B,YAAAgK,EAAA1kB,QAAAN,OAGAiZ,EAAA0C,cAAAqJ,UAEA/L,EAAAuC,aAAAD,EAAAE,WAGAZ,EAAA+F,oBAAA,SAAA1F,EAAAha,EAAAnB,GACAA,KAAA,aAEAmB,KAAAga,EAAAha,aACAga,KAAA,GAGA,IAAAopB,EAAA,CACApjC,eACAga,UACAE,OAAAnC,EAAA3Y,QAGA4a,EAAAha,cAAAga,aAAAE,SAEAkpB,EAAAppB,GAGA6nB,EAAA,WACA9pB,EAAAyB,OAAAqD,KAAA9E,EAAAS,mBAAA4qB,EAAAvkC,MAQA8a,EAAA4C,aACA5C,EAAAqH,eAAA,SAAAhhB,EAAAnB,GACAkZ,EAAAyB,QACAzB,EAAAyB,OAAAqD,KAAA,kBAAA7c,EAAAnB,GAAA,cAGAkZ,EAAA8D,WAAA7b,IAGA+X,EAAA2B,cAAA,CAGA2pB,UAAA,WAgCAtrB,EAAAurB,WAAA,SAAA3rB,EAAA9Y,GACAA,KAAA,aAEAkZ,EAAAwrB,cAAA5rB,EAAA,SAAA6rB,EAAA7rB,GACA,GAAA6rB,EAAA,CACAzrB,EAAAQ,UAAAZ,EAEA,IAAAiD,GAAA,EACAK,GAAA,EACAE,IAAApD,EAAAG,QAAAgD,OACAG,EAAApD,EAAAF,EAAAG,SAEA+C,EAAA,CACAJ,oBAAA9C,EAAA+C,eAAAC,UAAAF,oBACAG,oBAAAjD,EAAA+C,eAAAC,UAAAC,qBAGAJ,EAAA,CACAC,oBAAAM,IAAApD,EAAAG,QAAAC,MAAAJ,EAAA+C,eAAAC,UAAAF,oBACAG,oBAAAG,IAAApD,EAAAG,QAAAE,SAAAL,EAAAG,QAAAG,OAAAN,EAAA+C,eAAAC,UAAAC,qBAGA,IAAAgB,EAAA,CACAhc,aAAA+X,EAAAQ,UACAyB,QAAA,CACA4B,yBAAA,EACAT,WACAE,aACAT,0BACAK,4BAEAf,OAAAnC,EAAA3Y,QAGAyjC,EAAA7mB,EAAAhC,QAAA,WACAioB,EAAAjmB,EAAAnd,UAKAkZ,EAAA4D,sBAAA,EACA5D,EAAAwF,aAAA,EAEAxF,EAAAQ,UAAAZ,GAAAI,EAAAQ,UAEAN,EAAAF,EAAAG,SACAoqB,EAAAzjC,GAIAkZ,EAAA0rB,iBAAA,WACAnB,EAAAzjC,QAMAkZ,EAAA4D,sBAAA,EAEA5D,EAAA+S,KAAA,SAAAnT,EAAA9Y,GACAA,KAAA,aAEAkZ,EAAA4D,sBAAA,EACA5D,EAAAwF,aAAA,EAEAxF,EAAAQ,UAAAZ,GAAAI,EAAAQ,UAEAspB,EAAA,WACA5pB,EAAAF,EAAAG,SACAoqB,EAAAzjC,GAIAkZ,EAAA0rB,iBAAA,WACAnB,EAAAzjC,QAOAkZ,EAAA+B,YAAA,GAEA/B,EAAA8D,WAAA,SAAA7b,GACA,GAAAA,GAAA+X,EAAAkC,MAAAja,GAAA,CAIA,IAAA0jC,EAAA,CACAtkC,OAAAY,EACAlB,MAAAiZ,EAAAkC,MAAAja,GAAA+X,EAAAkC,MAAAja,GAAAlB,MAAA,IASA,GANAiZ,EAAA+B,YAAA4pB,EAAAtkC,UACAskC,EAAA5kC,MAAAiZ,EAAA+B,YAAA4pB,EAAAtkC,QAAAN,OAGAiZ,EAAA4rB,QAAAD,GAEA3rB,EAAAkC,MAAAja,GAAA,CACA+X,EAAAkC,MAAAja,GAAAsgB,QAAA/gB,QAAA,SAAA8a,GACAA,EAAAga,SAGA,IAAApW,EAAAlG,EAAAkC,MAAAja,GAAAie,KACA,GAAAA,GAAA,WAAAA,EAAA2C,mBACA,IACA3C,EAAA8T,QACqB,MAAAn2B,IAGrBmc,EAAAkC,MAAAja,KACA+X,EAAAkC,MAAAja,GAAAie,KAAA,YACAlG,EAAAkC,MAAAja,OAKA+X,EAAA6rB,OAAA,SAAA5nB,GACA,IAAAjE,EAAAwF,aAAAvB,GAAA3c,OAAAC,KAAA0c,GAAA3mB,OAAA,CAIA,IAAAyJ,EAAA,GAEAiZ,EAAAkC,MAAA+B,EAAAhc,gBACAlB,EAAAiZ,EAAAkC,MAAA+B,EAAAhc,cAAAlB,MACAiZ,EAAA8D,WAAAG,EAAAhc,eAGAgc,KAAAhc,eACA+X,EAAA1f,KAAA2jB,EAAAhc,cAEA+X,EAAA8rB,eAAA,CACAzkC,OAAA4c,EAAAhc,aACAlB,aAKAiZ,EAAA1f,KAAA,SAAA2H,EAAAjB,GACAgZ,EAAAQ,YAAAvY,MAAAuY,WAAAvY,oBAAA+X,EAAAQ,UACAR,EAAAQ,WAAA,GAEA,IAAAqC,GAAA,EACAK,GAAA,EACAE,GAAA,EACAE,GAAA,EAEA,GAAArb,KAAAkY,UAAAlY,GAAA,kBAAAA,EAAA,CACA,IAAAkY,EAAAlY,KAAAkY,SAAAH,EAAAG,QAEAiD,IAAAjD,EAAAgD,OACAG,EAAApD,EAAAC,GAEA+C,EAAA,CACAJ,oBAAA9C,EAAA+C,eAAAC,UAAAF,oBACAG,oBAAAjD,EAAA+C,eAAAC,UAAAC,qBAGAJ,EAAA,CACAC,oBAAAM,IAAApD,EAAAG,QAAAC,MAAAJ,EAAA+C,eAAAC,UAAAF,oBACAG,oBAAAG,IAAApD,EAAAG,QAAAE,SAAAL,EAAAG,QAAAG,OAAAN,EAAA+C,eAAAC,UAAAC,qBAIAjc,KAAA,GAEA,IAAA+3B,EAAA,aACA,oBAAA/3B,IACA+3B,EAAA/3B,EACAA,EAAA,IAGA,qBAAAA,EAAA6b,0BACAA,EAAA7b,EAAA6b,yBAGA,qBAAA7b,EAAAkc,2BACAA,EAAAlc,EAAAkc,0BAGA,qBAAAlc,EAAAoc,WACAA,EAAApc,EAAAoc,UAGA,qBAAApc,EAAAsc,aACAA,EAAAtc,EAAAsc,YAGA,IAAAW,EAAA,CACAhc,aAAA+X,EAAAQ,UACAyB,QAAA,CACA4B,yBAAA,EACAT,WACAE,aACAT,0BACAK,4BAEAf,OAAAnC,EAAA3Y,QAQA,OALAyjC,EAAA7mB,EAAAhC,QAAA,WACA6nB,EAAA,WACAI,EAAAjmB,EAAA8a,OAGA9a,GAyCAjE,EAAAyqB,qBAAA,GA4GAzqB,EAAA8O,aAAA9O,EAAA0rB,iBAAA,SAAA5kC,EAAAilC,GACAjlC,KAAA,aACA,IAAAqZ,EAAA4rB,GAAA/rB,EAAAG,QAEAH,EAAA+qB,sBAAA7qB,EAAAC,GACArZ,KAIAqZ,EAAAC,OAAAD,EAAAE,OAAAF,EAAAG,UACAH,EAAAG,OACA,SAAAyK,UAAAC,QAAAniB,KACAmkB,UAAAyY,gBAAA,CACAplB,OAAA,EACAD,MAAA2a,EAAA/a,KACyBsO,KAAA,SAAAhO,GAIzB,GAHAA,EAAAiK,UAAA,EACA3I,EAAA6I,oBAAAnK,IAEAH,EAAAC,QAAAD,EAAAE,OAAA0a,EAAA/a,GAUAlZ,EAAAwZ,OAVA,CACA,IAAA0rB,EAAA,GACA,QAAAvmC,KAAA0a,EACA,WAAA1a,IACAumC,EAAAvmC,GAAA0a,EAAA1a,IAGAua,EAAAgrB,mBAAAe,EAAAjlC,EAAAklC,KAIyB,SAAAx/B,GACzBD,QAAAC,MAAA,0EAGAwT,EAAAgrB,mBAAA,CACA5qB,MAAA2a,EAAA/a,GACAK,OAAA,EACAkK,UAAA,GACyB,SAAAjI,GACzB,IAAAnC,EAAAC,QAAAD,EAAAE,OAAA0a,EAAA/a,GAUAlZ,EAAAwb,OAVA,CACA,IAAA0pB,EAAA,GACA,QAAAvmC,KAAA0a,EACA,WAAA1a,IACAumC,EAAAvmC,GAAA0a,EAAA1a,IAGAua,EAAAgrB,mBAAAe,EAAAjlC,EAAAklC,OAMiB7rB,EAAAC,OAAAD,EAAAE,QACjBL,EAAAgrB,mBAAAe,EAAAjlC,EAAAqZ,KAKAH,EAAAisB,eAAA,SAAAC,EAAAC,GACAnsB,EAAAosB,oBAIApsB,EAAAkC,MAAAmE,qBAAA7e,QAAA,SAAAob,GACAhB,EAAA+F,oBAAA,CACApD,UAAA,GACiB3B,GAEjB5C,EAAAkC,MAAAU,IAAA5C,EAAAkC,MAAAU,GAAAsD,MACAlG,EAAAkC,MAAAU,GAAAsD,KAAA8T,eAGAha,EAAAkC,MAAAU,KAGAupB,GACAnsB,EAAAqsB,cAGArsB,EAAAwF,aAAA,IAGA9X,OAAA4+B,mBAKAtsB,EAAAosB,mBAAA,GAHApsB,EAAAosB,mBAAA,EACA1+B,OAAA8e,iBAAA,eAAAxM,EAAAisB,gBAAA,IAKAjsB,EAAA3Y,OAAAwlB,IACA7M,EAAAusB,aAAA,SAAAC,EAAA1lC,GACAA,KAAA,aACAkZ,EAAA3Y,OAAAmlC,GAAA3f,IACA7M,EAAAyB,OAAAqD,KAAA,eAAA9E,EAAA3Y,OAAAP,IAGAkZ,EAAAjZ,MAAA,GACAiZ,EAAA2D,cAAA,GAEA3D,EAAAG,QAAA,CACAC,OAAA,EACAC,OAAA,GAGAL,EAAA0G,mBAAA,EAGA1G,EAAA2hB,UAAA,CACArhB,QAAA,EACAF,OAAA,EACAC,OAAA,GAGAL,EAAAqhB,OAAA,CACAjhB,MAAA,OACAC,MAAA,OAGAL,EAAAgf,WAAA,SAAA/U,GAEA,OAAAkR,IACAlR,EAGA,WAAAc,UAAAC,QAAAniB,KACAohB,GAGA,QAAAjK,EAAAqhB,OAAAhhB,MAAA9O,gBACA0Y,EAAAgW,EAAAC,YAAAjW,EAAA,QAGA,QAAAjK,EAAAqhB,OAAAhhB,MAAA9O,gBACA0Y,EAAAgW,EAAAC,YAAAjW,EAAA,QAGA,SAAAjK,EAAAqhB,OAAAhhB,MAAA9O,gBACA0Y,EAAAgW,EAAAC,YAAAjW,EAAA,SAGA,SAAAjK,EAAAqhB,OAAAjhB,QACA6J,EAAAgW,EAAAwB,cAAAxX,IAGA,YAAAc,UAAAC,QAAAniB,KACAohB,IAGAjK,EAAA2hB,UAAAthB,OAAAL,EAAA2hB,UAAArhB,UACA2J,EAAAgW,EAAA8D,gCAAA9Z,EAAAjK,EAAA2hB,YAAA3hB,EAAAG,QAAAG,SAGAN,EAAA2hB,UAAAthB,QACA4J,EAAAgW,EAAAqC,iBAAArY,EAAA,CACA7oB,IAAA,EAAA4e,EAAA2hB,UAAAthB,MAAA,KACA1F,IAAA,EAAAqF,EAAA2hB,UAAAthB,MAAA,QAIAL,EAAA2hB,UAAAvhB,QACA6J,EAAAgW,EAAA8C,kBAAA9Y,EAAA,CACAoZ,kBAAA,EAAArjB,EAAA2hB,UAAAvhB,MAAA,KACAkjB,gBAAA,EAAAtjB,EAAA2hB,UAAAvhB,MAAA,KACAgjB,OAAA,EACAM,SAAA,KAIAzZ,KAGA,qBAAAgW,IACAjgB,EAAAikB,iBAAAjkB,EAAAigB,iBAGAjgB,EAAAmqB,iBAAA,CACA/pB,MAAA,CACA4C,UAAA,GACA0S,SAAA1V,EAAA2hB,UAAAvhB,MAAA,EACAuhB,UAAA,EAAA3hB,EAAA2hB,UAAAvhB,MAAA,gBACiB,IAEjBC,MAAA,CACA2C,UAAA,GACA0S,SAAA1V,EAAA2hB,UAAAthB,MAAA,EACAshB,UAAA,EAAA3hB,EAAA2hB,UAAAthB,MAAA,eACiB,CACjBosB,WAAA,SACiB,EACjBA,WAAA,WAKA,YAAA1hB,UAAAC,QAAAniB,OACAmX,EAAAmqB,iBAAA,CACA/pB,OAAA,EACAC,OAAA,IAIAR,EAAA+pB,mBAAA7e,UAAAoF,gBACApF,UAAAkP,KAAA,WACA,IAAAyS,EAAAC,EAaA,GAVA5hB,UAAA6L,aAAApvB,QAAA,SAAAuwB,GACA,eAAAA,EAAAlO,OAAA,IAAA7J,EAAAmqB,iBAAA/pB,QACAssB,EAAA3U,GAGA,eAAAA,EAAAlO,OAAA,IAAA7J,EAAAmqB,iBAAA9pB,QACAssB,EAAA5U,KAIA2U,EAAA,CACA,eAAA3hB,UAAAC,QAAAniB,KAQA,aAPA,IAAAmX,EAAAmqB,iBAAA/pB,MACAJ,EAAAmqB,iBAAA/pB,MAAA4X,SAAA0U,EAAAva,GAEAnS,EAAAmqB,iBAAA/pB,MAAA,CACA4X,SAAA0U,EAAAva,KAMA,GAAAnS,EAAAmqB,iBAAA/pB,QACAJ,EAAAmqB,iBAAA/pB,MAAA,CACA4C,UAAA,GACA0S,SAAA,KAIA1V,EAAAmqB,iBAAA/pB,MAAAsV,WACA1V,EAAAmqB,iBAAA/pB,MAAAsV,SAAA,IAGA,IAAAA,EAAA,EACAkX,SAAAF,EAAAva,KAGAnS,EAAAmqB,iBAAA/pB,MAAAsV,WAAAjiB,OAAAuM,EAAAmqB,iBAAA/pB,MAAAsV,UAGA,GAAAiX,EAAA,CACA,eAAA5hB,UAAAC,QAAAniB,KAQA,aAPA,IAAAmX,EAAAmqB,iBAAA9pB,MACAL,EAAAmqB,iBAAA9pB,MAAA2X,SAAA2U,EAAAxa,GAEAnS,EAAAmqB,iBAAA9pB,MAAA,CACA2X,SAAA2U,EAAAxa,KAMA,GAAAnS,EAAAmqB,iBAAA9pB,QACAL,EAAAmqB,iBAAA9pB,MAAA,CACA2C,UAAA,GACA0S,SAAA,KAIA1V,EAAAmqB,iBAAA9pB,MAAAqV,WACA1V,EAAAmqB,iBAAA9pB,MAAAqV,SAAA,IAGAA,EAAA,EACAkX,SAAAD,EAAAxa,KAGAnS,EAAAmqB,iBAAA9pB,MAAAqV,WAAAjiB,OAAAuM,EAAAmqB,iBAAA9pB,MAAAqV,aAKA1V,EAAA+C,eAAA,CACAC,UAAA,CACAF,qBAAA,EACAG,qBAAA,GAEAyS,SAAA,EACAmX,wBAAA,KAIA7sB,EAAA0b,aAAA,KACA1b,EAAAud,qBAAA,KACAvd,EAAAwd,aAAA,KACAxd,EAAAyd,cAAA,KACAzd,EAAAsd,mBAAA,KACAtd,EAAA0d,iBAAA,CACAhI,SAAA,EACAoX,sBAAA,GACa,CACbC,qBAAA,GACa,CACbC,yBAAA,KACa,CACbC,UAAA,GACa,CACbC,UAAA,GACa,CACbC,yBAAA,IACa,CACbC,wBAAA,IACa,CACbC,4BAAA,GACa,CACbC,yBAAA,IAEAtqB,UAAA,IAGAhD,EAAA6V,WAAA0O,EAAAC,cAAAxkB,GAEAA,EAAA+c,WAAA,CACAK,MAAA,EACAF,MAAA,EACAF,MAAA,GAGAhd,EAAAokB,aAAA,CACAE,KAAA,EACAD,KAAA,GAIArkB,EAAAqL,OAAA,SAAAhe,GACA2S,EAAAsB,YACA/U,QAAAiG,KAAA,iDAAAnF,EAAAhG,SAIA2Y,EAAAoL,QAAA,SAAA/d,GACA2S,EAAAsB,YACA/U,QAAAyd,KAAA,iDAAA3c,EAAAhG,SAIA2Y,EAAAjM,QAAA,SAAAvH,GACAwT,EAAAsB,YACA/U,QAAAC,QAAAnF,OAAA,aAAAmF,IAIAwT,EAAA8Z,UAAA,SAAAzsB,GACA2S,EAAAsB,YACA/U,QAAAwC,MAAA,eAAA1B,EAAAhG,OAAAgG,EAAAiJ,OAIA0J,EAAAwG,KAAA,SAAAlQ,EAAArO,GACA+X,EAAAkC,MAAAsE,KAAAlQ,EAAArO,IAGA+X,EAAAga,MAAAha,EAAAutB,WAAAvtB,EAAAyE,MAAA,WACAzE,EAAAisB,gBAAA,OAGAjsB,EAAAwtB,mBAAA,SAAA1mC,GACAA,KAAA,aACAkZ,EAAAyB,OAAAqD,KAAA,gCAAAvW,IACAyR,EAAAqG,qBAAA/oB,OACA8O,WAAAmC,EAAA,MAIAyR,EAAAmF,sBAAA,CACA3E,UAAAR,EAAAQ,UACAnZ,OAAA2Y,EAAA3Y,OACAN,MAAAiZ,EAAAjZ,QAGAiZ,EAAAusB,aAAA,gBACAvsB,EAAAga,QACAlzB,UAKAkZ,EAAAmF,sBAAA,SAAA9X,GACA2S,EAAAsB,YACA/U,QAAAiG,KAAA,6BAAAnF,EAAAmT,UAAAnT,EAAAtG,QAGAiZ,EAAAorB,SAAA,SAAAvnC,GACA,IAAA6I,EAAAsT,EAAAytB,gBACA/gC,EAAA87B,aAAA3kC,EAAA2pB,aAAA9gB,EAAA+7B,YACA,IAAAta,EAAAtqB,EAAA2pB,aAAAY,OAEA,qBAAAD,EAWA/hB,WAAA,WACAvI,EAAA2pB,aAAAY,QACa,KAZbD,EAAAI,MAAA,cAEiBD,KAAA,WACjBliB,WAAA,WACAvI,EAAA2pB,aAAAY,QACqB,QAUrBpO,EAAA0C,cAAA,SAAA7e,GACAA,EAAA2pB,eACA3pB,EAAA2pB,aAAA5hB,SAAAqpB,eAAApxB,EAAA2e,WAGA3e,EAAA2pB,cAAA3pB,EAAA2pB,aAAA9gB,YAIA7I,EAAA2pB,aAAA9gB,WAAAC,YAAA9I,EAAA2pB,eAGAxN,EAAAqD,UAAA,eAEArD,EAAA2c,aAAA,SAAAna,EAAAva,GACA,IAAAqa,EACAtC,EAAA2D,cAAAnc,QAAA,SAAAkjB,GACAA,EAAAyH,KAAA3P,IACAF,EAAAoI,KAIApI,GAKAtC,EAAAkC,MAAAmE,qBAAA7e,QAAA,SAAAob,GACA,IAAA3a,GAAA2a,IAAA3a,EAAA,CAIA,IAAAylC,EAAA1tB,EAAAkC,MAAAU,GACA,IACA8qB,EAAAxnB,KAAAyW,aAAAra,GACiB,MAAAze,QAGjBmc,EAAAgH,eAfAza,QAAAyd,KAAA,wBAAAxH,IAkBAxC,EAAAgW,UAAA,SAAA7V,EAAAlY,GACA,GAAAkY,EAAA6L,UASA,OARA,IAAAhM,EAAA2D,cAAApkB,QAAA4gB,KACAA,EAAAqC,WACArC,EAAAqC,SAAArC,EAAAgS,IAGAnS,EAAA2D,cAAAtjB,KAAA8f,SAEAH,EAAAgH,YAAA/e,GAiDA,SAAA0lC,EAAArrB,GACAnC,EAAAytB,gBACAztB,EAAAytB,eAAAtrB,GAGAtC,EAAAgH,YAAA/e,GAlDAiY,EAAAC,GACAH,EAAAgH,YAAA/e,IAIAkY,EAAAC,OAAAD,EAAAE,OAAAF,EAAAG,UACAH,EAAAG,OACA,SAAAyK,UAAAC,QAAAniB,KACAmkB,UAAAyY,gBAAA,CACAplB,OAAA,EACAD,MAAA2a,EAAA/a,KACyBsO,KAAA,SAAAhO,GACzBA,EAAAiK,UAAA,EACA3I,EAAA6I,oBAAAnK,IAEAH,EAAAC,QAAAD,EAAAE,OAAA0a,EAAA/a,GAKA2tB,EAAArtB,GAJAN,EAAAgrB,mBAAA,cAAA1oB,GACAqrB,EAAArrB,MAKyB,SAAA9V,GACzBD,QAAAC,MAAA,0EAGAwT,EAAAgrB,mBAAA,CACA5qB,MAAA2a,EAAA/a,GACAK,OAAA,EACAkK,UAAA,GACyB,SAAAjI,IACzBnC,EAAAC,QAAAD,EAAAE,OAAA0a,EAAA/a,GAKA2tB,EAAArrB,GAJAtC,EAAAgrB,mBAAA,cAAA1oB,GACAqrB,EAAArrB,QAOiBnC,EAAAC,OAAAD,EAAAE,QACjBL,EAAAgrB,mBAAA,KAAA2C,KAaA3tB,EAAAgrB,mBAAA,SAAAjG,EAAAj+B,EAAAqZ,GACAA,IACAA,EAAAH,EAAAG,SAGA4kB,IACAA,EAAA/kB,EAAAmqB,kBAGAtF,EAAA,CACApa,oBAAA,SAAAnI,GACA,IAAAurB,EAAA9I,EAAA1kB,MACAwtB,IACAA,EAAAjJ,aAAAiJ,EAAAlJ,eACAriB,EAAAiI,UAAA,EACyBsjB,EAAA7qB,WAAA6qB,EAAA7qB,UAAA0hB,oBACzBpiB,EAAAiI,UAAA,IAIAjI,EAAAiI,WACAjI,EAAAgI,UAAA0B,EAAA1J,EAAA,SAAAhlB,OACAglB,EAAA+H,SAAA/H,EAAAgI,SAAA0B,EAAA1J,EAAA,SAAAhlB,QAGAskB,EAAA6I,oBAAAnI,EAAA,WACA,oBAAAxb,GACAA,EAAAwb,MAIAqI,kBAAA,SAAAne,EAAAoe,GACAhJ,EAAA+I,kBAAAne,EAAAoe,IAEAma,yBAAA,CACA3kB,QAAAD,EAAAC,OAAA2kB,EAAA3kB,MACAC,QAAAF,EAAAE,OAAA0kB,EAAA1kB,UA0BAL,EAAAirB,iBAAA,SAAAd,EAAA3nB,GACA,GAAA2U,KAAA3yB,UAAAymC,iBAAA,CAMA,IAAA3oB,EADA,GAAAE,EAMA,OAJAxC,EAAAuC,aAAAC,KACAF,EAAAtC,EAAAuC,aAAAC,GAAAF,aAEA2oB,EAAA3oB,EAAA6nB,GAIAnqB,EAAA2D,cAAAnc,QAAA,SAAA8a,GACA2oB,EAAA3oB,EAAA6nB,UAdA2D,MAAA,6DA6BA9tB,EAAAwJ,aAAA,SAAArJ,EAAAlY,EAAAyhB,GAGA,GAFAvJ,KAAA,GAEAgV,EAAA3wB,UAAAmlB,WAKA,GAAAxJ,aAAAgX,EACA3N,EAAArJ,EAAAlY,EAAAyhB,OADA,CAKA,GAAAvJ,aAAAoa,EAQA,OAPAvO,EAAA7L,EAAA,SAAA7iB,QACAksB,EAAAwC,EAAA7L,EAAA,YAAAlY,GAAA,QAGA+jB,EAAA7L,EAAA,SAAA7iB,QACAksB,EAAAwC,EAAA7L,EAAA,YAAAlY,GAAA,IAKA,GAAAiY,EAAAC,GACA,2EAIAA,EAAAC,OAAAD,EAAAE,OAAAF,EAAAG,UACAH,EAAAG,OACA,SAAAyK,UAAAC,QAAAniB,KACAmkB,UAAAyY,gBAAA,CACAplB,OAAA,EACAD,MAAA2a,EAAA/a,KACyBsO,KAAA,SAAAhO,GACzBA,EAAAiK,UAAA,EACA3I,EAAA6I,oBAAAnK,IAEAH,EAAAC,QAAAD,EAAAE,OAAA0a,EAAA/a,GAGA2tB,EAAArtB,GAFAN,EAAAgrB,mBAAA,KAAA2C,IAIyB,SAAAnhC,GACzBD,QAAAC,MAAA,0EAGAwT,EAAAgrB,mBAAA,CACA5qB,MAAA2a,EAAA/a,GACAK,OAAA,EACAkK,UAAA,IACyBpK,EAAAC,QAAAD,EAAAE,OAAA0a,EAAA/a,GAAA2tB,EAAA3tB,EAAAgrB,mBAAA,KAAA2C,KAERxtB,EAAAC,OAAAD,EAAAE,QACjBL,EAAAgrB,mBAAA,KAAA2C,SAnDA3tB,EAAAgW,UAAA7V,GAuDA,SAAAwtB,EAAArrB,GACAtC,EAAAwJ,aAAAlH,EAAAra,EAAAyhB,GAAAvJ,EAAAE,OAAAF,EAAAG,UAIAN,EAAA+tB,WAAA,SAAAC,EAAAtkB,GACAskB,IACAA,EAAAhuB,EAAAqG,sBAGA,iBAAA2nB,IACAA,EAAA,CAAAA,IAGAA,EAAAxmC,QAAA,SAAAob,GACA,IAAAsD,EAAAlG,EAAAkC,MAAAU,GAAAsD,KAEA,qBAAAwD,IAAA,IAAAA,IAAAxD,EAAA4D,gBACA9J,EAAAwJ,aAAAtD,EAAA4D,eAAAlH,GAAA,GAGA,qBAAA8G,IAAA,IAAAA,IAAAxD,EAAA6D,gBACA/J,EAAAwJ,aAAAtD,EAAA6D,eAAAnH,GAAA,MAKA5C,EAAAgH,YAAA,SAAA/e,GACAA,EACA2Z,EAAA2H,gBAAAthB,GAIA+X,EAAAkC,MAAAmE,qBAAA7e,QAAA,SAAAob,GACAhB,EAAA2H,gBAAA3G,MAIA5C,EAAAkrB,oBAAA,SAAA5oB,EAAA2rB,GACA,GAAA3rB,KAAAkK,mBAEAyhB,OAEA3rB,EAAA4rB,sBAAA,CAGA5rB,EAAA4rB,sBAAA,EAEA,IAAAvgB,EAAA,QAEA,eAAArL,IACAqL,EAAA,YAGArL,EAAAkK,iBAAAmB,EAAA,WAKA,GAJArL,EAAAwL,YACAF,wBAAAC,OAAAvL,EAAAwL,aAGAmgB,EAAA,CAEA,IAAA1lB,EAAA,GACAvI,EAAA2D,cAAAnc,QAAA,SAAA/B,GACAA,EAAA0sB,IAAA7P,EAAA6P,IACA5J,EAAAloB,KAAAoF,KAGAua,EAAA2D,cAAA4E,EAKA,IAAAwD,EAAA/L,EAAAuC,aAAAD,EAAAE,UAYA,GAXAuJ,IACAA,EAAA,CACAzJ,SACAE,SAAAF,EAAAE,SACApY,KAAA6jC,EAAA,iBACA5mC,OAAA2Y,EAAA3Y,OACAN,MAAAiZ,EAAAjZ,MACAymB,aAAAxN,EAAAuC,aAAAD,EAAAE,UAAAxC,EAAAuC,aAAAD,EAAAE,UAAAgL,aAAA,OAIAygB,GAAAjuB,EAAAkC,MAAA6J,EAAA1kB,QAAA,CAEA,IAAA6e,EAAAlG,EAAAkC,MAAA6J,EAAA1kB,QAAA6e,KACAqC,EAAA,GACArC,EAAAqF,mBAAA/jB,QAAA,SAAA/B,GACAA,EAAA0sB,IAAA7P,EAAA6P,IACA5J,EAAAloB,KAAAoF,KAGAua,EAAAkC,MAAA6J,EAAA1kB,QAAAkhB,UAGAwD,EAAA1kB,SAAA2Y,EAAA3Y,QAAA,WAAA0kB,EAAA3hB,OAIA4V,EAAA+B,YAAAgK,EAAA1kB,UACA0kB,EAAAhlB,MAAAiZ,EAAA+B,YAAAgK,EAAA1kB,QAAAN,OAGAiZ,EAAA0C,cAAAqJ,UAEA/L,EAAAuC,aAAAD,EAAAE,aACa,KAGbxC,EAAA6K,aAAA,SAAAre,EAAAoe,GACA5K,EAAAsB,YACA/U,QAAAC,QAAAoe,IAIA5K,EAAAW,wBAAA,EAEAX,EAAAuoB,eAAAvoB,EAAAytB,gBAAA7hC,SAAAM,MAAAN,SAAAkB,gBACAkT,EAAAwF,aAAA,EAEAxF,EAAA2G,UAAA/E,EAAA+E,UACA,qBAAAmhB,GACAA,EAAAC,OAAA/nB,GAGA,qBAAA4oB,GACAA,EAAAb,OAAA/nB,GAGAA,EAAAkN,MAAAL,EAEA7M,EAAAmE,iBAAA,SAAAgqB,EAAA1qB,GACAzD,EAAAouB,2BAAAD,EAAA1qB,IAGAzD,EAAAouB,2BAAA,SAAAD,EAAA1qB,GACAA,EAAAS,kBACAT,EAAAS,yBACAT,EAAAS,iBAGAtC,EAAA4B,cAAA2qB,EAAA1qB,IAGA,qBAAAsK,IACA/N,EAAA+N,kBAGA/N,EAAA4rB,QAAA,SAAAvkC,KAEA2Y,EAAAquB,uBAAA,SAAAvnC,GACA,IAAAyE,EAAA,IAAAD,aACAC,EAAAQ,OAAA,MACAR,EAAAsC,iBAAA/G,IAGAkZ,EAAA0M,OAAA,SAAA7oB,GACA,GAAAA,KAAA2pB,aAIA,YAAA3pB,EAAA4oB,UAAA,UAAA5oB,EAAA4oB,SAAA,CACA5oB,EAAA2pB,aAAAlO,IAAA,KACA,IAAAgvB,EAAAzqC,EAAA2pB,aAAA0B,QACA,qBAAAof,EACAA,EAAAhgB,KAAA,WACAzqB,EAAA2pB,aAAA+gB,OAAA1qC,EAAA2qC,UAAA,uDAGA3qC,EAAA2pB,aAAA+gB,OAAA1qC,EAAA2qC,UAAA,yDAEa,UAAA3qC,EAAA4oB,WACb5oB,EAAA2pB,aAAA2d,OAAA,IAIAnrB,EAAA4M,SAAA,SAAA/oB,GACAA,KAAA2pB,cAAA3pB,EAAAye,SAIA,SAAAze,EAAA8oB,YAAA,UAAA9oB,EAAA8oB,YACA9oB,EAAA2pB,aAAA+gB,OAAA,KACA1qC,EAAA2pB,aAAAC,UAAA5pB,EAAAye,OACAze,EAAA2pB,aAAAY,QACa,UAAAvqB,EAAA8oB,aACb9oB,EAAA2pB,aAAA2d,OAAA,KAIAnrB,EAAAoC,mBAAA,SAAA/U,GACAA,EAAA6X,OAAA,SACAlF,EAAAiF,oBAAA5X,GAAA,IAGA2S,EAAAqG,mBAAA,SAAAlE,GACA,OAAAnC,EAAAkC,MAAAmE,mBAAAlE,IAGA,qBAAA4L,IACAA,EAAAC,aAAA,SAAAxL,EAAAC,EAAArY,GACA4V,EAAAkC,MAAAmE,qBAAA7e,QAAA,SAAAob,GACAhB,EAAA+F,oBAAA,CACAnF,WACAC,SACAJ,kBAAA,EACAjY,QAAA,QACqBwY,OAKrB5C,EAAA8pB,cAAA,SAAAhjC,GACAgjC,EAAAhjC,IAGAkZ,EAAAqsB,YAAA,WACA,IACAlrB,GAAAC,QAAA,GACa,MAAAvd,IAEbmc,EAAAyB,SAEA,oBAAAzB,EAAAyB,OAAA8rB,YACAvtB,EAAAyB,OAAA8rB,aAGA,oBAAAvtB,EAAAyB,OAAAoD,YACA7E,EAAAyB,OAAAoD,aAGA7E,EAAAyB,OAAA,OAGAzB,EAAAyuB,UAAA,SAAA3nC,GAeA,OAdAA,GAAAkZ,EAAAsB,YACA/U,QAAAyd,KAAA,4CAGAljB,KAAA,aAEAkZ,EAAAyB,OAKA3a,EAAAkZ,EAAAyB,QAJAqoB,EAAA,WACAhjC,EAAAkZ,EAAAyB,UAMAzB,EAAAyB,QAGAzB,EAAAuL,iBAAA3J,EAAA2J,iBAEA,IAAAmjB,EAAA,sCA6PA,GA3PA1uB,EAAAuC,aAAA,CACA4D,YAAA,SAAAnf,GACA,OAAAgZ,EAAAuC,aAAAooB,UAAA3jC,GAAA,IAEA2jC,UAAA,SAAA3jC,GACAA,IAEAA,EAAA,CACA2nC,OAAA,EACAC,QAAA,EACArkB,UAAA,EACAF,SAAA,EACAC,SAAA,IAIA,SAAAtjB,IACAA,EAAA,CACA2nC,OAAA,IAIA,UAAA3nC,IACAA,EAAA,CACA4nC,QAAA,IAIA,UAAA5nC,IACAA,EAAA,CACAujB,UAAA,IAIA,SAAAvjB,IACAA,EAAA,CACAqjB,SAAA,IAIA,SAAArjB,IACAA,EAAA,CACAsjB,SAAA,IAIA,IAAA/B,EAAA,GAoCA,OAnCAjhB,OAAAC,KAAAyY,EAAAuC,cAAA/a,QAAA,SAAAC,GACA,IAAA4F,EAAA2S,EAAAuC,aAAA9a,GAEA,QAAAinC,EAAAnvC,QAAAkI,GAAA,CACA,IAAAk5B,GAAA,EAEA35B,EAAA2nC,OAAA,UAAAthC,EAAAjD,OACAu2B,GAAA,GAGA35B,EAAA4nC,QAAA,WAAAvhC,EAAAjD,OACAu2B,GAAA,GAGA35B,EAAAujB,UAAAld,EAAAiV,OAAAiI,WACAoW,GAAA,GAGA35B,EAAAsjB,SAAAjd,EAAAiV,OAAAgI,UACAqW,GAAA,GAGA35B,EAAAqjB,SAAAhd,EAAAiV,OAAA+H,UACAsW,GAAA,GAGA35B,EAAAK,QAAAgG,EAAAhG,SAAAL,EAAAK,SACAs5B,GAAA,IAGA,IAAAA,GACApY,EAAAloB,KAAAgN,MAIAkb,IAIAvI,EAAAqB,UAAA,IACArB,EAAAS,mBAAA,6BACAT,EAAAU,kBAAA,oCACAV,EAAA+K,oBAEA/K,EAAA6uB,qBAAA,SAAAC,GACAA,IACA9uB,EAAAU,kBAAAouB,GAGA9uB,EAAAyB,QAIAzB,EAAAyB,OAAAqD,KAAA,mCAAA9E,EAAAU,oBAGAV,EAAA+uB,4BAAA,SAAAC,EAAAloC,GACAkZ,EAAAyB,QAAAutB,GAAAloC,GAEAkZ,EAAAyB,OAAAqD,KAAA,4CAAAkqB,EAAAloC,IAGAkZ,EAAAuF,kCAAA,SAAAlY,GACA2S,EAAAsB,YAAAtB,EAAAwF,aACAjZ,QAAAiG,KAAA,wBAAAnF,EAAA2hC,YAAA,YAAA3hC,EAAA4hC,2BAGAjvB,EAAAiF,oBAAA,SAAA5X,EAAA6hC,GACAlvB,EAAAsB,aAAA4tB,GACA3iC,QAAAiG,KAAAnF,EAAAhG,OAAAgG,EAAA6X,SAIAlF,EAAA6kB,sBACA7kB,EAAA6B,kBAAAD,EACA5B,EAAAsB,YAAA,EACAtB,EAAAmvB,uBAAA,SAAAC,GACA,qBAAArvB,IACAA,EAAAqvB,IAMApvB,EAAApW,UAAA,IAEAoW,EAAAa,uBAAA,IAGAb,EAAAiJ,eAAArH,EAAAqH,eAIAjJ,EAAAwrB,cAAA,SAAA5rB,EAAA9Y,GACA8Y,KAAAI,EAAAQ,UAEA,kBAAAT,EAAAlX,KAiBAmX,EAAAyB,OAOAzB,EAAAyB,OAAAqD,KAAA,iBAAAlF,EAAA,YAAA6rB,EAAA4D,EAAAtoC,GACAiZ,EAAAsB,YACA/U,QAAApG,IAAA,8BAAAslC,EAAA,YAAA4D,GAEAvoC,EAAA2kC,EAAA4D,EAAAtoC,KAVAiZ,EAAA8pB,cAAA,WACA9pB,EAAAwrB,cAAA5rB,EAAA9Y,KAlBAwoC,cAAA9D,cAAA5rB,EAAA,SAAA6rB,EAAA4D,EAAAtoC,GACA,IAAAiZ,EAAAyB,OAQA,OAPAgqB,IACAzrB,EAAA3Y,OAAAgoC,QAGArvB,EAAA8pB,cAAA,WACAhjC,EAAA2kC,EAAA4D,EAAAtoC,KAIAD,EAAA2kC,EAAA4D,MAoBArvB,EAAAwK,gBAAA,SAAAviB,EAAAwb,GACAzD,EAAA6B,kBAAA2B,cAAAvb,EAAAwb,IAGAzD,EAAAmJ,mBAAA,SAAA1F,GASA,OARAzD,EAAAuvB,mBACA9rB,EAAAO,uBAAA,GAGAhE,EAAA+D,sBACAN,EAAAM,qBAAA,GAGAN,GAGAzD,EAAAwvB,gBAAA,WACAxvB,EAAAyB,OAAAqD,KAAA,qBAAA9E,EAAAjZ,QAGAiZ,EAAAc,yBAAA,EACAd,EAAAe,qBAAA,EAEAf,EAAA+qB,sBAAA,EACA/qB,EAAAuvB,kBAAA,EACAvvB,EAAA+D,qBAAA,EAEA/D,EAAA8rB,eAAA,SAAAz+B,GACA2S,EAAAsB,YACA/U,QAAAiG,KAAA,oBAAAnF,EAAAhG,OAAA,QAIA2Y,EAAAie,mBAAA,SAAA3b,GACA,OAAAA,GAGAtC,EAAAyvB,qBAAA,SAAAntB,GACA,OAAAA,GAGA,qBAAAotB,6BACA1vB,EAAA2vB,gCAAAD,4BAGA,qBAAAE,8BACA5vB,EAAA2vB,gCAAAC,6BAGA,qBAAAC,2BACA7vB,EAAA6vB,mDAGA7vB,EAAA8vB,wBAAA,SAAAC,GACA,OAAAA,GAGA/vB,EAAA2I,mBAAA,SAAA2C,GACAtL,EAAAsB,aACA,IAAAgK,EAAAzC,mBAAAG,OAAA,oBACAzc,QAAAC,MAAA,2CAAA8e,EAAAjkB,OAAAikB,EAAAvkB,MAAA,SAAAukB,EAAAzC,qBAKA7I,EAAAgwB,UAAA,EAEAxhB,EAAA,oBACAxO,EAAAgwB,UAAA,IAGAxhB,EAAA,qBACAxO,EAAAgwB,UAAA,IAGAhwB,EAAAiwB,gBAAA,EACAjjB,qBAAAhN,YAAAgN,UAAAhN,WAAA5V,OACA4V,EAAAiwB,gBAAA,IAAAjjB,UAAAhN,WAAA5V,KAAAV,WAAAkN,cAAAoS,OAAA,cACAhJ,EAAAiwB,gBAAA,CAOA,GANAjwB,EAAA2hB,UAAA,CACAvhB,OAAA,EACAC,OAAA,EACAC,QAAA,GAGAN,EAAAmqB,iBAAA/pB,OAAAJ,EAAAmqB,iBAAA/pB,MAAAsV,UAAA1V,EAAAmqB,iBAAA/pB,MAAAsV,SAAAp4B,OAAA,CACA,IAAAsxB,EAAA,GACA5O,EAAAmqB,iBAAA/pB,MAAAsV,SAAAluB,QAAA,SAAA0oC,GACA,qBAAAA,EAAAvO,WACA/S,EAAAvuB,KAAA6vC,KAGAlwB,EAAAmqB,iBAAA/pB,MAAAsV,SAAA9G,EAGA,GAAA5O,EAAAmqB,iBAAA9pB,OAAAL,EAAAmqB,iBAAA9pB,MAAAqV,UAAA1V,EAAAmqB,iBAAA9pB,MAAAqV,SAAAp4B,OAAA,CACAsxB,EAAA,GACA5O,EAAAmqB,iBAAA9pB,MAAAqV,SAAAluB,QAAA,SAAA0oC,GACA,qBAAAA,EAAAvO,WACA/S,EAAAvuB,KAAA6vC,KAGAlwB,EAAAmqB,iBAAA9pB,MAAAqV,SAAA9G,GAKA5O,EAAAmwB,aAAA,SAAAloC,EAAAnB,GACA,IAAAmB,EAAA,iCAEA,uBAAAnB,EAOA,OAAAkZ,EAAAkC,MAAAja,GAOA+X,EAAAkC,MAAAja,GAAAlB,MANAiZ,EAAA+B,YAAA9Z,GACA+X,EAAA+B,YAAA9Z,GAAAlB,MAEA,GAVAiZ,EAAAyB,OAAAqD,KAAA,6BAAA7c,EAAA,SAAAlB,EAAAkB,EAAAuE,GACA1F,EAAAC,EAAAkB,EAAAuE,MAeAqT,EAAAuwB,gBACApwB,EAAAurB,WAAAvrB,EAAAQ,WAGAR,EAAAsF,qBAAA,SAAAF,EAAAC,GAEArF,EAAAga,QACAha,EAAAqsB,cAEArsB,EAAAwF,aAAA,EACAxF,EAAA3Y,OAAA2Y,EAAAkN,QAEAlN,EAAA1f,KAAA0f,EAAAQ,WAEAR,EAAAsB,YACA/U,QAAAyd,KAAA,wBAAA5E,EAAA,mBAAApF,EAAA3Y,SAIA2Y,EAAA8d,YAAA,EACA9d,EAAAgQ,QAAA,QAEAhQ,EAAA+f,0BAAA,SAAA1yB,GACA2S,EAAAsB,YACA/U,QAAAiG,KAAA,wCAAAnF,EAAAhG,SAIA2Y,EAAAqwB,YAAA,WACAzD,SAAA,KACA7hB,qBAAAzK,eACAyK,UAAAzK,OAAAssB,SAGAhf,wBAAA,CACArF,QAAA,GACAuc,OAAA,EACAY,cAAA,KAKA1lB,EAAAsN,wBAAA,EAGAtN,EAAAqqB,SAAA,KAGArqB,EAAAswB,YAAA,SAAAjG,EAAAvjC,GACAA,KAAA,aACAkZ,EAAAyB,OACAzB,EAAAyB,OAAAqD,KAAA,eAAAulB,EAAAvjC,IAEAkZ,EAAAqqB,WACAvjC,GAAA,EAAAkZ,EAAAQ,UAAA,QAIAR,EAAA+E,mBAAA,SAAA1X,GACA2S,EAAAsB,YACA/U,QAAAyd,KAAA,mCAIAhK,EAAAgF,cAAA,SAAA3X,GACA2S,EAAAsB,YACA/U,QAAAyd,KAAA,mCAKAhK,EAAAuwB,OAAA,CACAC,mBAAA,qBACAC,iBAAA,mBACAC,qBAAA,yBACAC,uBAAA,yBACAC,UAAA,YACAC,sBAAA,4BACAC,eAAA,iBACAC,0BAAA,mCACAC,yBAAA,2CAxzDA,CA0zDKpzC,OAKLyW,EAAA9V,UAAAohB,EAIIF,EAA6B,GAAEC,EAAA,WACnC,OAAAC,GACKzc,MAAA3E,EAAAkhB,QAAAzhB,IAAA0hB,IAAArL,EAAA9V,QAAAmhB,wDCpxLL,IAAAhW,EAAA,GAAiBA,SAEjB2K,EAAA9V,QAAApB,MAAAuX,SAAA,SAAA9U,GACA,wBAAA8J,EAAA/M,KAAAiD,8CCHA,IAAAqxC,EAAA,WAA0B,IAAAC,EAAAtzC,KAAauzC,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,MAAAH,EAAAK,GAAA,8BAAAF,EAAA,KAAuE1sB,GAAA,CAAIzX,MAAAgkC,EAAAM,kBAA6B,CAAAN,EAAAK,GAAA,iBAAAF,EAAA,MAAAA,EAAA,KAA2C1sB,GAAA,CAAIzX,MAAAgkC,EAAAO,iBAA4B,CAAAP,EAAAK,GAAA,gBAAAL,EAAAQ,GAAA,MAC5QC,EAAA,YAAoC,IAAAT,EAAAtzC,KAAauzC,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,OAA2BO,YAAA,YAAsBP,EAAA,UAAeO,YAAA,kBAAAC,MAAA,CAAqC1f,GAAA,qBAAwBkf,EAAA,UAAAA,EAAA,UAAAA,EAAA,OAAsCO,YAAA,UAAqB,CAAAP,EAAA,OAAYO,YAAA,wBAAkCP,EAAA,UAAeO,YAAA,kBAA6B,CAAAP,EAAA,QAAAA,EAAA,OAAuBO,YAAA,+BAAqCP,EAAA,OAAgBQ,MAAA,CAAO1f,GAAA,kBAAAmW,MAAA,4BAA0D,CAAA4I,EAAAK,GAAA,OAAAF,EAAA,OAA0BQ,MAAA,CAAO1f,GAAA,SAAa,CAAAkf,EAAA,KAAAH,EAAAK,GAAA,4DAAAF,EAAA,KAAAH,EAAAK,GAAA,8HAAAF,EAAA,KAAAH,EAAAK,GAAA,6LCDziB,SAASjmC,IACZ,IAAIC,EAAW3N,KAEX4N,EAAyB,aA0B7B,SAASC,EAAW3E,EAAU4E,EAAUC,GACpC7E,EAAWA,GAAY,aAEvB,IAAID,EAAO+E,SAASC,cAAc,SAClChF,EAAKuD,KAAO,OAERsB,IACA7E,EAAK6E,UAAW,GAGhBC,IACA9E,EAAKiF,iBAAkB,GAG3BjF,EAAKkF,OAASR,EAASQ,OAEvBlF,EAAKmF,QAAU,WACXnF,EAAKoF,cAAe,GAGxBL,SAASM,KAAKC,QAAU,WACpBC,WAAW,WACFvF,EAAKoF,eACVpF,EAAKoF,cAAe,EAEfpF,EAAKvI,OACNkN,MAEL,MAGP3E,EAAKwF,SAAW,WACZ,GAAIX,EAAU,CACV,IAAK7E,EAAKyF,MAAMhP,OAEZ,YADAiP,QAAQC,MAAM,qBAIlB,IAAI5M,EAAM,GAMV,OALAzC,MAAMC,KAAKyJ,EAAKyF,OAAO9E,QAAQ,SAASX,GACpCA,EAAKqE,IAAMrE,EAAK4F,mBAChB7M,EAAIS,KAAKwG,UAEbC,EAASlH,GAIRiH,EAAKyF,MAAM,IAKhBxF,EAASD,EAAKyF,MAAM,IAEpBzF,EAAK6F,WAAWC,YAAY9F,IANxB0F,QAAQC,MAAM,sBAQtB3F,EAAK+F,MAAMC,QAAU,QACpBjB,SAASM,MAAQN,SAASkB,iBAAiBC,YAAYlG,GACxDmG,EAAenG,GAgBnB,SAASmG,EAAeC,GACpB,GAA6B,oBAAlBA,EAAQC,MAKnB,GAA8B,oBAAnBD,EAAQE,OAAnB,CAKA,GAA6C,qBAAlCvB,SAASwB,YAAY,SAA0B,CACtD,IAAIC,EAAQzB,SAASwB,YAAY,SAEjC,GAA+B,oBAApBC,EAAMC,WAA6D,oBAA1BL,EAAQM,cAGxD,OAFAF,EAAMC,UAAU,SAAS,GAAM,QAC/BL,EAAQM,cAAcF,GAK1BA,EAAQ,IAAIG,WAAW,QAAS,CAChCC,KAAMC,OACNC,SAAS,EACTC,YAAY,IAGhBX,EAAQM,cAAcF,QApBlBJ,EAAQE,cALRF,EAAQC,QApGhB3B,EAASsC,iBAAmB,SAAS/G,EAAUgH,GACvCA,IACAtC,EAAyBsC,GAG7BrC,EAAW3E,IAEfyE,EAASwC,oBAAsB,SAASjH,EAAUgH,GAC1CA,IACAtC,EAAyBsC,GAG7BrC,EAAW3E,GAAU,IAEzByE,EAASyC,gBAAkB,SAASlH,EAAUgH,GACtCA,IACAtC,EAAyBsC,GAG7BrC,EAAW3E,GAAU,GAAM,IAG/ByE,EAASQ,OAAS,MCctB,IAAA+lC,EAAA,CACAjpC,KAAA,eACAkpC,QAFA,WAGArkC,OAAAskC,uBAAA,EAEAtkC,OAAAqG,QAAAxH,QAAAC,MAAA,WACA,IAAAA,EAAAwU,KAAAC,UAAAnjB,YACA,IAAA0O,EAAAjN,QAAA,gCAGAuuC,MAAA,WAAAthC,IAKA,IAKAwT,EALAiyB,EAAArmC,SAAAqpB,eAAA,mBACA,SAAAid,IACAC,EAAA,qBAIA,SAAAA,EAAAC,GACA,IAaAC,EAbA/c,EAAA1pB,SAAA88B,cAAA,UACAuJ,EAAAjmC,QAAA,SAAAnF,GACA,GAAAA,iBAAAyrC,MAAAzrC,aAAAwH,OAAAxH,EAAAsD,KAGA,OAFAooC,EAAA1rC,QACA2rC,EAAA3rC,GAGA,IAAA4rC,EAAA,IAAAnnC,EACAmnC,EAAA5kC,iBAAA,SAAAhH,GACA0rC,EAAA1rC,GACA2rC,EAAA3rC,MAIA,IAAA6rC,EAAA,GAEAC,EAAA,IACA,SAAAC,IACA,IAAA5yB,EAAA,CAGA,IAAAL,EAAAtjB,EAAA,QACAA,EAAA,QAEA2jB,EAAA,IAAAL,EAEAK,EAAA6yB,aAAA,GAIA7yB,EAAAqB,UAAA,gDACArB,EAAAS,mBAAA,oBACAT,EAAApW,UAAA+oC,EACA3yB,EAAA+C,eAAAC,UAAA,CACAF,qBAAA,EACAG,qBAAA,GAEAjD,EAAA0G,mBAAA,EACAgsB,KAAAp1C,SACA0iB,EAAA3Y,OAAAqrC,GAEA1yB,EAAA8G,QAAA9G,EAAAQ,UAAA4xB,EACApyB,EAAAG,QAAA,CACA7J,MAAA,GAKA0J,EAAA6V,WAAA,EACAC,KAAA,CACA,+BACA,gCACA,gCACA,gDAGA9V,EAAAuoB,eAAAuK,EACA9yB,EAAA+yB,cAAA,GACA/yB,EAAA8Z,UAAA,SAAAzsB,GACAA,EAAAiJ,KAAA08B,4BACAhzB,EAAA6yB,aAAAxlC,EAAAiJ,KAAA5L,WACAsV,EAAAwG,KAAA,CACAysB,kBAAA,EACAvoC,SAAA2C,EAAAiJ,KAAA5L,YAIA2C,EAAAiJ,KAAA28B,kBAAAZ,GACAryB,EAAA2G,UAAA0rB,EAAAhlC,EAAAhG,SAGA2Y,EAAAqL,OAAA,SAAAxnB,GACA,IACAgtB,OAAAqiB,MAAAC,iBAAA,WAEA,MAAAtvC,IACA,IAAAmc,EAAA+yB,cAAAlvC,EAAAwD,QAAA,CACA2Y,EAAA+yB,cAAAlvC,EAAAwD,SAAA,EACA,IAAA4a,EAAA,MAAApe,EAAAwD,OAAA,wBAEA,GADA+rC,EAAAnxB,GACAowB,EAAA,CAEA,IAAAxrC,EAAAwrC,EACAjmC,WAAA,WACAgnC,EAAA,sBAAAvsC,EAAAgC,KAAA,oBAAAwqC,EAAAxsC,EAAAsD,MAAA,kBAAA6V,EAAAqG,qBAAA/oB,OAAA,cACA0iB,EAAAwG,KAAA,CACAwsB,2BAAA,EACAtoC,SAAA7D,EAAAsD,KAAAtD,EAAAgC,QAEA,QAEAmX,EAAAoL,QAAA,SAAAvnB,GACAyvC,IACAtzB,EAAA+yB,cAAAlvC,EAAAwD,UACA+rC,EAAA,sDAAAvvC,EAAAwD,OAAA,yBACA2Y,EAAA1f,KAAA8xC,KAEApyB,EAAAjM,QAAA,SAAAlQ,GACAmc,EAAA+yB,cAAAlvC,EAAAwD,SACA+rC,EAAA,8CAAAvvC,EAAAwD,OAAA,qBAEAksC,EAAAvzB,GACAA,EAAAiF,oBAAA,SAAAyoB,GACA4F,KAEAtzB,EAAA4rB,QAAA,SAAA8B,GACAA,EAAAxoB,OAAA,UACAlF,EAAAiF,oBAAAyoB,GACA4F,KAEA,IAAArxB,EAAA,0BAAAjC,EAAA8G,QAAA,OACAssB,EAAAnxB,GACAjC,EAAAurB,WAAAvrB,EAAA8G,QAAA,SAAA2kB,EAAA7rB,GACA,IAAAqC,EAAA,sCAAArC,EAAA,6DAAAA,EAAA,qHAAAA,EAAA,uCAAAA,EAAA,OAEAwzB,EAAAnxB,GACAjC,EAAAyuB,UAAA,SAAAhtB,GACAA,EAAAkD,GAAA,wBACAyuB,EAAA,+BAEA3xB,EAAAkD,GAAA,qBACApD,SAAAiyB,WAEA/xB,EAAAkD,GAAA,mBACApD,SAAAiyB,aAGA9lC,OAAA8e,iBAAA,qBACA4mB,EAAA,+BACA,KAEA1lC,OAAAsS,cAEA,SAAAuzB,EAAAvzB,GACA,IAAAgoB,EAAA,GA8FA,SAAAC,EAAAC,EAAAjQ,GACA,QAAAiQ,EAAAC,SAAA,CAGA,IAAAA,GAAAD,EAAAC,SAAA7O,QAAA,GAAA3H,MAAA,aACAsG,EAAAmQ,UAAAD,EAAA,KAjGAnoB,EAAA8F,YAAA,SAAAjf,GACA,IAAAmZ,EAAA6yB,aAAAhsC,EAAAsD,KAAAtD,EAAAgC,MAAA,CACA,IAAAw/B,EAAAz8B,SAAAC,cAAA,OACAw8B,EAAAz7B,MAAA6mC,aAAA,kBACApL,EAAAz7B,MAAA8mC,QAAA,UACArL,EAAAlW,GAAAtrB,EAAAe,KACA,IAAAqa,EAAA,GA4BA,GA3BApb,EAAAQ,QAAA2Y,EAAA3Y,OACA4a,GAAA,gBAAApb,EAAAoB,aAEAga,GAAA,kBAAApb,EAAAQ,OAEA4a,GAAA,UAAApb,EAAAgC,KAAA,QACAoZ,GAAA,gBAAAoxB,EAAAxsC,EAAAsD,MAAA,OACA8X,GAAA,8CACApb,EAAAQ,SAAA2Y,EAAA3Y,SACA4a,GAAA,mDAEAomB,EAAAD,UAAAnmB,EACAjC,EAAAuoB,eAAAC,aAAAH,EAAAroB,EAAAuoB,eAAAE,YACA5hC,EAAAQ,SAAA2Y,EAAA3Y,QAAAghC,EAAAK,cAAA,aACAL,EAAAK,cAAA,WAAA18B,QAAA,SAAAnI,GACAA,EAAA8vC,iBACA/1C,KAAAoO,QAAA,aACAgU,EAAA6yB,aAAAhsC,EAAAsD,KAAAtD,EAAAgC,cACAmX,EAAA6yB,aAAAhsC,EAAAsD,KAAAtD,EAAAgC,MAEAmX,EAAAwG,KAAA,CACAysB,kBAAA,EACAvoC,SAAA7D,EAAAgC,MACAhC,EAAAQ,QACAghC,EAAA37B,WAAAC,YAAA07B,MAGAxhC,EAAAoB,aAOA,OANA+/B,EAAAnhC,EAAAe,MAAA,CACAygC,MACAH,SAAAG,EAAAK,cAAA,YACAzQ,MAAAoQ,EAAAK,cAAA,eAEAV,EAAAnhC,EAAAe,MAAAsgC,SAAAvtB,IAAA9T,EAAAwB,WAGA2/B,EAAAnhC,EAAAe,QACAogC,EAAAnhC,EAAAe,MAAA,IAEAogC,EAAAnhC,EAAAe,MAAAf,EAAAoB,cAAA,CACAogC,MACAH,SAAAG,EAAAK,cAAA,YACAzQ,MAAAoQ,EAAAK,cAAA,UAEAV,EAAAnhC,EAAAe,MAAAf,EAAAoB,cAAAigC,SAAAvtB,IAAA9T,EAAAwB,YAGA2X,EAAA6F,eAAA,SAAA3e,GACA,IAAA8Y,EAAA6yB,aAAA3rC,EAAAiD,KAAAjD,EAAA2B,MAAA,CACA,IAAA8/B,EAAAX,EAAA9gC,EAAAU,MACA+gC,IAGAzhC,EAAAe,eACA0gC,EAAAX,EAAA9gC,EAAAU,MAAAV,EAAAe,eACA0gC,KAIAA,EAAAT,SAAA5pC,MAAA4I,EAAAE,iBAAAF,EAAAmB,WAAAsgC,EAAAT,SAAAvtB,IACAstB,EAAAU,EAAAT,SAAAS,EAAA1Q,WAGAjY,EAAA+F,UAAA,SAAAlf,GACA,IAAAmZ,EAAA6yB,aAAAhsC,EAAAsD,KAAAtD,EAAAgC,MAAA,CACA,IAAAw/B,EAAAz8B,SAAAqpB,eAAApuB,EAAAe,MAIA,GAHAygC,GACAA,EAAA37B,WAAAC,YAAA07B,GAEAxhC,EAAAoB,eAAA+X,EAAA3Y,OAAA,CAUA4a,EAAA,2BACAA,GAAA,UAAApb,EAAAgC,KAAA,QACAoZ,GAAA,gBAAApb,EAAAoB,aAAA,QACAga,GAAA,gBAAAoxB,EAAAxsC,EAAAsD,MAAA,QACAipC,EAAAnxB,OAdA,CACAswB,EAAA1rC,GACAmZ,EAAA6yB,aAAAhsC,EAAAsD,KAAAtD,EAAAgC,MAAAhC,EACA,IAAAob,EAAA,6BACAA,GAAA,UAAApb,EAAAgC,KAAA,QACAoZ,GAAA,gBAAAoxB,EAAAxsC,EAAAsD,MAAA,QACA8X,GAAA,gBAAApb,EAAAqE,IAAA,+BAAArE,EAAAgC,KAAA,iBACAw/B,EAAA+K,EAAAnxB,MAiBA,SAAAoxB,EAAA53B,GACA,IAAAm4B,EAAA,IACAC,EAAA,8BACA,OAAAp4B,EACA,gBAEA,IAAAzc,EAAAqZ,SAAAlX,KAAA+E,MAAA/E,KAAAgF,IAAAsV,GAAAta,KAAAgF,IAAAytC,IAAA,IACA,OAAAn4B,EAAAta,KAAAyE,IAAAguC,EAAA50C,IAAA80C,YAAA,OAAAD,EAAA70C,GAEA,SAAAwzC,EAAA3rC,GACA,IAAAuhC,EAAA,uBAAAvhC,EAAAgC,KAAA,oBAAAwqC,EAAAxsC,EAAAsD,MAAA,OACAipC,EAAAhL,GACAiK,EAAAxrC,EACAmZ,GACAA,EAAAwG,KAAA,CACAwsB,2BAAA,EACAtoC,SAAA7D,EAAAsD,KAAAtD,EAAAgC,OAIA,IAAAkrC,EAAAnoC,SAAAqpB,eAAA,mBACA,SAAAqe,IACAS,EAAA3L,UAAApoB,IAAAqG,qBAAA/oB,OAAA,EAEA,IAAAw1C,EAAAlnC,SAAAqpB,eAAA,QACA,SAAAme,EAAAY,EAAAC,GACA,IAAA5L,EAAAz8B,SAAAC,cAAA,OAMA,OALAw8B,EAAAD,UAAA,MAAA4L,EAAA,OACAlB,EAAAtK,aAAAH,EAAAyK,EAAArK,YACAwL,IACA5L,EAAAz7B,MAAAqnC,SAEA5L,EASA,SAAAkK,EAAA1rC,GACAorC,EAAArlC,MAAAsnC,KAAA,MACAjC,EAAArlC,MAAAunC,MAAA,OACAlC,EAAArlC,MAAAwnC,OAAA,GACAnC,EAAArlC,MAAAynC,IAAA,MACApC,EAAArlC,MAAA0nC,QAAA,OACA1oC,SAAA88B,cAAA,YAAA97B,MAAAC,QAAA,OACAyoB,EAAA1oB,MAAAC,QAAA,QACAyoB,EAAAxhB,OAAA,WAIA,GAHA3W,MAAAqH,UAAAvB,MAAAtG,KAAA24B,EAAAE,cAAA5pB,SAAAM,KAAAqoC,iBAAA,MAAA/sC,QAAA,SAAAyF,GACAA,EAAAL,MAAA4nC,SAAA,UAEA3tC,EAAAuD,MAAAqqC,GAAA5tC,EAAAuD,KAAA/H,MAAA,gCAAAizB,EAAAhW,IAAA/f,QAAA,wBAAA+1B,EAAAhW,IAAA1I,cAAAoS,OAAA,yBAIA,OAHAsM,EAAAE,cAAA5pB,SAAAM,KAAAU,MAAA8nC,UAAA,SACApf,EAAAE,cAAA5pB,SAAAM,KAAAU,MAAA+nC,WAAA,aACArf,EAAAE,cAAA5pB,SAAAM,KAAAU,MAAAqnC,MAAA,SAGA3e,EAAAE,cAAA5pB,SAAAM,KAAAU,MAAA8nC,UAAA,OACApf,EAAAE,cAAA5pB,SAAAM,KAAAU,MAAA+nC,WAAA,QACArf,EAAAE,cAAA5pB,SAAAM,KAAAU,MAAAqnC,MAAA,SAEA,IAAAQ,GAAA5tC,EAAAgC,MAAA,IAAA+N,cAAAvU,MAAA,2DACAoyC,GACAnf,EAAAhW,IAAAnU,IAAAC,gBAAAvE,GACA+tC,EAAA,KAAAC,OAAAx0C,KAAAwG,IAEAyuB,EAAAhW,IAAA,4DAlCA5R,OAAAqG,QAAAxH,QAAAC,MAAA,WACA,IAAAA,EAAAwU,KAAAC,UAAAnjB,YACA,IAAA0O,EAAAjN,QAAA,gCAGA6zC,EAAA,aAAA5mC,EAAA,QAgCAomC,IAEAllC,OAAA8e,iBAAA,oBACAjL,SAAAiyB,WACA,GAEA5nC,SAAA4gB,iBAAA,oBAAA3oB,GACAA,EAAA8vC,iBACA9vC,EAAAixC,kBACAjxC,EAAAkxC,aAAAC,WAAA,SACA,GACAppC,SAAA4gB,iBAAA,gBAAA3oB,GAGA,GAFAA,EAAA8vC,iBACA9vC,EAAAixC,kBACAjxC,EAAAkxC,aAAAzoC,OAAAzI,EAAAkxC,aAAAzoC,MAAAhP,OAAA,CAGA,IAAAuJ,EAAAhD,EAAAkxC,aAAAzoC,MAAA,GACA0T,GACApU,SAAAqpB,eAAA,aAAAjpB,UAEAimC,EAAAjmC,QAAAnF,MACA,GAEAqrC,KAEA+C,QAAA,CACAzD,gBADA,WAGAoD,EAAA,KAAAM,sBACAC,EAAA,KAAA90C,KAAA,iBAEAoxC,eANA,WAQAmD,EAAA,KAAAQ,qBACAD,EAAA,KAAA90C,KAAA,mBCrZqVg1C,EAAA,0BCQrVC,EAAgBhuC,OAAAiuC,EAAA,KAAAjuC,CACd+tC,EACApE,EACAU,GACF,EACA,KACA,KACA,MAIe6D,EAAA,WAAAF,6CClBf,IAAAG,EAAsBp5C,EAAQ,QAC9Bq5C,EAAiBr5C,EAAQ,QAEzBgY,EAAA9V,QAAA,SAAAiQ,EAAAtQ,EAAAI,GACAJ,KAAAsQ,EAAAinC,EAAApxC,EAAAmK,EAAAtQ,EAAAw3C,EAAA,EAAAp3C,IACAkQ,EAAAtQ,GAAAI,uBCLA,IAOAq3C,EACAC,EARAp2B,EAAAnL,EAAA9V,QAAA,GAUA,SAAAs3C,IACA,UAAAx2C,MAAA,mCAEA,SAAAy2C,IACA,UAAAz2C,MAAA,qCAsBA,SAAA02C,EAAAC,GACA,GAAAL,IAAAvpC,WAEA,OAAAA,WAAA4pC,EAAA,GAGA,IAAAL,IAAAE,IAAAF,IAAAvpC,WAEA,OADAupC,EAAAvpC,WACAA,WAAA4pC,EAAA,GAEA,IAEA,OAAAL,EAAAK,EAAA,GACK,MAAAnyC,GACL,IAEA,OAAA8xC,EAAAh5C,KAAA,KAAAq5C,EAAA,GACS,MAAAnyC,GAET,OAAA8xC,EAAAh5C,KAAAiB,KAAAo4C,EAAA,KAMA,SAAAC,EAAAC,GACA,GAAAN,IAAAO,aAEA,OAAAA,aAAAD,GAGA,IAAAN,IAAAE,IAAAF,IAAAO,aAEA,OADAP,EAAAO,aACAA,aAAAD,GAEA,IAEA,OAAAN,EAAAM,GACK,MAAAryC,GACL,IAEA,OAAA+xC,EAAAj5C,KAAA,KAAAu5C,GACS,MAAAryC,GAGT,OAAA+xC,EAAAj5C,KAAAiB,KAAAs4C,MAjEA,WACA,IAEAP,EADA,oBAAAvpC,WACAA,WAEAypC,EAEK,MAAAhyC,GACL8xC,EAAAE,EAEA,IAEAD,EADA,oBAAAO,aACAA,aAEAL,EAEK,MAAAjyC,GACL+xC,EAAAE,IAjBA,GAwEA,IAEAM,EAFAC,EAAA,GACAC,GAAA,EAEAC,GAAA,EAEA,SAAAC,IACAF,GAAAF,IAGAE,GAAA,EACAF,EAAA94C,OACA+4C,EAAAD,EAAA3iC,OAAA4iC,GAEAE,GAAA,EAEAF,EAAA/4C,QACAm5C,KAIA,SAAAA,IACA,IAAAH,EAAA,CAGA,IAAAI,EAAAX,EAAAS,GACAF,GAAA,EAEA,IAAAr3C,EAAAo3C,EAAA/4C,OACA,MAAA2B,EAAA,CACAm3C,EAAAC,EACAA,EAAA,GACA,QAAAE,EAAAt3C,EACAm3C,GACAA,EAAAG,GAAAI,MAGAJ,GAAA,EACAt3C,EAAAo3C,EAAA/4C,OAEA84C,EAAA,KACAE,GAAA,EACAL,EAAAS,IAiBA,SAAAE,EAAAZ,EAAA3iC,GACAzV,KAAAo4C,MACAp4C,KAAAyV,QAYA,SAAAwjC,KA5BAr3B,EAAAs3B,SAAA,SAAAd,GACA,IAAAtqB,EAAA,IAAAvuB,MAAAW,UAAAR,OAAA,GACA,GAAAQ,UAAAR,OAAA,EACA,QAAA0B,EAAA,EAAuBA,EAAAlB,UAAAR,OAAsB0B,IAC7C0sB,EAAA1sB,EAAA,GAAAlB,UAAAkB,GAGAq3C,EAAAh2C,KAAA,IAAAu2C,EAAAZ,EAAAtqB,IACA,IAAA2qB,EAAA/4C,QAAAg5C,GACAP,EAAAU,IASAG,EAAApyC,UAAAmyC,IAAA,WACA/4C,KAAAo4C,IAAA9yC,MAAA,KAAAtF,KAAAyV,QAEAmM,EAAA8oB,MAAA,UACA9oB,EAAAwL,SAAA,EACAxL,EAAAu3B,IAAA,GACAv3B,EAAAw3B,KAAA,GACAx3B,EAAAwQ,QAAA,GACAxQ,EAAAsQ,SAAA,GAIAtQ,EAAAmF,GAAAkyB,EACAr3B,EAAAy3B,YAAAJ,EACAr3B,EAAA03B,KAAAL,EACAr3B,EAAA23B,IAAAN,EACAr3B,EAAA43B,eAAAP,EACAr3B,EAAA63B,mBAAAR,EACAr3B,EAAAsF,KAAA+xB,EACAr3B,EAAA83B,gBAAAT,EACAr3B,EAAA+3B,oBAAAV,EAEAr3B,EAAAg4B,UAAA,SAAA3uC,GAAqC,UAErC2W,EAAAi4B,QAAA,SAAA5uC,GACA,UAAAxJ,MAAA,qCAGAmgB,EAAAk4B,IAAA,WAA2B,WAC3Bl4B,EAAAm4B,MAAA,SAAApgC,GACA,UAAAlY,MAAA,mCAEAmgB,EAAAo4B,MAAA,WAA4B","file":"js/about.f1567ec9.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TitleScreen.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TitleScreen.vue?vue&type=style&index=0&lang=css&\"","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","'use strict';\n\nvar isRegExp = require('./_is-regexp');\nvar anObject = require('./_an-object');\nvar speciesConstructor = require('./_species-constructor');\nvar advanceStringIndex = require('./_advance-string-index');\nvar toLength = require('./_to-length');\nvar callRegExpExec = require('./_regexp-exec-abstract');\nvar regexpExec = require('./_regexp-exec');\nvar fails = require('./_fails');\nvar $min = Math.min;\nvar $push = [].push;\nvar $SPLIT = 'split';\nvar LENGTH = 'length';\nvar LAST_INDEX = 'lastIndex';\nvar MAX_UINT32 = 0xffffffff;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return $split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy[LAST_INDEX];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);\n    };\n  } else {\n    internalSplit = $split;\n  }\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = defined(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n});\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// Last time updated: 2017-08-27 5:48:35 AM UTC\r\n\r\n// ________________\r\n// FileBufferReader\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/FileBufferReader\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\n'use strict';\r\n\r\n(function() {\r\n\r\n    function FileBufferReader() {\r\n        var fbr = this;\r\n        var fbrHelper = new FileBufferReaderHelper();\r\n\r\n        fbr.chunks = {};\r\n        fbr.users = {};\r\n\r\n        fbr.readAsArrayBuffer = function(file, callback, extra) {\r\n            var options = {\r\n                file: file,\r\n                earlyCallback: function(chunk) {\r\n                    callback(fbrClone(chunk, {\r\n                        currentPosition: -1\r\n                    }));\r\n                },\r\n                extra: extra || {\r\n                    userid: 0\r\n                }\r\n            };\r\n\r\n            if (file.extra && Object.keys(file.extra).length) {\r\n                Object.keys(file.extra).forEach(function(key) {\r\n                    options.extra[key] = file.extra[key];\r\n                });\r\n            }\r\n\r\n            fbrHelper.readAsArrayBuffer(fbr, options);\r\n        };\r\n\r\n        fbr.getNextChunk = function(fileUUID, callback, userid) {\r\n            var currentPosition;\r\n\r\n            if (typeof fileUUID.currentPosition !== 'undefined') {\r\n                currentPosition = fileUUID.currentPosition;\r\n                fileUUID = fileUUID.uuid;\r\n            }\r\n\r\n            var allFileChunks = fbr.chunks[fileUUID];\r\n            if (!allFileChunks) {\r\n                return;\r\n            }\r\n\r\n            if (typeof userid !== 'undefined') {\r\n                if (!fbr.users[userid + '']) {\r\n                    fbr.users[userid + ''] = {\r\n                        fileUUID: fileUUID,\r\n                        userid: userid,\r\n                        currentPosition: -1\r\n                    };\r\n                }\r\n\r\n                if (typeof currentPosition !== 'undefined') {\r\n                    fbr.users[userid + ''].currentPosition = currentPosition;\r\n                }\r\n\r\n                fbr.users[userid + ''].currentPosition++;\r\n                currentPosition = fbr.users[userid + ''].currentPosition;\r\n            } else {\r\n                if (typeof currentPosition !== 'undefined') {\r\n                    fbr.chunks[fileUUID].currentPosition = currentPosition;\r\n                }\r\n\r\n                fbr.chunks[fileUUID].currentPosition++;\r\n                currentPosition = fbr.chunks[fileUUID].currentPosition;\r\n            }\r\n\r\n            var nextChunk = allFileChunks[currentPosition];\r\n            if (!nextChunk) {\r\n                delete fbr.chunks[fileUUID];\r\n                fbr.convertToArrayBuffer({\r\n                    chunkMissing: true,\r\n                    currentPosition: currentPosition,\r\n                    uuid: fileUUID\r\n                }, callback);\r\n                return;\r\n            }\r\n\r\n            nextChunk = fbrClone(nextChunk);\r\n\r\n            if (typeof userid !== 'undefined') {\r\n                nextChunk.remoteUserId = userid + '';\r\n            }\r\n\r\n            if (!!nextChunk.start) {\r\n                fbr.onBegin(nextChunk);\r\n            }\r\n\r\n            if (!!nextChunk.end) {\r\n                fbr.onEnd(nextChunk);\r\n            }\r\n\r\n            fbr.onProgress(nextChunk);\r\n\r\n            fbr.convertToArrayBuffer(nextChunk, function(buffer) {\r\n                if (nextChunk.currentPosition == nextChunk.maxChunks) {\r\n                    callback(buffer, true);\r\n                    return;\r\n                }\r\n\r\n                callback(buffer, false);\r\n            });\r\n        };\r\n\r\n        var fbReceiver = new FileBufferReceiver(fbr);\r\n\r\n        fbr.addChunk = function(chunk, callback) {\r\n            if (!chunk) {\r\n                return;\r\n            }\r\n\r\n            fbReceiver.receive(chunk, function(chunk) {\r\n                fbr.convertToArrayBuffer({\r\n                    readyForNextChunk: true,\r\n                    currentPosition: chunk.currentPosition,\r\n                    uuid: chunk.uuid\r\n                }, callback);\r\n            });\r\n        };\r\n\r\n        fbr.chunkMissing = function(chunk) {\r\n            delete fbReceiver.chunks[chunk.uuid];\r\n            delete fbReceiver.chunksWaiters[chunk.uuid];\r\n        };\r\n\r\n        fbr.onBegin = function() {};\r\n        fbr.onEnd = function() {};\r\n        fbr.onProgress = function() {};\r\n\r\n        fbr.convertToObject = FileConverter.ConvertToObject;\r\n        fbr.convertToArrayBuffer = FileConverter.ConvertToArrayBuffer\r\n\r\n        // for backward compatibility----it is redundant.\r\n        fbr.setMultipleUsers = function() {};\r\n\r\n        // extends 'from' object with members from 'to'. If 'to' is null, a deep clone of 'from' is returned\r\n        function fbrClone(from, to) {\r\n            if (from == null || typeof from != \"object\") return from;\r\n            if (from.constructor != Object && from.constructor != Array) return from;\r\n            if (from.constructor == Date || from.constructor == RegExp || from.constructor == Function ||\r\n                from.constructor == String || from.constructor == Number || from.constructor == Boolean)\r\n                return new from.constructor(from);\r\n\r\n            to = to || new from.constructor();\r\n\r\n            for (var name in from) {\r\n                to[name] = typeof to[name] == \"undefined\" ? fbrClone(from[name], null) : to[name];\r\n            }\r\n\r\n            return to;\r\n        }\r\n    }\r\n\r\n    function FileBufferReaderHelper() {\r\n        var fbrHelper = this;\r\n\r\n        function processInWebWorker(_function) {\r\n            var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                'this.onmessage =  function (e) {' + _function.name + '(e.data);}'\r\n            ], {\r\n                type: 'application/javascript'\r\n            }));\r\n\r\n            var worker = new Worker(blob);\r\n            return worker;\r\n        }\r\n\r\n        fbrHelper.readAsArrayBuffer = function(fbr, options) {\r\n            var earlyCallback = options.earlyCallback;\r\n            delete options.earlyCallback;\r\n\r\n            function processChunk(chunk) {\r\n                if (!fbr.chunks[chunk.uuid]) {\r\n                    fbr.chunks[chunk.uuid] = {\r\n                        currentPosition: -1\r\n                    };\r\n                }\r\n\r\n                options.extra = options.extra || {\r\n                    userid: 0\r\n                };\r\n\r\n                chunk.userid = options.userid || options.extra.userid || 0;\r\n                chunk.extra = options.extra;\r\n\r\n                fbr.chunks[chunk.uuid][chunk.currentPosition] = chunk;\r\n\r\n                if (chunk.end && earlyCallback) {\r\n                    earlyCallback(chunk.uuid);\r\n                    earlyCallback = null;\r\n                }\r\n\r\n                // for huge files\r\n                if ((chunk.maxChunks > 200 && chunk.currentPosition == 200) && earlyCallback) {\r\n                    earlyCallback(chunk.uuid);\r\n                    earlyCallback = null;\r\n                }\r\n            }\r\n            if (false && typeof Worker !== 'undefined') {\r\n                var webWorker = processInWebWorker(fileReaderWrapper);\r\n\r\n                webWorker.onmessage = function(event) {\r\n                    processChunk(event.data);\r\n                };\r\n\r\n                webWorker.postMessage(options);\r\n            } else {\r\n                fileReaderWrapper(options, processChunk);\r\n            }\r\n        };\r\n\r\n        function fileReaderWrapper(options, callback) {\r\n            callback = callback || function(chunk) {\r\n                postMessage(chunk);\r\n            };\r\n\r\n            var file = options.file;\r\n            if (!file.uuid) {\r\n                file.uuid = (Math.random() * 100).toString().replace(/\\./g, '');\r\n            }\r\n\r\n            var chunkSize = options.chunkSize || 15 * 1000;\r\n            if (options.extra && options.extra.chunkSize) {\r\n                chunkSize = options.extra.chunkSize;\r\n            }\r\n\r\n            var sliceId = 0;\r\n            var cacheSize = chunkSize;\r\n\r\n            var chunksPerSlice = Math.floor(Math.min(100000000, cacheSize) / chunkSize);\r\n            var sliceSize = chunksPerSlice * chunkSize;\r\n            var maxChunks = Math.ceil(file.size / chunkSize);\r\n\r\n            file.maxChunks = maxChunks;\r\n\r\n            var numOfChunksInSlice;\r\n            var currentPosition = 0;\r\n            var hasEntireFile;\r\n            var chunks = [];\r\n\r\n            callback({\r\n                currentPosition: currentPosition,\r\n                uuid: file.uuid,\r\n                maxChunks: maxChunks,\r\n                size: file.size,\r\n                name: file.name,\r\n                type: file.type,\r\n                lastModifiedDate: (file.lastModifiedDate || new Date()).toString(),\r\n                start: true\r\n            });\r\n\r\n            var blob, reader = new FileReader();\r\n\r\n            reader.onloadend = function(evt) {\r\n                if (evt.target.readyState == FileReader.DONE) {\r\n                    addChunks(file.name, evt.target.result, function() {\r\n                        sliceId++;\r\n                        if ((sliceId + 1) * sliceSize < file.size) {\r\n                            blob = file.slice(sliceId * sliceSize, (sliceId + 1) * sliceSize);\r\n                            reader.readAsArrayBuffer(blob);\r\n                        } else if (sliceId * sliceSize < file.size) {\r\n                            blob = file.slice(sliceId * sliceSize, file.size);\r\n                            reader.readAsArrayBuffer(blob);\r\n                        } else {\r\n                            file.url = URL.createObjectURL(file);\r\n                            callback({\r\n                                currentPosition: currentPosition,\r\n                                uuid: file.uuid,\r\n                                maxChunks: maxChunks,\r\n                                size: file.size,\r\n                                name: file.name,\r\n                                lastModifiedDate: (file.lastModifiedDate || new Date()).toString(),\r\n                                url: URL.createObjectURL(file),\r\n                                type: file.type,\r\n                                end: true\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n\r\n            currentPosition += 1;\r\n\r\n            blob = file.slice(sliceId * sliceSize, (sliceId + 1) * sliceSize);\r\n            reader.readAsArrayBuffer(blob);\r\n\r\n            function addChunks(fileName, binarySlice, addChunkCallback) {\r\n                numOfChunksInSlice = Math.ceil(binarySlice.byteLength / chunkSize);\r\n                for (var i = 0; i < numOfChunksInSlice; i++) {\r\n                    var start = i * chunkSize;\r\n                    chunks[currentPosition] = binarySlice.slice(start, Math.min(start + chunkSize, binarySlice.byteLength));\r\n\r\n                    callback({\r\n                        uuid: file.uuid,\r\n                        buffer: chunks[currentPosition],\r\n                        currentPosition: currentPosition,\r\n                        maxChunks: maxChunks,\r\n\r\n                        size: file.size,\r\n                        name: file.name,\r\n                        lastModifiedDate: (file.lastModifiedDate || new Date()).toString(),\r\n                        type: file.type\r\n                    });\r\n\r\n                    currentPosition++;\r\n                }\r\n\r\n                if (currentPosition == maxChunks) {\r\n                    hasEntireFile = true;\r\n                }\r\n\r\n                addChunkCallback();\r\n            }\r\n        }\r\n    }\r\n\r\n    function FileSelector() {\r\n        var selector = this;\r\n\r\n        var noFileSelectedCallback = function() {};\r\n\r\n        selector.selectSingleFile = function(callback, failure) {\r\n            if (failure) {\r\n                noFileSelectedCallback = failure;\r\n            }\r\n\r\n            selectFile(callback);\r\n        };\r\n        selector.selectMultipleFiles = function(callback, failure) {\r\n            if (failure) {\r\n                noFileSelectedCallback = failure;\r\n            }\r\n\r\n            selectFile(callback, true);\r\n        };\r\n        selector.selectDirectory = function(callback, failure) {\r\n            if (failure) {\r\n                noFileSelectedCallback = failure;\r\n            }\r\n\r\n            selectFile(callback, true, true);\r\n        };\r\n\r\n        selector.accept = '*.*';\r\n\r\n        function selectFile(callback, multiple, directory) {\r\n            callback = callback || function() {};\r\n\r\n            var file = document.createElement('input');\r\n            file.type = 'file';\r\n\r\n            if (multiple) {\r\n                file.multiple = true;\r\n            }\r\n\r\n            if (directory) {\r\n                file.webkitdirectory = true;\r\n            }\r\n\r\n            file.accept = selector.accept;\r\n\r\n            file.onclick = function() {\r\n                file.clickStarted = true;\r\n            };\r\n\r\n            document.body.onfocus = function() {\r\n                setTimeout(function() {\r\n                    if (!file.clickStarted) return;\r\n                    file.clickStarted = false;\r\n\r\n                    if (!file.value) {\r\n                        noFileSelectedCallback();\r\n                    }\r\n                }, 500);\r\n            };\r\n\r\n            file.onchange = function() {\r\n                if (multiple) {\r\n                    if (!file.files.length) {\r\n                        console.error('No file selected.');\r\n                        return;\r\n                    }\r\n\r\n                    var arr = [];\r\n                    Array.from(file.files).forEach(function(file) {\r\n                        file.url = file.webkitRelativePath;\r\n                        arr.push(file);\r\n                    });\r\n                    callback(arr);\r\n                    return;\r\n                }\r\n\r\n                if (!file.files[0]) {\r\n                    console.error('No file selected.');\r\n                    return;\r\n                }\r\n\r\n                callback(file.files[0]);\r\n\r\n                file.parentNode.removeChild(file);\r\n            };\r\n            file.style.display = 'none';\r\n            (document.body || document.documentElement).appendChild(file);\r\n            fireClickEvent(file);\r\n        }\r\n\r\n        function getValidFileName(fileName) {\r\n            if (!fileName) {\r\n                fileName = 'file' + (new Date).toISOString().replace(/:|\\.|-/g, '')\r\n            }\r\n\r\n            var a = fileName;\r\n            a = a.replace(/^.*[\\\\\\/]([^\\\\\\/]*)$/i, \"$1\");\r\n            a = a.replace(/\\s/g, \"_\");\r\n            a = a.replace(/,/g, '');\r\n            a = a.toLowerCase();\r\n            return a;\r\n        }\r\n\r\n        function fireClickEvent(element) {\r\n            if (typeof element.click === 'function') {\r\n                element.click();\r\n                return;\r\n            }\r\n\r\n            if (typeof element.change === 'function') {\r\n                element.change();\r\n                return;\r\n            }\r\n\r\n            if (typeof document.createEvent('Event') !== 'undefined') {\r\n                var event = document.createEvent('Event');\r\n\r\n                if (typeof event.initEvent === 'function' && typeof element.dispatchEvent === 'function') {\r\n                    event.initEvent('click', true, true);\r\n                    element.dispatchEvent(event);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            var event = new MouseEvent('click', {\r\n                view: window,\r\n                bubbles: true,\r\n                cancelable: true\r\n            });\r\n\r\n            element.dispatchEvent(event);\r\n        }\r\n    }\r\n\r\n    function FileBufferReceiver(fbr) {\r\n        var fbReceiver = this;\r\n\r\n        fbReceiver.chunks = {};\r\n        fbReceiver.chunksWaiters = {};\r\n\r\n        function receive(chunk, callback) {\r\n            if (!chunk.uuid) {\r\n                fbr.convertToObject(chunk, function(object) {\r\n                    receive(object);\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (chunk.start && !fbReceiver.chunks[chunk.uuid]) {\r\n                fbReceiver.chunks[chunk.uuid] = {};\r\n                if (fbr.onBegin) fbr.onBegin(chunk);\r\n            }\r\n\r\n            if (!chunk.end && chunk.buffer) {\r\n                fbReceiver.chunks[chunk.uuid][chunk.currentPosition] = chunk.buffer;\r\n            }\r\n\r\n            if (chunk.end) {\r\n                var chunksObject = fbReceiver.chunks[chunk.uuid];\r\n                var chunksArray = [];\r\n                Object.keys(chunksObject).forEach(function(item, idx) {\r\n                    chunksArray.push(chunksObject[item]);\r\n                });\r\n\r\n                var blob = new Blob(chunksArray, {\r\n                    type: chunk.type\r\n                });\r\n                blob = merge(blob, chunk);\r\n                blob.url = URL.createObjectURL(blob);\r\n                blob.uuid = chunk.uuid;\r\n\r\n                if (!blob.size) console.error('Something went wrong. Blob Size is 0.');\r\n\r\n                if (fbr.onEnd) fbr.onEnd(blob);\r\n\r\n                // clear system memory\r\n                delete fbReceiver.chunks[chunk.uuid];\r\n                delete fbReceiver.chunksWaiters[chunk.uuid];\r\n            }\r\n\r\n            if (chunk.buffer && fbr.onProgress) fbr.onProgress(chunk);\r\n\r\n            if (!chunk.end) {\r\n                callback(chunk);\r\n\r\n                fbReceiver.chunksWaiters[chunk.uuid] = function() {\r\n                    function looper() {\r\n                        if (!chunk.buffer) {\r\n                            return;\r\n                        }\r\n\r\n                        if (!fbReceiver.chunks[chunk.uuid]) {\r\n                            return;\r\n                        }\r\n\r\n                        if (chunk.currentPosition != chunk.maxChunks && !fbReceiver.chunks[chunk.uuid][chunk.currentPosition]) {\r\n                            callback(chunk);\r\n                            setTimeout(looper, 5000);\r\n                        }\r\n                    }\r\n                    setTimeout(looper, 5000);\r\n                };\r\n\r\n                fbReceiver.chunksWaiters[chunk.uuid]();\r\n            }\r\n        }\r\n\r\n        fbReceiver.receive = receive;\r\n    }\r\n\r\n    var FileConverter = {\r\n        ConvertToArrayBuffer: function(object, callback) {\r\n            binarize.pack(object, function(dataView) {\r\n                callback(dataView.buffer);\r\n            });\r\n        },\r\n        ConvertToObject: function(buffer, callback) {\r\n            binarize.unpack(buffer, callback);\r\n        }\r\n    };\r\n\r\n    function merge(mergein, mergeto) {\r\n        if (!mergein) mergein = {};\r\n        if (!mergeto) return mergein;\r\n\r\n        for (var item in mergeto) {\r\n            try {\r\n                mergein[item] = mergeto[item];\r\n            } catch (e) {}\r\n        }\r\n        return mergein;\r\n    }\r\n\r\n    var debug = false;\r\n\r\n    var BIG_ENDIAN = false,\r\n        LITTLE_ENDIAN = true,\r\n        TYPE_LENGTH = Uint8Array.BYTES_PER_ELEMENT,\r\n        LENGTH_LENGTH = Uint16Array.BYTES_PER_ELEMENT,\r\n        BYTES_LENGTH = Uint32Array.BYTES_PER_ELEMENT;\r\n\r\n    var Types = {\r\n        NULL: 0,\r\n        UNDEFINED: 1,\r\n        STRING: 2,\r\n        NUMBER: 3,\r\n        BOOLEAN: 4,\r\n        ARRAY: 5,\r\n        OBJECT: 6,\r\n        INT8ARRAY: 7,\r\n        INT16ARRAY: 8,\r\n        INT32ARRAY: 9,\r\n        UINT8ARRAY: 10,\r\n        UINT16ARRAY: 11,\r\n        UINT32ARRAY: 12,\r\n        FLOAT32ARRAY: 13,\r\n        FLOAT64ARRAY: 14,\r\n        ARRAYBUFFER: 15,\r\n        BLOB: 16,\r\n        FILE: 16,\r\n        BUFFER: 17 // Special type for node.js\r\n    };\r\n\r\n    if (debug) {\r\n        var TypeNames = [\r\n            'NULL',\r\n            'UNDEFINED',\r\n            'STRING',\r\n            'NUMBER',\r\n            'BOOLEAN',\r\n            'ARRAY',\r\n            'OBJECT',\r\n            'INT8ARRAY',\r\n            'INT16ARRAY',\r\n            'INT32ARRAY',\r\n            'UINT8ARRAY',\r\n            'UINT16ARRAY',\r\n            'UINT32ARRAY',\r\n            'FLOAT32ARRAY',\r\n            'FLOAT64ARRAY',\r\n            'ARRAYBUFFER',\r\n            'BLOB',\r\n            'BUFFER'\r\n        ];\r\n    }\r\n\r\n    var Length = [\r\n        null, // Types.NULL\r\n        null, // Types.UNDEFINED\r\n        'Uint16', // Types.STRING\r\n        'Float64', // Types.NUMBER\r\n        'Uint8', // Types.BOOLEAN\r\n        null, // Types.ARRAY\r\n        null, // Types.OBJECT\r\n        'Int8', // Types.INT8ARRAY\r\n        'Int16', // Types.INT16ARRAY\r\n        'Int32', // Types.INT32ARRAY\r\n        'Uint8', // Types.UINT8ARRAY\r\n        'Uint16', // Types.UINT16ARRAY\r\n        'Uint32', // Types.UINT32ARRAY\r\n        'Float32', // Types.FLOAT32ARRAY\r\n        'Float64', // Types.FLOAT64ARRAY\r\n        'Uint8', // Types.ARRAYBUFFER\r\n        'Uint8', // Types.BLOB, Types.FILE\r\n        'Uint8' // Types.BUFFER\r\n    ];\r\n\r\n    var binary_dump = function(view, start, length) {\r\n        var table = [],\r\n            endianness = BIG_ENDIAN,\r\n            ROW_LENGTH = 40;\r\n        table[0] = [];\r\n        for (var i = 0; i < ROW_LENGTH; i++) {\r\n            table[0][i] = i < 10 ? '0' + i.toString(10) : i.toString(10);\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var code = view.getUint8(start + i, endianness);\r\n            var index = ~~(i / ROW_LENGTH) + 1;\r\n            if (typeof table[index] === 'undefined') table[index] = [];\r\n            table[index][i % ROW_LENGTH] = code < 16 ? '0' + code.toString(16) : code.toString(16);\r\n        }\r\n        console.log('%c' + table[0].join(' '), 'font-weight: bold;');\r\n        for (i = 1; i < table.length; i++) {\r\n            console.log(table[i].join(' '));\r\n        }\r\n    };\r\n\r\n    var find_type = function(obj) {\r\n        var type = undefined;\r\n\r\n        if (obj === undefined) {\r\n            type = Types.UNDEFINED;\r\n\r\n        } else if (obj === null) {\r\n            type = Types.NULL;\r\n\r\n        } else {\r\n            var const_name = obj.constructor.name;\r\n            var const_name_reflection = obj.constructor.toString().match(/\\w+/g)[1];\r\n            if (const_name !== undefined && Types[const_name.toUpperCase()] !== undefined) {\r\n                // return type by .constructor.name if possible\r\n                type = Types[const_name.toUpperCase()];\r\n\r\n            } else if (const_name_reflection !== undefined && Types[const_name_reflection.toUpperCase()] !== undefined) {\r\n                type = Types[const_name_reflection.toUpperCase()];\r\n\r\n            } else {\r\n                // Work around when constructor.name is not defined\r\n                switch (typeof obj) {\r\n                    case 'string':\r\n                        type = Types.STRING;\r\n                        break;\r\n\r\n                    case 'number':\r\n                        type = Types.NUMBER;\r\n                        break;\r\n\r\n                    case 'boolean':\r\n                        type = Types.BOOLEAN;\r\n                        break;\r\n\r\n                    case 'object':\r\n                        if (obj instanceof Array) {\r\n                            type = Types.ARRAY;\r\n\r\n                        } else if (obj instanceof Int8Array) {\r\n                            type = Types.INT8ARRAY;\r\n\r\n                        } else if (obj instanceof Int16Array) {\r\n                            type = Types.INT16ARRAY;\r\n\r\n                        } else if (obj instanceof Int32Array) {\r\n                            type = Types.INT32ARRAY;\r\n\r\n                        } else if (obj instanceof Uint8Array) {\r\n                            type = Types.UINT8ARRAY;\r\n\r\n                        } else if (obj instanceof Uint16Array) {\r\n                            type = Types.UINT16ARRAY;\r\n\r\n                        } else if (obj instanceof Uint32Array) {\r\n                            type = Types.UINT32ARRAY;\r\n\r\n                        } else if (obj instanceof Float32Array) {\r\n                            type = Types.FLOAT32ARRAY;\r\n\r\n                        } else if (obj instanceof Float64Array) {\r\n                            type = Types.FLOAT64ARRAY;\r\n\r\n                        } else if (obj instanceof ArrayBuffer) {\r\n                            type = Types.ARRAYBUFFER;\r\n\r\n                        } else if (obj instanceof Blob) { // including File\r\n                            type = Types.BLOB;\r\n\r\n                        } else if (obj instanceof Buffer) { // node.js only\r\n                            type = Types.BUFFER;\r\n\r\n                        } else if (obj instanceof Object) {\r\n                            type = Types.OBJECT;\r\n\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        return type;\r\n    };\r\n\r\n    var utf16_utf8 = function(string) {\r\n        return unescape(encodeURIComponent(string));\r\n    };\r\n\r\n    var utf8_utf16 = function(bytes) {\r\n        return decodeURIComponent(escape(bytes));\r\n    };\r\n\r\n    /**\r\n     * packs seriarized elements array into a packed ArrayBuffer\r\n     * @param  {Array} serialized Serialized array of elements.\r\n     * @return {DataView} view of packed binary\r\n     */\r\n    var pack = function(serialized) {\r\n        var cursor = 0,\r\n            i = 0,\r\n            j = 0,\r\n            endianness = BIG_ENDIAN;\r\n\r\n        var ab = new ArrayBuffer(serialized[0].byte_length + serialized[0].header_size);\r\n        var view = new DataView(ab);\r\n\r\n        for (i = 0; i < serialized.length; i++) {\r\n            var start = cursor,\r\n                header_size = serialized[i].header_size,\r\n                type = serialized[i].type,\r\n                length = serialized[i].length,\r\n                value = serialized[i].value,\r\n                byte_length = serialized[i].byte_length,\r\n                type_name = Length[type],\r\n                unit = type_name === null ? 0 : window[type_name + 'Array'].BYTES_PER_ELEMENT;\r\n\r\n            // Set type\r\n            if (type === Types.BUFFER) {\r\n                // on node.js Blob is emulated using Buffer type\r\n                view.setUint8(cursor, Types.BLOB, endianness);\r\n            } else {\r\n                view.setUint8(cursor, type, endianness);\r\n            }\r\n            cursor += TYPE_LENGTH;\r\n\r\n            if (debug) {\r\n                console.info('Packing', type, TypeNames[type]);\r\n            }\r\n\r\n            // Set length if required\r\n            if (type === Types.ARRAY || type === Types.OBJECT) {\r\n                view.setUint16(cursor, length, endianness);\r\n                cursor += LENGTH_LENGTH;\r\n\r\n                if (debug) {\r\n                    console.info('Content Length', length);\r\n                }\r\n            }\r\n\r\n            // Set byte length\r\n            view.setUint32(cursor, byte_length, endianness);\r\n            cursor += BYTES_LENGTH;\r\n\r\n            if (debug) {\r\n                console.info('Header Size', header_size, 'bytes');\r\n                console.info('Byte Length', byte_length, 'bytes');\r\n            }\r\n\r\n            switch (type) {\r\n                case Types.NULL:\r\n                case Types.UNDEFINED:\r\n                    // NULL and UNDEFINED doesn't have any payload\r\n                    break;\r\n\r\n                case Types.STRING:\r\n                    if (debug) {\r\n                        console.info('Actual Content %c\"' + value + '\"', 'font-weight:bold;');\r\n                    }\r\n                    for (j = 0; j < length; j++, cursor += unit) {\r\n                        view.setUint16(cursor, value.charCodeAt(j), endianness);\r\n                    }\r\n                    break;\r\n\r\n                case Types.NUMBER:\r\n                case Types.BOOLEAN:\r\n                    if (debug) {\r\n                        console.info('%c' + value.toString(), 'font-weight:bold;');\r\n                    }\r\n                    view['set' + type_name](cursor, value, endianness);\r\n                    cursor += unit;\r\n                    break;\r\n\r\n                case Types.INT8ARRAY:\r\n                case Types.INT16ARRAY:\r\n                case Types.INT32ARRAY:\r\n                case Types.UINT8ARRAY:\r\n                case Types.UINT16ARRAY:\r\n                case Types.UINT32ARRAY:\r\n                case Types.FLOAT32ARRAY:\r\n                case Types.FLOAT64ARRAY:\r\n                    var _view = new Uint8Array(view.buffer, cursor, byte_length);\r\n                    _view.set(new Uint8Array(value.buffer));\r\n                    cursor += byte_length;\r\n                    break;\r\n\r\n                case Types.ARRAYBUFFER:\r\n                case Types.BUFFER:\r\n                    var _view = new Uint8Array(view.buffer, cursor, byte_length);\r\n                    _view.set(new Uint8Array(value));\r\n                    cursor += byte_length;\r\n                    break;\r\n\r\n                case Types.BLOB:\r\n                case Types.ARRAY:\r\n                case Types.OBJECT:\r\n                    break;\r\n\r\n                default:\r\n                    throw 'TypeError: Unexpected type found.';\r\n            }\r\n\r\n            if (debug) {\r\n                binary_dump(view, start, cursor - start);\r\n            }\r\n        }\r\n\r\n        return view;\r\n    };\r\n\r\n    /**\r\n     * Unpack binary data into an object with value and cursor\r\n     * @param  {DataView} view [description]\r\n     * @param  {Number} cursor [description]\r\n     * @return {Object}\r\n     */\r\n    var unpack = function(view, cursor) {\r\n        var i = 0,\r\n            endianness = BIG_ENDIAN,\r\n            start = cursor;\r\n        var type, length, byte_length, value, elem;\r\n\r\n        // Retrieve \"type\"\r\n        type = view.getUint8(cursor, endianness);\r\n        cursor += TYPE_LENGTH;\r\n\r\n        if (debug) {\r\n            console.info('Unpacking', type, TypeNames[type]);\r\n        }\r\n\r\n        // Retrieve \"length\"\r\n        if (type === Types.ARRAY || type === Types.OBJECT) {\r\n            length = view.getUint16(cursor, endianness);\r\n            cursor += LENGTH_LENGTH;\r\n\r\n            if (debug) {\r\n                console.info('Content Length', length);\r\n            }\r\n        }\r\n\r\n        // Retrieve \"byte_length\"\r\n        byte_length = view.getUint32(cursor, endianness);\r\n        cursor += BYTES_LENGTH;\r\n\r\n        if (debug) {\r\n            console.info('Byte Length', byte_length, 'bytes');\r\n        }\r\n\r\n        var type_name = Length[type];\r\n        var unit = type_name === null ? 0 : window[type_name + 'Array'].BYTES_PER_ELEMENT;\r\n\r\n        switch (type) {\r\n            case Types.NULL:\r\n            case Types.UNDEFINED:\r\n                if (debug) {\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                // NULL and UNDEFINED doesn't have any octet\r\n                value = null;\r\n                break;\r\n\r\n            case Types.STRING:\r\n                length = byte_length / unit;\r\n                var string = [];\r\n                for (i = 0; i < length; i++) {\r\n                    var code = view.getUint16(cursor, endianness);\r\n                    cursor += unit;\r\n                    string.push(String.fromCharCode(code));\r\n                }\r\n                value = string.join('');\r\n                if (debug) {\r\n                    console.info('Actual Content %c\"' + value + '\"', 'font-weight:bold;');\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                break;\r\n\r\n            case Types.NUMBER:\r\n                value = view.getFloat64(cursor, endianness);\r\n                cursor += unit;\r\n                if (debug) {\r\n                    console.info('Actual Content %c\"' + value.toString() + '\"', 'font-weight:bold;');\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                break;\r\n\r\n            case Types.BOOLEAN:\r\n                value = view.getUint8(cursor, endianness) === 1 ? true : false;\r\n                cursor += unit;\r\n                if (debug) {\r\n                    console.info('Actual Content %c\"' + value.toString() + '\"', 'font-weight:bold;');\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                break;\r\n\r\n            case Types.INT8ARRAY:\r\n            case Types.INT16ARRAY:\r\n            case Types.INT32ARRAY:\r\n            case Types.UINT8ARRAY:\r\n            case Types.UINT16ARRAY:\r\n            case Types.UINT32ARRAY:\r\n            case Types.FLOAT32ARRAY:\r\n            case Types.FLOAT64ARRAY:\r\n            case Types.ARRAYBUFFER:\r\n                elem = view.buffer.slice(cursor, cursor + byte_length);\r\n                cursor += byte_length;\r\n\r\n                // If ArrayBuffer\r\n                if (type === Types.ARRAYBUFFER) {\r\n                    value = elem;\r\n\r\n                    // If other TypedArray\r\n                } else {\r\n                    value = new window[type_name + 'Array'](elem);\r\n                }\r\n\r\n                if (debug) {\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                break;\r\n\r\n            case Types.BLOB:\r\n                if (debug) {\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                // If Blob is available (on browser)\r\n                if (window.Blob) {\r\n                    var mime = unpack(view, cursor);\r\n                    var buffer = unpack(view, mime.cursor);\r\n                    cursor = buffer.cursor;\r\n                    value = new Blob([buffer.value], {\r\n                        type: mime.value\r\n                    });\r\n                } else {\r\n                    // node.js implementation goes here\r\n                    elem = view.buffer.slice(cursor, cursor + byte_length);\r\n                    cursor += byte_length;\r\n                    // node.js implementatino uses Buffer to help Blob\r\n                    value = new Buffer(elem);\r\n                }\r\n                break;\r\n\r\n            case Types.ARRAY:\r\n                if (debug) {\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                value = [];\r\n                for (i = 0; i < length; i++) {\r\n                    // Retrieve array element\r\n                    elem = unpack(view, cursor);\r\n                    cursor = elem.cursor;\r\n                    value.push(elem.value);\r\n                }\r\n                break;\r\n\r\n            case Types.OBJECT:\r\n                if (debug) {\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                value = {};\r\n                for (i = 0; i < length; i++) {\r\n                    // Retrieve object key and value in sequence\r\n                    var key = unpack(view, cursor);\r\n                    var val = unpack(view, key.cursor);\r\n                    cursor = val.cursor;\r\n                    value[key.value] = val.value;\r\n                }\r\n                break;\r\n\r\n            default:\r\n                throw 'TypeError: Type not supported.';\r\n        }\r\n        return {\r\n            value: value,\r\n            cursor: cursor\r\n        };\r\n    };\r\n\r\n    /**\r\n     * deferred function to process multiple serialization in order\r\n     * @param  {array}   array    [description]\r\n     * @param  {Function} callback [description]\r\n     * @return {void} no return value\r\n     */\r\n    var deferredSerialize = function(array, callback) {\r\n        var length = array.length,\r\n            results = [],\r\n            count = 0,\r\n            byte_length = 0;\r\n        for (var i = 0; i < array.length; i++) {\r\n            (function(index) {\r\n                serialize(array[index], function(result) {\r\n                    // store results in order\r\n                    results[index] = result;\r\n                    // count byte length\r\n                    byte_length += result[0].header_size + result[0].byte_length;\r\n                    // when all results are on table\r\n                    if (++count === length) {\r\n                        // finally concatenate all reuslts into a single array in order\r\n                        var array = [];\r\n                        for (var j = 0; j < results.length; j++) {\r\n                            array = array.concat(results[j]);\r\n                        }\r\n                        callback(array, byte_length);\r\n                    }\r\n                });\r\n            })(i);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Serializes object and return byte_length\r\n     * @param  {mixed} obj JavaScript object you want to serialize\r\n     * @return {Array} Serialized array object\r\n     */\r\n    var serialize = function(obj, callback) {\r\n        var subarray = [],\r\n            unit = 1,\r\n            header_size = TYPE_LENGTH + BYTES_LENGTH,\r\n            type, byte_length = 0,\r\n            length = 0,\r\n            value = obj;\r\n\r\n        type = find_type(obj);\r\n\r\n        unit = Length[type] === undefined || Length[type] === null ? 0 :\r\n            window[Length[type] + 'Array'].BYTES_PER_ELEMENT;\r\n\r\n        switch (type) {\r\n            case Types.UNDEFINED:\r\n            case Types.NULL:\r\n                break;\r\n\r\n            case Types.NUMBER:\r\n            case Types.BOOLEAN:\r\n                byte_length = unit;\r\n                break;\r\n\r\n            case Types.STRING:\r\n                length = obj.length;\r\n                byte_length += length * unit;\r\n                break;\r\n\r\n            case Types.INT8ARRAY:\r\n            case Types.INT16ARRAY:\r\n            case Types.INT32ARRAY:\r\n            case Types.UINT8ARRAY:\r\n            case Types.UINT16ARRAY:\r\n            case Types.UINT32ARRAY:\r\n            case Types.FLOAT32ARRAY:\r\n            case Types.FLOAT64ARRAY:\r\n                length = obj.length;\r\n                byte_length += length * unit;\r\n                break;\r\n\r\n            case Types.ARRAY:\r\n                deferredSerialize(obj, function(subarray, byte_length) {\r\n                    callback([{\r\n                        type: type,\r\n                        length: obj.length,\r\n                        header_size: header_size + LENGTH_LENGTH,\r\n                        byte_length: byte_length,\r\n                        value: null\r\n                    }].concat(subarray));\r\n                });\r\n                return;\r\n\r\n            case Types.OBJECT:\r\n                var deferred = [];\r\n                for (var key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        deferred.push(key);\r\n                        deferred.push(obj[key]);\r\n                        length++;\r\n                    }\r\n                }\r\n                deferredSerialize(deferred, function(subarray, byte_length) {\r\n                    callback([{\r\n                        type: type,\r\n                        length: length,\r\n                        header_size: header_size + LENGTH_LENGTH,\r\n                        byte_length: byte_length,\r\n                        value: null\r\n                    }].concat(subarray));\r\n                });\r\n                return;\r\n\r\n            case Types.ARRAYBUFFER:\r\n                byte_length += obj.byteLength;\r\n                break;\r\n\r\n            case Types.BLOB:\r\n                var mime_type = obj.type;\r\n                var reader = new FileReader();\r\n                reader.onload = function(e) {\r\n                    deferredSerialize([mime_type, e.target.result], function(subarray, byte_length) {\r\n                        callback([{\r\n                            type: type,\r\n                            length: length,\r\n                            header_size: header_size,\r\n                            byte_length: byte_length,\r\n                            value: null\r\n                        }].concat(subarray));\r\n                    });\r\n                };\r\n                reader.onerror = function(e) {\r\n                    throw 'FileReader Error: ' + e;\r\n                };\r\n                reader.readAsArrayBuffer(obj);\r\n                return;\r\n\r\n            case Types.BUFFER:\r\n                byte_length += obj.length;\r\n                break;\r\n\r\n            default:\r\n                throw 'TypeError: Type \"' + obj.constructor.name + '\" not supported.';\r\n        }\r\n\r\n        callback([{\r\n            type: type,\r\n            length: length,\r\n            header_size: header_size,\r\n            byte_length: byte_length,\r\n            value: value\r\n        }].concat(subarray));\r\n    };\r\n\r\n    /**\r\n     * Deserialize binary and return JavaScript object\r\n     * @param  ArrayBuffer buffer ArrayBuffer you want to deserialize\r\n     * @return mixed              Retrieved JavaScript object\r\n     */\r\n    var deserialize = function(buffer, callback) {\r\n        var view = buffer instanceof DataView ? buffer : new DataView(buffer);\r\n        var result = unpack(view, 0);\r\n        return result.value;\r\n    };\r\n\r\n    if (debug) {\r\n        window.Test = {\r\n            BIG_ENDIAN: BIG_ENDIAN,\r\n            LITTLE_ENDIAN: LITTLE_ENDIAN,\r\n            Types: Types,\r\n            pack: pack,\r\n            unpack: unpack,\r\n            serialize: serialize,\r\n            deserialize: deserialize\r\n        };\r\n    }\r\n\r\n    var binarize = {\r\n        pack: function(obj, callback) {\r\n            try {\r\n                if (debug) console.info('%cPacking Start', 'font-weight: bold; color: red;', obj);\r\n                serialize(obj, function(array) {\r\n                    if (debug) console.info('Serialized Object', array);\r\n                    callback(pack(array));\r\n                });\r\n            } catch (e) {\r\n                throw e;\r\n            }\r\n        },\r\n        unpack: function(buffer, callback) {\r\n            try {\r\n                if (debug) console.info('%cUnpacking Start', 'font-weight: bold; color: red;', buffer);\r\n                var result = deserialize(buffer);\r\n                if (debug) console.info('Deserialized Object', result);\r\n                callback(result);\r\n            } catch (e) {\r\n                throw e;\r\n            }\r\n        }\r\n    };\r\n\r\n    window.FileConverter = FileConverter;\r\n    window.FileSelector = FileSelector;\r\n    window.FileBufferReader = FileBufferReader;\r\n})();\r\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict';\r\n\r\n// Last time updated: 2019-06-15 4:26:11 PM UTC\r\n\r\n// _________________________\r\n// RTCMultiConnection v3.6.9\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/RTCMultiConnection\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\nvar RTCMultiConnection = function(roomid, forceOptions) {\r\n\r\n    var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n    (function(that) {\r\n        if (!that) {\r\n            return;\r\n        }\r\n\r\n        if (typeof window !== 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (typeof global === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        global.navigator = {\r\n            userAgent: browserFakeUserAgent,\r\n            getUserMedia: function() {}\r\n        };\r\n\r\n        if (!global.console) {\r\n            global.console = {};\r\n        }\r\n\r\n        if (typeof global.console.debug === 'undefined') {\r\n            global.console.debug = global.console.info = global.console.error = global.console.log = global.console.log || function() {\r\n                console.log(arguments);\r\n            };\r\n        }\r\n\r\n        if (typeof document === 'undefined') {\r\n            /*global document:true */\r\n            that.document = {};\r\n\r\n            document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n                var obj = {\r\n                    getContext: function() {\r\n                        return obj;\r\n                    },\r\n                    play: function() {},\r\n                    pause: function() {},\r\n                    drawImage: function() {},\r\n                    toDataURL: function() {\r\n                        return '';\r\n                    }\r\n                };\r\n                return obj;\r\n            };\r\n\r\n            document.addEventListener = document.removeEventListener = that.addEventListener = that.removeEventListener = function() {};\r\n\r\n            that.HTMLVideoElement = that.HTMLMediaElement = function() {};\r\n        }\r\n\r\n        if (typeof io === 'undefined') {\r\n            that.io = function() {\r\n                return {\r\n                    on: function(eventName, callback) {\r\n                        callback = callback || function() {};\r\n\r\n                        if (eventName === 'connect') {\r\n                            callback();\r\n                        }\r\n                    },\r\n                    emit: function(eventName, data, callback) {\r\n                        callback = callback || function() {};\r\n                        if (eventName === 'open-room' || eventName === 'join-room') {\r\n                            callback(true, data.sessionid, null);\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        }\r\n\r\n        if (typeof location === 'undefined') {\r\n            /*global location:true */\r\n            that.location = {\r\n                protocol: 'file:',\r\n                href: '',\r\n                hash: '',\r\n                origin: 'self'\r\n            };\r\n        }\r\n\r\n        if (typeof screen === 'undefined') {\r\n            /*global screen:true */\r\n            that.screen = {\r\n                width: 0,\r\n                height: 0\r\n            };\r\n        }\r\n\r\n        if (typeof URL === 'undefined') {\r\n            /*global screen:true */\r\n            that.URL = {\r\n                createObjectURL: function() {\r\n                    return '';\r\n                },\r\n                revokeObjectURL: function() {\r\n                    return '';\r\n                }\r\n            };\r\n        }\r\n\r\n        /*global window:true */\r\n        that.window = global;\r\n    })(typeof global !== 'undefined' ? global : null);\r\n\r\n    function SocketConnection(connection, connectCallback) {\r\n        function isData(session) {\r\n            return !session.audio && !session.video && !session.screen && session.data;\r\n        }\r\n\r\n        var parameters = '';\r\n\r\n        parameters += '?userid=' + connection.userid;\r\n        parameters += '&sessionid=' + connection.sessionid;\r\n        parameters += '&msgEvent=' + connection.socketMessageEvent;\r\n        parameters += '&socketCustomEvent=' + connection.socketCustomEvent;\r\n        parameters += '&autoCloseEntireSession=' + !!connection.autoCloseEntireSession;\r\n\r\n        if (connection.session.broadcast === true) {\r\n            parameters += '&oneToMany=true';\r\n        }\r\n\r\n        parameters += '&maxParticipantsAllowed=' + connection.maxParticipantsAllowed;\r\n\r\n        if (connection.enableScalableBroadcast) {\r\n            parameters += '&enableScalableBroadcast=true';\r\n            parameters += '&maxRelayLimitPerUser=' + (connection.maxRelayLimitPerUser || 2);\r\n        }\r\n\r\n        parameters += '&extra=' + JSON.stringify(connection.extra || {});\r\n\r\n        if (connection.socketCustomParameters) {\r\n            parameters += connection.socketCustomParameters;\r\n        }\r\n\r\n        try {\r\n            io.sockets = {};\r\n        } catch (e) {};\r\n\r\n        if (!connection.socketURL) {\r\n            connection.socketURL = '/';\r\n        }\r\n\r\n        if (connection.socketURL.substr(connection.socketURL.length - 1, 1) != '/') {\r\n            // connection.socketURL = 'https://domain.com:9001/';\r\n            throw '\"socketURL\" MUST end with a slash.';\r\n        }\r\n\r\n        if (connection.enableLogs) {\r\n            if (connection.socketURL == '/') {\r\n                console.info('socket.io url is: ', location.origin + '/');\r\n            } else {\r\n                console.info('socket.io url is: ', connection.socketURL);\r\n            }\r\n        }\r\n\r\n        try {\r\n            connection.socket = io(connection.socketURL + parameters);\r\n        } catch (e) {\r\n            connection.socket = io.connect(connection.socketURL + parameters, connection.socketOptions);\r\n        }\r\n\r\n        var mPeer = connection.multiPeersHandler;\r\n\r\n        connection.socket.on('extra-data-updated', function(remoteUserId, extra) {\r\n            if (!connection.peers[remoteUserId]) return;\r\n            connection.peers[remoteUserId].extra = extra;\r\n\r\n            connection.onExtraDataUpdated({\r\n                userid: remoteUserId,\r\n                extra: extra\r\n            });\r\n\r\n            updateExtraBackup(remoteUserId, extra);\r\n        });\r\n\r\n        function updateExtraBackup(remoteUserId, extra) {\r\n            if (!connection.peersBackup[remoteUserId]) {\r\n                connection.peersBackup[remoteUserId] = {\r\n                    userid: remoteUserId,\r\n                    extra: {}\r\n                };\r\n            }\r\n\r\n            connection.peersBackup[remoteUserId].extra = extra;\r\n        }\r\n\r\n        function onMessageEvent(message) {\r\n            if (message.remoteUserId != connection.userid) return;\r\n\r\n            if (connection.peers[message.sender] && connection.peers[message.sender].extra != message.message.extra) {\r\n                connection.peers[message.sender].extra = message.extra;\r\n                connection.onExtraDataUpdated({\r\n                    userid: message.sender,\r\n                    extra: message.extra\r\n                });\r\n\r\n                updateExtraBackup(message.sender, message.extra);\r\n            }\r\n\r\n            if (message.message.streamSyncNeeded && connection.peers[message.sender]) {\r\n                var stream = connection.streamEvents[message.message.streamid];\r\n                if (!stream || !stream.stream) {\r\n                    return;\r\n                }\r\n\r\n                var action = message.message.action;\r\n\r\n                if (action === 'ended' || action === 'inactive' || action === 'stream-removed') {\r\n                    if (connection.peersBackup[stream.userid]) {\r\n                        stream.extra = connection.peersBackup[stream.userid].extra;\r\n                    }\r\n                    connection.onstreamended(stream);\r\n                    return;\r\n                }\r\n\r\n                var type = message.message.type != 'both' ? message.message.type : null;\r\n\r\n                if (typeof stream.stream[action] == 'function') {\r\n                    stream.stream[action](type);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (message.message === 'dropPeerConnection') {\r\n                connection.deletePeer(message.sender);\r\n                return;\r\n            }\r\n\r\n            if (message.message.allParticipants) {\r\n                if (message.message.allParticipants.indexOf(message.sender) === -1) {\r\n                    message.message.allParticipants.push(message.sender);\r\n                }\r\n\r\n                message.message.allParticipants.forEach(function(participant) {\r\n                    mPeer[!connection.peers[participant] ? 'createNewPeer' : 'renegotiatePeer'](participant, {\r\n                        localPeerSdpConstraints: {\r\n                            OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                            OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                        },\r\n                        remotePeerSdpConstraints: {\r\n                            OfferToReceiveAudio: connection.session.oneway ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                            OfferToReceiveVideo: connection.session.oneway ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                        },\r\n                        isOneWay: !!connection.session.oneway || connection.direction === 'one-way',\r\n                        isDataOnly: isData(connection.session)\r\n                    });\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (message.message.newParticipant) {\r\n                if (message.message.newParticipant == connection.userid) return;\r\n                if (!!connection.peers[message.message.newParticipant]) return;\r\n\r\n                mPeer.createNewPeer(message.message.newParticipant, message.message.userPreferences || {\r\n                    localPeerSdpConstraints: {\r\n                        OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    },\r\n                    remotePeerSdpConstraints: {\r\n                        OfferToReceiveAudio: connection.session.oneway ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: connection.session.oneway ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    },\r\n                    isOneWay: !!connection.session.oneway || connection.direction === 'one-way',\r\n                    isDataOnly: isData(connection.session)\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (message.message.readyForOffer) {\r\n                if (connection.attachStreams.length) {\r\n                    connection.waitingForLocalMedia = false;\r\n                }\r\n\r\n                if (connection.waitingForLocalMedia) {\r\n                    // if someone is waiting to join you\r\n                    // make sure that we've local media before making a handshake\r\n                    setTimeout(function() {\r\n                        onMessageEvent(message);\r\n                    }, 1);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (message.message.newParticipationRequest && message.sender !== connection.userid) {\r\n                if (connection.peers[message.sender]) {\r\n                    connection.deletePeer(message.sender);\r\n                }\r\n\r\n                var userPreferences = {\r\n                    extra: message.extra || {},\r\n                    localPeerSdpConstraints: message.message.remotePeerSdpConstraints || {\r\n                        OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    },\r\n                    remotePeerSdpConstraints: message.message.localPeerSdpConstraints || {\r\n                        OfferToReceiveAudio: connection.session.oneway ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: connection.session.oneway ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    },\r\n                    isOneWay: typeof message.message.isOneWay !== 'undefined' ? message.message.isOneWay : !!connection.session.oneway || connection.direction === 'one-way',\r\n                    isDataOnly: typeof message.message.isDataOnly !== 'undefined' ? message.message.isDataOnly : isData(connection.session),\r\n                    dontGetRemoteStream: typeof message.message.isOneWay !== 'undefined' ? message.message.isOneWay : !!connection.session.oneway || connection.direction === 'one-way',\r\n                    dontAttachLocalStream: !!message.message.dontGetRemoteStream,\r\n                    connectionDescription: message,\r\n                    successCallback: function() {}\r\n                };\r\n\r\n                connection.onNewParticipant(message.sender, userPreferences);\r\n                return;\r\n            }\r\n\r\n            if (message.message.changedUUID) {\r\n                if (connection.peers[message.message.oldUUID]) {\r\n                    connection.peers[message.message.newUUID] = connection.peers[message.message.oldUUID];\r\n                    delete connection.peers[message.message.oldUUID];\r\n                }\r\n            }\r\n\r\n            if (message.message.userLeft) {\r\n                mPeer.onUserLeft(message.sender);\r\n\r\n                if (!!message.message.autoCloseEntireSession) {\r\n                    connection.leave();\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            mPeer.addNegotiatedMessage(message.message, message.sender);\r\n        }\r\n\r\n        connection.socket.on(connection.socketMessageEvent, onMessageEvent);\r\n\r\n        var alreadyConnected = false;\r\n\r\n        connection.socket.resetProps = function() {\r\n            alreadyConnected = false;\r\n        };\r\n\r\n        connection.socket.on('connect', function() {\r\n            if (alreadyConnected) {\r\n                return;\r\n            }\r\n            alreadyConnected = true;\r\n\r\n            if (connection.enableLogs) {\r\n                console.info('socket.io connection is opened.');\r\n            }\r\n\r\n            setTimeout(function() {\r\n                connection.socket.emit('extra-data-updated', connection.extra);\r\n            }, 1000);\r\n\r\n            if (connectCallback) {\r\n                connectCallback(connection.socket);\r\n            }\r\n        });\r\n\r\n        connection.socket.on('disconnect', function(event) {\r\n            connection.onSocketDisconnect(event);\r\n        });\r\n\r\n        connection.socket.on('error', function(event) {\r\n            connection.onSocketError(event);\r\n        });\r\n\r\n        connection.socket.on('user-disconnected', function(remoteUserId) {\r\n            if (remoteUserId === connection.userid) {\r\n                return;\r\n            }\r\n\r\n            connection.onUserStatusChanged({\r\n                userid: remoteUserId,\r\n                status: 'offline',\r\n                extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra || {} : {}\r\n            });\r\n\r\n            connection.deletePeer(remoteUserId);\r\n        });\r\n\r\n        connection.socket.on('user-connected', function(userid) {\r\n            if (userid === connection.userid) {\r\n                return;\r\n            }\r\n\r\n            connection.onUserStatusChanged({\r\n                userid: userid,\r\n                status: 'online',\r\n                extra: connection.peers[userid] ? connection.peers[userid].extra || {} : {}\r\n            });\r\n        });\r\n\r\n        connection.socket.on('closed-entire-session', function(sessionid, extra) {\r\n            connection.leave();\r\n            connection.onEntireSessionClosed({\r\n                sessionid: sessionid,\r\n                userid: sessionid,\r\n                extra: extra\r\n            });\r\n        });\r\n\r\n        connection.socket.on('userid-already-taken', function(useridAlreadyTaken, yourNewUserId) {\r\n            connection.onUserIdAlreadyTaken(useridAlreadyTaken, yourNewUserId);\r\n        });\r\n\r\n        connection.socket.on('logs', function(log) {\r\n            if (!connection.enableLogs) return;\r\n            console.debug('server-logs', log);\r\n        });\r\n\r\n        connection.socket.on('number-of-broadcast-viewers-updated', function(data) {\r\n            connection.onNumberOfBroadcastViewersUpdated(data);\r\n        });\r\n\r\n        connection.socket.on('set-isInitiator-true', function(sessionid) {\r\n            if (sessionid != connection.sessionid) return;\r\n            connection.isInitiator = true;\r\n        });\r\n    }\r\n\r\n    function MultiPeers(connection) {\r\n        var self = this;\r\n\r\n        var skipPeers = ['getAllParticipants', 'getLength', 'selectFirst', 'streams', 'send', 'forEach'];\r\n        connection.peers = {\r\n            getLength: function() {\r\n                var numberOfPeers = 0;\r\n                for (var peer in this) {\r\n                    if (skipPeers.indexOf(peer) == -1) {\r\n                        numberOfPeers++;\r\n                    }\r\n                }\r\n                return numberOfPeers;\r\n            },\r\n            selectFirst: function() {\r\n                var firstPeer;\r\n                for (var peer in this) {\r\n                    if (skipPeers.indexOf(peer) == -1) {\r\n                        firstPeer = this[peer];\r\n                    }\r\n                }\r\n                return firstPeer;\r\n            },\r\n            getAllParticipants: function(sender) {\r\n                var allPeers = [];\r\n                for (var peer in this) {\r\n                    if (skipPeers.indexOf(peer) == -1 && peer != sender) {\r\n                        allPeers.push(peer);\r\n                    }\r\n                }\r\n                return allPeers;\r\n            },\r\n            forEach: function(callbcak) {\r\n                this.getAllParticipants().forEach(function(participant) {\r\n                    callbcak(connection.peers[participant]);\r\n                });\r\n            },\r\n            send: function(data, remoteUserId) {\r\n                var that = this;\r\n\r\n                if (!isNull(data.size) && !isNull(data.type)) {\r\n                    if (connection.enableFileSharing) {\r\n                        self.shareFile(data, remoteUserId);\r\n                        return;\r\n                    }\r\n\r\n                    if (typeof data !== 'string') {\r\n                        data = JSON.stringify(data);\r\n                    }\r\n                }\r\n\r\n                if (data.type !== 'text' && !(data instanceof ArrayBuffer) && !(data instanceof DataView)) {\r\n                    TextSender.send({\r\n                        text: data,\r\n                        channel: this,\r\n                        connection: connection,\r\n                        remoteUserId: remoteUserId\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                if (data.type === 'text') {\r\n                    data = JSON.stringify(data);\r\n                }\r\n\r\n                if (remoteUserId) {\r\n                    var remoteUser = connection.peers[remoteUserId];\r\n                    if (remoteUser) {\r\n                        if (!remoteUser.channels.length) {\r\n                            connection.peers[remoteUserId].createDataChannel();\r\n                            connection.renegotiate(remoteUserId);\r\n                            setTimeout(function() {\r\n                                that.send(data, remoteUserId);\r\n                            }, 3000);\r\n                            return;\r\n                        }\r\n\r\n                        remoteUser.channels.forEach(function(channel) {\r\n                            channel.send(data);\r\n                        });\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                this.getAllParticipants().forEach(function(participant) {\r\n                    if (!that[participant].channels.length) {\r\n                        connection.peers[participant].createDataChannel();\r\n                        connection.renegotiate(participant);\r\n                        setTimeout(function() {\r\n                            that[participant].channels.forEach(function(channel) {\r\n                                channel.send(data);\r\n                            });\r\n                        }, 3000);\r\n                        return;\r\n                    }\r\n\r\n                    that[participant].channels.forEach(function(channel) {\r\n                        channel.send(data);\r\n                    });\r\n                });\r\n            }\r\n        };\r\n\r\n        this.uuid = connection.userid;\r\n\r\n        this.getLocalConfig = function(remoteSdp, remoteUserId, userPreferences) {\r\n            if (!userPreferences) {\r\n                userPreferences = {};\r\n            }\r\n\r\n            return {\r\n                streamsToShare: userPreferences.streamsToShare || {},\r\n                rtcMultiConnection: connection,\r\n                connectionDescription: userPreferences.connectionDescription,\r\n                userid: remoteUserId,\r\n                localPeerSdpConstraints: userPreferences.localPeerSdpConstraints,\r\n                remotePeerSdpConstraints: userPreferences.remotePeerSdpConstraints,\r\n                dontGetRemoteStream: !!userPreferences.dontGetRemoteStream,\r\n                dontAttachLocalStream: !!userPreferences.dontAttachLocalStream,\r\n                renegotiatingPeer: !!userPreferences.renegotiatingPeer,\r\n                peerRef: userPreferences.peerRef,\r\n                channels: userPreferences.channels || [],\r\n                onLocalSdp: function(localSdp) {\r\n                    self.onNegotiationNeeded(localSdp, remoteUserId);\r\n                },\r\n                onLocalCandidate: function(localCandidate) {\r\n                    localCandidate = OnIceCandidateHandler.processCandidates(connection, localCandidate)\r\n                    if (localCandidate) {\r\n                        self.onNegotiationNeeded(localCandidate, remoteUserId);\r\n                    }\r\n                },\r\n                remoteSdp: remoteSdp,\r\n                onDataChannelMessage: function(message) {\r\n                    if (!connection.fbr && connection.enableFileSharing) initFileBufferReader();\r\n\r\n                    if (typeof message == 'string' || !connection.enableFileSharing) {\r\n                        self.onDataChannelMessage(message, remoteUserId);\r\n                        return;\r\n                    }\r\n\r\n                    var that = this;\r\n\r\n                    if (message instanceof ArrayBuffer || message instanceof DataView) {\r\n                        connection.fbr.convertToObject(message, function(object) {\r\n                            that.onDataChannelMessage(object);\r\n                        });\r\n                        return;\r\n                    }\r\n\r\n                    if (message.readyForNextChunk) {\r\n                        connection.fbr.getNextChunk(message, function(nextChunk, isLastChunk) {\r\n                            connection.peers[remoteUserId].channels.forEach(function(channel) {\r\n                                channel.send(nextChunk);\r\n                            });\r\n                        }, remoteUserId);\r\n                        return;\r\n                    }\r\n\r\n                    if (message.chunkMissing) {\r\n                        connection.fbr.chunkMissing(message);\r\n                        return;\r\n                    }\r\n\r\n                    connection.fbr.addChunk(message, function(promptNextChunk) {\r\n                        connection.peers[remoteUserId].peer.channel.send(promptNextChunk);\r\n                    });\r\n                },\r\n                onDataChannelError: function(error) {\r\n                    self.onDataChannelError(error, remoteUserId);\r\n                },\r\n                onDataChannelOpened: function(channel) {\r\n                    self.onDataChannelOpened(channel, remoteUserId);\r\n                },\r\n                onDataChannelClosed: function(event) {\r\n                    self.onDataChannelClosed(event, remoteUserId);\r\n                },\r\n                onRemoteStream: function(stream) {\r\n                    if (connection.peers[remoteUserId]) {\r\n                        connection.peers[remoteUserId].streams.push(stream);\r\n                    }\r\n\r\n                    self.onGettingRemoteMedia(stream, remoteUserId);\r\n                },\r\n                onRemoteStreamRemoved: function(stream) {\r\n                    self.onRemovingRemoteMedia(stream, remoteUserId);\r\n                },\r\n                onPeerStateChanged: function(states) {\r\n                    self.onPeerStateChanged(states);\r\n\r\n                    if (states.iceConnectionState === 'new') {\r\n                        self.onNegotiationStarted(remoteUserId, states);\r\n                    }\r\n\r\n                    if (states.iceConnectionState === 'connected') {\r\n                        self.onNegotiationCompleted(remoteUserId, states);\r\n                    }\r\n\r\n                    if (states.iceConnectionState.search(/closed|failed/gi) !== -1) {\r\n                        self.onUserLeft(remoteUserId);\r\n                        self.disconnectWith(remoteUserId);\r\n                    }\r\n                }\r\n            };\r\n        };\r\n\r\n        this.createNewPeer = function(remoteUserId, userPreferences) {\r\n            if (connection.maxParticipantsAllowed <= connection.getAllParticipants().length) {\r\n                return;\r\n            }\r\n\r\n            userPreferences = userPreferences || {};\r\n\r\n            if (connection.isInitiator && !!connection.session.audio && connection.session.audio === 'two-way' && !userPreferences.streamsToShare) {\r\n                userPreferences.isOneWay = false;\r\n                userPreferences.isDataOnly = false;\r\n                userPreferences.session = connection.session;\r\n            }\r\n\r\n            if (!userPreferences.isOneWay && !userPreferences.isDataOnly) {\r\n                userPreferences.isOneWay = true;\r\n                this.onNegotiationNeeded({\r\n                    enableMedia: true,\r\n                    userPreferences: userPreferences\r\n                }, remoteUserId);\r\n                return;\r\n            }\r\n\r\n            userPreferences = connection.setUserPreferences(userPreferences, remoteUserId);\r\n            var localConfig = this.getLocalConfig(null, remoteUserId, userPreferences);\r\n            connection.peers[remoteUserId] = new PeerInitiator(localConfig);\r\n        };\r\n\r\n        this.createAnsweringPeer = function(remoteSdp, remoteUserId, userPreferences) {\r\n            userPreferences = connection.setUserPreferences(userPreferences || {}, remoteUserId);\r\n\r\n            var localConfig = this.getLocalConfig(remoteSdp, remoteUserId, userPreferences);\r\n            connection.peers[remoteUserId] = new PeerInitiator(localConfig);\r\n        };\r\n\r\n        this.renegotiatePeer = function(remoteUserId, userPreferences, remoteSdp) {\r\n            if (!connection.peers[remoteUserId]) {\r\n                if (connection.enableLogs) {\r\n                    console.error('Peer (' + remoteUserId + ') does not exist. Renegotiation skipped.');\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (!userPreferences) {\r\n                userPreferences = {};\r\n            }\r\n\r\n            userPreferences.renegotiatingPeer = true;\r\n            userPreferences.peerRef = connection.peers[remoteUserId].peer;\r\n            userPreferences.channels = connection.peers[remoteUserId].channels;\r\n\r\n            var localConfig = this.getLocalConfig(remoteSdp, remoteUserId, userPreferences);\r\n\r\n            connection.peers[remoteUserId] = new PeerInitiator(localConfig);\r\n        };\r\n\r\n        this.replaceTrack = function(track, remoteUserId, isVideoTrack) {\r\n            if (!connection.peers[remoteUserId]) {\r\n                throw 'This peer (' + remoteUserId + ') does not exist.';\r\n            }\r\n\r\n            var peer = connection.peers[remoteUserId].peer;\r\n\r\n            if (!!peer.getSenders && typeof peer.getSenders === 'function' && peer.getSenders().length) {\r\n                peer.getSenders().forEach(function(rtpSender) {\r\n                    if (isVideoTrack && rtpSender.track.kind === 'video') {\r\n                        connection.peers[remoteUserId].peer.lastVideoTrack = rtpSender.track;\r\n                        rtpSender.replaceTrack(track);\r\n                    }\r\n\r\n                    if (!isVideoTrack && rtpSender.track.kind === 'audio') {\r\n                        connection.peers[remoteUserId].peer.lastAudioTrack = rtpSender.track;\r\n                        rtpSender.replaceTrack(track);\r\n                    }\r\n                });\r\n                return;\r\n            }\r\n\r\n            console.warn('RTPSender.replaceTrack is NOT supported.');\r\n            this.renegotiatePeer(remoteUserId);\r\n        };\r\n\r\n        this.onNegotiationNeeded = function(message, remoteUserId) {};\r\n        this.addNegotiatedMessage = function(message, remoteUserId) {\r\n            if (message.type && message.sdp) {\r\n                if (message.type == 'answer') {\r\n                    if (connection.peers[remoteUserId]) {\r\n                        connection.peers[remoteUserId].addRemoteSdp(message);\r\n                    }\r\n                }\r\n\r\n                if (message.type == 'offer') {\r\n                    if (message.renegotiatingPeer) {\r\n                        this.renegotiatePeer(remoteUserId, null, message);\r\n                    } else {\r\n                        this.createAnsweringPeer(message, remoteUserId);\r\n                    }\r\n                }\r\n\r\n                if (connection.enableLogs) {\r\n                    console.log('Remote peer\\'s sdp:', message.sdp);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (message.candidate) {\r\n                if (connection.peers[remoteUserId]) {\r\n                    connection.peers[remoteUserId].addRemoteCandidate(message);\r\n                }\r\n\r\n                if (connection.enableLogs) {\r\n                    console.log('Remote peer\\'s candidate pairs:', message.candidate);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (message.enableMedia) {\r\n                connection.session = message.userPreferences.session || connection.session;\r\n\r\n                if (connection.session.oneway && connection.attachStreams.length) {\r\n                    connection.attachStreams = [];\r\n                }\r\n\r\n                if (message.userPreferences.isDataOnly && connection.attachStreams.length) {\r\n                    connection.attachStreams.length = [];\r\n                }\r\n\r\n                var streamsToShare = {};\r\n                connection.attachStreams.forEach(function(stream) {\r\n                    streamsToShare[stream.streamid] = {\r\n                        isAudio: !!stream.isAudio,\r\n                        isVideo: !!stream.isVideo,\r\n                        isScreen: !!stream.isScreen\r\n                    };\r\n                });\r\n                message.userPreferences.streamsToShare = streamsToShare;\r\n\r\n                self.onNegotiationNeeded({\r\n                    readyForOffer: true,\r\n                    userPreferences: message.userPreferences\r\n                }, remoteUserId);\r\n            }\r\n\r\n            if (message.readyForOffer) {\r\n                connection.onReadyForOffer(remoteUserId, message.userPreferences);\r\n            }\r\n\r\n            function cb(stream) {\r\n                gumCallback(stream, message, remoteUserId);\r\n            }\r\n        };\r\n\r\n        function gumCallback(stream, message, remoteUserId) {\r\n            var streamsToShare = {};\r\n            connection.attachStreams.forEach(function(stream) {\r\n                streamsToShare[stream.streamid] = {\r\n                    isAudio: !!stream.isAudio,\r\n                    isVideo: !!stream.isVideo,\r\n                    isScreen: !!stream.isScreen\r\n                };\r\n            });\r\n            message.userPreferences.streamsToShare = streamsToShare;\r\n\r\n            self.onNegotiationNeeded({\r\n                readyForOffer: true,\r\n                userPreferences: message.userPreferences\r\n            }, remoteUserId);\r\n        }\r\n\r\n        this.onGettingRemoteMedia = function(stream, remoteUserId) {};\r\n        this.onRemovingRemoteMedia = function(stream, remoteUserId) {};\r\n        this.onGettingLocalMedia = function(localStream) {};\r\n        this.onLocalMediaError = function(error, constraints) {\r\n            connection.onMediaError(error, constraints);\r\n        };\r\n\r\n        function initFileBufferReader() {\r\n            connection.fbr = new FileBufferReader();\r\n            connection.fbr.onProgress = function(chunk) {\r\n                connection.onFileProgress(chunk);\r\n            };\r\n            connection.fbr.onBegin = function(file) {\r\n                connection.onFileStart(file);\r\n            };\r\n            connection.fbr.onEnd = function(file) {\r\n                connection.onFileEnd(file);\r\n            };\r\n        }\r\n\r\n        this.shareFile = function(file, remoteUserId) {\r\n            initFileBufferReader();\r\n\r\n            connection.fbr.readAsArrayBuffer(file, function(uuid) {\r\n                var arrayOfUsers = connection.getAllParticipants();\r\n\r\n                if (remoteUserId) {\r\n                    arrayOfUsers = [remoteUserId];\r\n                }\r\n\r\n                arrayOfUsers.forEach(function(participant) {\r\n                    connection.fbr.getNextChunk(uuid, function(nextChunk) {\r\n                        connection.peers[participant].channels.forEach(function(channel) {\r\n                            channel.send(nextChunk);\r\n                        });\r\n                    }, participant);\r\n                });\r\n            }, {\r\n                userid: connection.userid,\r\n                // extra: connection.extra,\r\n                chunkSize: DetectRTC.browser.name === 'Firefox' ? 15 * 1000 : connection.chunkSize || 0\r\n            });\r\n        };\r\n\r\n        if (typeof 'TextReceiver' !== 'undefined') {\r\n            var textReceiver = new TextReceiver(connection);\r\n        }\r\n\r\n        this.onDataChannelMessage = function(message, remoteUserId) {\r\n            textReceiver.receive(JSON.parse(message), remoteUserId, connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {});\r\n        };\r\n\r\n        this.onDataChannelClosed = function(event, remoteUserId) {\r\n            event.userid = remoteUserId;\r\n            event.extra = connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {};\r\n            connection.onclose(event);\r\n        };\r\n\r\n        this.onDataChannelError = function(error, remoteUserId) {\r\n            error.userid = remoteUserId;\r\n            event.extra = connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {};\r\n            connection.onerror(error);\r\n        };\r\n\r\n        this.onDataChannelOpened = function(channel, remoteUserId) {\r\n            // keep last channel only; we are not expecting parallel/channels channels\r\n            if (connection.peers[remoteUserId].channels.length) {\r\n                connection.peers[remoteUserId].channels = [channel];\r\n                return;\r\n            }\r\n\r\n            connection.peers[remoteUserId].channels.push(channel);\r\n            connection.onopen({\r\n                userid: remoteUserId,\r\n                extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {},\r\n                channel: channel\r\n            });\r\n        };\r\n\r\n        this.onPeerStateChanged = function(state) {\r\n            connection.onPeerStateChanged(state);\r\n        };\r\n\r\n        this.onNegotiationStarted = function(remoteUserId, states) {};\r\n        this.onNegotiationCompleted = function(remoteUserId, states) {};\r\n\r\n        this.getRemoteStreams = function(remoteUserId) {\r\n            remoteUserId = remoteUserId || connection.peers.getAllParticipants()[0];\r\n            return connection.peers[remoteUserId] ? connection.peers[remoteUserId].streams : [];\r\n        };\r\n    }\r\n\r\n    'use strict';\r\n\r\n    // Last Updated On: 2019-01-10 5:32:55 AM UTC\r\n\r\n    // ________________\r\n    // DetectRTC v1.3.9\r\n\r\n    // Open-Sourced: https://github.com/muaz-khan/DetectRTC\r\n\r\n    // --------------------------------------------------\r\n    // Muaz Khan     - www.MuazKhan.com\r\n    // MIT License   - www.WebRTC-Experiment.com/licence\r\n    // --------------------------------------------------\r\n\r\n    (function() {\r\n\r\n        var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n        var isNodejs = typeof process === 'object' && typeof process.versions === 'object' && process.versions.node && /*node-process*/ !process.browser;\r\n        if (isNodejs) {\r\n            var version = process.versions.node.toString().replace('v', '');\r\n            browserFakeUserAgent = 'Nodejs/' + version + ' (NodeOS) AppleWebKit/' + version + ' (KHTML, like Gecko) Nodejs/' + version + ' Nodejs/' + version\r\n        }\r\n\r\n        (function(that) {\r\n            if (typeof window !== 'undefined') {\r\n                return;\r\n            }\r\n\r\n            if (typeof window === 'undefined' && typeof global !== 'undefined') {\r\n                global.navigator = {\r\n                    userAgent: browserFakeUserAgent,\r\n                    getUserMedia: function() {}\r\n                };\r\n\r\n                /*global window:true */\r\n                that.window = global;\r\n            } else if (typeof window === 'undefined') {\r\n                // window = this;\r\n            }\r\n\r\n            if (typeof location === 'undefined') {\r\n                /*global location:true */\r\n                that.location = {\r\n                    protocol: 'file:',\r\n                    href: '',\r\n                    hash: ''\r\n                };\r\n            }\r\n\r\n            if (typeof screen === 'undefined') {\r\n                /*global screen:true */\r\n                that.screen = {\r\n                    width: 0,\r\n                    height: 0\r\n                };\r\n            }\r\n        })(typeof global !== 'undefined' ? global : window);\r\n\r\n        /*global navigator:true */\r\n        var navigator = window.navigator;\r\n\r\n        if (typeof navigator !== 'undefined') {\r\n            if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n                navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n            }\r\n\r\n            if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n                navigator.getUserMedia = navigator.mozGetUserMedia;\r\n            }\r\n        } else {\r\n            navigator = {\r\n                getUserMedia: function() {},\r\n                userAgent: browserFakeUserAgent\r\n            };\r\n        }\r\n\r\n        var isMobileDevice = !!(/Android|webOS|iPhone|iPad|iPod|BB10|BlackBerry|IEMobile|Opera Mini|Mobile|mobile/i.test(navigator.userAgent || ''));\r\n\r\n        var isEdge = navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveOrOpenBlob || !!navigator.msSaveBlob);\r\n\r\n        var isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\r\n        var isFirefox = typeof window.InstallTrigger !== 'undefined';\r\n        var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n        var isChrome = !!window.chrome && !isOpera;\r\n        var isIE = typeof document !== 'undefined' && !!document.documentMode && !isEdge;\r\n\r\n        // this one can also be used:\r\n        // https://www.websocket.org/js/stuff.js (DetectBrowser.js)\r\n\r\n        function getBrowserInfo() {\r\n            var nVer = navigator.appVersion;\r\n            var nAgt = navigator.userAgent;\r\n            var browserName = navigator.appName;\r\n            var fullVersion = '' + parseFloat(navigator.appVersion);\r\n            var majorVersion = parseInt(navigator.appVersion, 10);\r\n            var nameOffset, verOffset, ix;\r\n\r\n            // both and safri and chrome has same userAgent\r\n            if (isSafari && !isChrome && nAgt.indexOf('CriOS') !== -1) {\r\n                isSafari = false;\r\n                isChrome = true;\r\n            }\r\n\r\n            // In Opera, the true version is after 'Opera' or after 'Version'\r\n            if (isOpera) {\r\n                browserName = 'Opera';\r\n                try {\r\n                    fullVersion = navigator.userAgent.split('OPR/')[1].split(' ')[0];\r\n                    majorVersion = fullVersion.split('.')[0];\r\n                } catch (e) {\r\n                    fullVersion = '0.0.0.0';\r\n                    majorVersion = 0;\r\n                }\r\n            }\r\n            // In MSIE version <=10, the true version is after 'MSIE' in userAgent\r\n            // In IE 11, look for the string after 'rv:'\r\n            else if (isIE) {\r\n                verOffset = nAgt.indexOf('rv:');\r\n                if (verOffset > 0) { //IE 11\r\n                    fullVersion = nAgt.substring(verOffset + 3);\r\n                } else { //IE 10 or earlier\r\n                    verOffset = nAgt.indexOf('MSIE');\r\n                    fullVersion = nAgt.substring(verOffset + 5);\r\n                }\r\n                browserName = 'IE';\r\n            }\r\n            // In Chrome, the true version is after 'Chrome' \r\n            else if (isChrome) {\r\n                verOffset = nAgt.indexOf('Chrome');\r\n                browserName = 'Chrome';\r\n                fullVersion = nAgt.substring(verOffset + 7);\r\n            }\r\n            // In Safari, the true version is after 'Safari' or after 'Version' \r\n            else if (isSafari) {\r\n                verOffset = nAgt.indexOf('Safari');\r\n\r\n                browserName = 'Safari';\r\n                fullVersion = nAgt.substring(verOffset + 7);\r\n\r\n                if ((verOffset = nAgt.indexOf('Version')) !== -1) {\r\n                    fullVersion = nAgt.substring(verOffset + 8);\r\n                }\r\n\r\n                if (navigator.userAgent.indexOf('Version/') !== -1) {\r\n                    fullVersion = navigator.userAgent.split('Version/')[1].split(' ')[0];\r\n                }\r\n            }\r\n            // In Firefox, the true version is after 'Firefox' \r\n            else if (isFirefox) {\r\n                verOffset = nAgt.indexOf('Firefox');\r\n                browserName = 'Firefox';\r\n                fullVersion = nAgt.substring(verOffset + 8);\r\n            }\r\n\r\n            // In most other browsers, 'name/version' is at the end of userAgent \r\n            else if ((nameOffset = nAgt.lastIndexOf(' ') + 1) < (verOffset = nAgt.lastIndexOf('/'))) {\r\n                browserName = nAgt.substring(nameOffset, verOffset);\r\n                fullVersion = nAgt.substring(verOffset + 1);\r\n\r\n                if (browserName.toLowerCase() === browserName.toUpperCase()) {\r\n                    browserName = navigator.appName;\r\n                }\r\n            }\r\n\r\n            if (isEdge) {\r\n                browserName = 'Edge';\r\n                fullVersion = navigator.userAgent.split('Edge/')[1];\r\n                // fullVersion = parseInt(navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)[2], 10).toString();\r\n            }\r\n\r\n            // trim the fullVersion string at semicolon/space/bracket if present\r\n            if ((ix = fullVersion.search(/[; \\)]/)) !== -1) {\r\n                fullVersion = fullVersion.substring(0, ix);\r\n            }\r\n\r\n            majorVersion = parseInt('' + fullVersion, 10);\r\n\r\n            if (isNaN(majorVersion)) {\r\n                fullVersion = '' + parseFloat(navigator.appVersion);\r\n                majorVersion = parseInt(navigator.appVersion, 10);\r\n            }\r\n\r\n            return {\r\n                fullVersion: fullVersion,\r\n                version: majorVersion,\r\n                name: browserName,\r\n                isPrivateBrowsing: false\r\n            };\r\n        }\r\n\r\n        // via: https://gist.github.com/cou929/7973956\r\n\r\n        function retry(isDone, next) {\r\n            var currentTrial = 0,\r\n                maxRetry = 50,\r\n                interval = 10,\r\n                isTimeout = false;\r\n            var id = window.setInterval(\r\n                function() {\r\n                    if (isDone()) {\r\n                        window.clearInterval(id);\r\n                        next(isTimeout);\r\n                    }\r\n                    if (currentTrial++ > maxRetry) {\r\n                        window.clearInterval(id);\r\n                        isTimeout = true;\r\n                        next(isTimeout);\r\n                    }\r\n                },\r\n                10\r\n            );\r\n        }\r\n\r\n        function isIE10OrLater(userAgent) {\r\n            var ua = userAgent.toLowerCase();\r\n            if (ua.indexOf('msie') === 0 && ua.indexOf('trident') === 0) {\r\n                return false;\r\n            }\r\n            var match = /(?:msie|rv:)\\s?([\\d\\.]+)/.exec(ua);\r\n            if (match && parseInt(match[1], 10) >= 10) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        function detectPrivateMode(callback) {\r\n            var isPrivate;\r\n\r\n            try {\r\n\r\n                if (window.webkitRequestFileSystem) {\r\n                    window.webkitRequestFileSystem(\r\n                        window.TEMPORARY, 1,\r\n                        function() {\r\n                            isPrivate = false;\r\n                        },\r\n                        function(e) {\r\n                            isPrivate = true;\r\n                        }\r\n                    );\r\n                } else if (window.indexedDB && /Firefox/.test(window.navigator.userAgent)) {\r\n                    var db;\r\n                    try {\r\n                        db = window.indexedDB.open('test');\r\n                        db.onerror = function() {\r\n                            return true;\r\n                        };\r\n                    } catch (e) {\r\n                        isPrivate = true;\r\n                    }\r\n\r\n                    if (typeof isPrivate === 'undefined') {\r\n                        retry(\r\n                            function isDone() {\r\n                                return db.readyState === 'done' ? true : false;\r\n                            },\r\n                            function next(isTimeout) {\r\n                                if (!isTimeout) {\r\n                                    isPrivate = db.result ? false : true;\r\n                                }\r\n                            }\r\n                        );\r\n                    }\r\n                } else if (isIE10OrLater(window.navigator.userAgent)) {\r\n                    isPrivate = false;\r\n                    try {\r\n                        if (!window.indexedDB) {\r\n                            isPrivate = true;\r\n                        }\r\n                    } catch (e) {\r\n                        isPrivate = true;\r\n                    }\r\n                } else if (window.localStorage && /Safari/.test(window.navigator.userAgent)) {\r\n                    try {\r\n                        window.localStorage.setItem('test', 1);\r\n                    } catch (e) {\r\n                        isPrivate = true;\r\n                    }\r\n\r\n                    if (typeof isPrivate === 'undefined') {\r\n                        isPrivate = false;\r\n                        window.localStorage.removeItem('test');\r\n                    }\r\n                }\r\n\r\n            } catch (e) {\r\n                isPrivate = false;\r\n            }\r\n\r\n            retry(\r\n                function isDone() {\r\n                    return typeof isPrivate !== 'undefined' ? true : false;\r\n                },\r\n                function next(isTimeout) {\r\n                    callback(isPrivate);\r\n                }\r\n            );\r\n        }\r\n\r\n        var isMobile = {\r\n            Android: function() {\r\n                return navigator.userAgent.match(/Android/i);\r\n            },\r\n            BlackBerry: function() {\r\n                return navigator.userAgent.match(/BlackBerry|BB10/i);\r\n            },\r\n            iOS: function() {\r\n                return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n            },\r\n            Opera: function() {\r\n                return navigator.userAgent.match(/Opera Mini/i);\r\n            },\r\n            Windows: function() {\r\n                return navigator.userAgent.match(/IEMobile/i);\r\n            },\r\n            any: function() {\r\n                return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\r\n            },\r\n            getOsName: function() {\r\n                var osName = 'Unknown OS';\r\n                if (isMobile.Android()) {\r\n                    osName = 'Android';\r\n                }\r\n\r\n                if (isMobile.BlackBerry()) {\r\n                    osName = 'BlackBerry';\r\n                }\r\n\r\n                if (isMobile.iOS()) {\r\n                    osName = 'iOS';\r\n                }\r\n\r\n                if (isMobile.Opera()) {\r\n                    osName = 'Opera Mini';\r\n                }\r\n\r\n                if (isMobile.Windows()) {\r\n                    osName = 'Windows';\r\n                }\r\n\r\n                return osName;\r\n            }\r\n        };\r\n\r\n        // via: http://jsfiddle.net/ChristianL/AVyND/\r\n        function detectDesktopOS() {\r\n            var unknown = '-';\r\n\r\n            var nVer = navigator.appVersion;\r\n            var nAgt = navigator.userAgent;\r\n\r\n            var os = unknown;\r\n            var clientStrings = [{\r\n                s: 'Windows 10',\r\n                r: /(Windows 10.0|Windows NT 10.0)/\r\n            }, {\r\n                s: 'Windows 8.1',\r\n                r: /(Windows 8.1|Windows NT 6.3)/\r\n            }, {\r\n                s: 'Windows 8',\r\n                r: /(Windows 8|Windows NT 6.2)/\r\n            }, {\r\n                s: 'Windows 7',\r\n                r: /(Windows 7|Windows NT 6.1)/\r\n            }, {\r\n                s: 'Windows Vista',\r\n                r: /Windows NT 6.0/\r\n            }, {\r\n                s: 'Windows Server 2003',\r\n                r: /Windows NT 5.2/\r\n            }, {\r\n                s: 'Windows XP',\r\n                r: /(Windows NT 5.1|Windows XP)/\r\n            }, {\r\n                s: 'Windows 2000',\r\n                r: /(Windows NT 5.0|Windows 2000)/\r\n            }, {\r\n                s: 'Windows ME',\r\n                r: /(Win 9x 4.90|Windows ME)/\r\n            }, {\r\n                s: 'Windows 98',\r\n                r: /(Windows 98|Win98)/\r\n            }, {\r\n                s: 'Windows 95',\r\n                r: /(Windows 95|Win95|Windows_95)/\r\n            }, {\r\n                s: 'Windows NT 4.0',\r\n                r: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/\r\n            }, {\r\n                s: 'Windows CE',\r\n                r: /Windows CE/\r\n            }, {\r\n                s: 'Windows 3.11',\r\n                r: /Win16/\r\n            }, {\r\n                s: 'Android',\r\n                r: /Android/\r\n            }, {\r\n                s: 'Open BSD',\r\n                r: /OpenBSD/\r\n            }, {\r\n                s: 'Sun OS',\r\n                r: /SunOS/\r\n            }, {\r\n                s: 'Linux',\r\n                r: /(Linux|X11)/\r\n            }, {\r\n                s: 'iOS',\r\n                r: /(iPhone|iPad|iPod)/\r\n            }, {\r\n                s: 'Mac OS X',\r\n                r: /Mac OS X/\r\n            }, {\r\n                s: 'Mac OS',\r\n                r: /(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/\r\n            }, {\r\n                s: 'QNX',\r\n                r: /QNX/\r\n            }, {\r\n                s: 'UNIX',\r\n                r: /UNIX/\r\n            }, {\r\n                s: 'BeOS',\r\n                r: /BeOS/\r\n            }, {\r\n                s: 'OS/2',\r\n                r: /OS\\/2/\r\n            }, {\r\n                s: 'Search Bot',\r\n                r: /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\\/Teoma|ia_archiver)/\r\n            }];\r\n            for (var i = 0, cs; cs = clientStrings[i]; i++) {\r\n                if (cs.r.test(nAgt)) {\r\n                    os = cs.s;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            var osVersion = unknown;\r\n\r\n            if (/Windows/.test(os)) {\r\n                if (/Windows (.*)/.test(os)) {\r\n                    osVersion = /Windows (.*)/.exec(os)[1];\r\n                }\r\n                os = 'Windows';\r\n            }\r\n\r\n            switch (os) {\r\n                case 'Mac OS X':\r\n                    if (/Mac OS X (10[\\.\\_\\d]+)/.test(nAgt)) {\r\n                        osVersion = /Mac OS X (10[\\.\\_\\d]+)/.exec(nAgt)[1];\r\n                    }\r\n                    break;\r\n                case 'Android':\r\n                    if (/Android ([\\.\\_\\d]+)/.test(nAgt)) {\r\n                        osVersion = /Android ([\\.\\_\\d]+)/.exec(nAgt)[1];\r\n                    }\r\n                    break;\r\n                case 'iOS':\r\n                    if (/OS (\\d+)_(\\d+)_?(\\d+)?/.test(nAgt)) {\r\n                        osVersion = /OS (\\d+)_(\\d+)_?(\\d+)?/.exec(nVer);\r\n                        osVersion = osVersion[1] + '.' + osVersion[2] + '.' + (osVersion[3] | 0);\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            return {\r\n                osName: os,\r\n                osVersion: osVersion\r\n            };\r\n        }\r\n\r\n        var osName = 'Unknown OS';\r\n        var osVersion = 'Unknown OS Version';\r\n\r\n        function getAndroidVersion(ua) {\r\n            ua = (ua || navigator.userAgent).toLowerCase();\r\n            var match = ua.match(/android\\s([0-9\\.]*)/);\r\n            return match ? match[1] : false;\r\n        }\r\n\r\n        var osInfo = detectDesktopOS();\r\n\r\n        if (osInfo && osInfo.osName && osInfo.osName != '-') {\r\n            osName = osInfo.osName;\r\n            osVersion = osInfo.osVersion;\r\n        } else if (isMobile.any()) {\r\n            osName = isMobile.getOsName();\r\n\r\n            if (osName == 'Android') {\r\n                osVersion = getAndroidVersion();\r\n            }\r\n        }\r\n\r\n        var isNodejs = typeof process === 'object' && typeof process.versions === 'object' && process.versions.node;\r\n\r\n        if (osName === 'Unknown OS' && isNodejs) {\r\n            osName = 'Nodejs';\r\n            osVersion = process.versions.node.toString().replace('v', '');\r\n        }\r\n\r\n        var isCanvasSupportsStreamCapturing = false;\r\n        var isVideoSupportsStreamCapturing = false;\r\n        ['captureStream', 'mozCaptureStream', 'webkitCaptureStream'].forEach(function(item) {\r\n            if (typeof document === 'undefined' || typeof document.createElement !== 'function') {\r\n                return;\r\n            }\r\n\r\n            if (!isCanvasSupportsStreamCapturing && item in document.createElement('canvas')) {\r\n                isCanvasSupportsStreamCapturing = true;\r\n            }\r\n\r\n            if (!isVideoSupportsStreamCapturing && item in document.createElement('video')) {\r\n                isVideoSupportsStreamCapturing = true;\r\n            }\r\n        });\r\n\r\n        var regexIpv4Local = /^(192\\.168\\.|169\\.254\\.|10\\.|172\\.(1[6-9]|2\\d|3[01]))/,\r\n            regexIpv4 = /([0-9]{1,3}(\\.[0-9]{1,3}){3})/,\r\n            regexIpv6 = /[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7}/;\r\n\r\n        // via: https://github.com/diafygi/webrtc-ips\r\n        function DetectLocalIPAddress(callback, stream) {\r\n            if (!DetectRTC.isWebRTCSupported) {\r\n                return;\r\n            }\r\n\r\n            var isPublic = true,\r\n                isIpv4 = true;\r\n            getIPs(function(ip) {\r\n                if (!ip) {\r\n                    callback(); // Pass nothing to tell that ICE-gathering-ended\r\n                } else if (ip.match(regexIpv4Local)) {\r\n                    isPublic = false;\r\n                    callback('Local: ' + ip, isPublic, isIpv4);\r\n                } else if (ip.match(regexIpv6)) { //via https://ourcodeworld.com/articles/read/257/how-to-get-the-client-ip-address-with-javascript-only\r\n                    isIpv4 = false;\r\n                    callback('Public: ' + ip, isPublic, isIpv4);\r\n                } else {\r\n                    callback('Public: ' + ip, isPublic, isIpv4);\r\n                }\r\n            }, stream);\r\n        }\r\n\r\n        function getIPs(callback, stream) {\r\n            if (typeof document === 'undefined' || typeof document.getElementById !== 'function') {\r\n                return;\r\n            }\r\n\r\n            var ipDuplicates = {};\r\n\r\n            var RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\n\r\n            if (!RTCPeerConnection) {\r\n                var iframe = document.getElementById('iframe');\r\n                if (!iframe) {\r\n                    return;\r\n                }\r\n                var win = iframe.contentWindow;\r\n                RTCPeerConnection = win.RTCPeerConnection || win.mozRTCPeerConnection || win.webkitRTCPeerConnection;\r\n            }\r\n\r\n            if (!RTCPeerConnection) {\r\n                return;\r\n            }\r\n\r\n            var peerConfig = null;\r\n\r\n            if (DetectRTC.browser === 'Chrome' && DetectRTC.browser.version < 58) {\r\n                // todo: add support for older Opera\r\n                peerConfig = {\r\n                    optional: [{\r\n                        RtpDataChannels: true\r\n                    }]\r\n                };\r\n            }\r\n\r\n            var servers = {\r\n                iceServers: [{\r\n                    urls: 'stun:stun.l.google.com:19302'\r\n                }]\r\n            };\r\n\r\n            var pc = new RTCPeerConnection(servers, peerConfig);\r\n\r\n            if (stream) {\r\n                if (pc.addStream) {\r\n                    pc.addStream(stream);\r\n                } else if (pc.addTrack && stream.getTracks()[0]) {\r\n                    pc.addTrack(stream.getTracks()[0], stream);\r\n                }\r\n            }\r\n\r\n            function handleCandidate(candidate) {\r\n                if (!candidate) {\r\n                    callback(); // Pass nothing to tell that ICE-gathering-ended\r\n                    return;\r\n                }\r\n\r\n                var match = regexIpv4.exec(candidate);\r\n                if (!match) {\r\n                    return;\r\n                }\r\n                var ipAddress = match[1];\r\n                var isPublic = (candidate.match(regexIpv4Local)),\r\n                    isIpv4 = true;\r\n\r\n                if (ipDuplicates[ipAddress] === undefined) {\r\n                    callback(ipAddress, isPublic, isIpv4);\r\n                }\r\n\r\n                ipDuplicates[ipAddress] = true;\r\n            }\r\n\r\n            // listen for candidate events\r\n            pc.onicecandidate = function(event) {\r\n                if (event.candidate && event.candidate.candidate) {\r\n                    handleCandidate(event.candidate.candidate);\r\n                } else {\r\n                    handleCandidate(); // Pass nothing to tell that ICE-gathering-ended\r\n                }\r\n            };\r\n\r\n            // create data channel\r\n            if (!stream) {\r\n                try {\r\n                    pc.createDataChannel('sctp', {});\r\n                } catch (e) {}\r\n            }\r\n\r\n            // create an offer sdp\r\n            if (DetectRTC.isPromisesSupported) {\r\n                pc.createOffer().then(function(result) {\r\n                    pc.setLocalDescription(result).then(afterCreateOffer);\r\n                });\r\n            } else {\r\n                pc.createOffer(function(result) {\r\n                    pc.setLocalDescription(result, afterCreateOffer, function() {});\r\n                }, function() {});\r\n            }\r\n\r\n            function afterCreateOffer() {\r\n                var lines = pc.localDescription.sdp.split('\\n');\r\n\r\n                lines.forEach(function(line) {\r\n                    if (line && line.indexOf('a=candidate:') === 0) {\r\n                        handleCandidate(line);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        var MediaDevices = [];\r\n\r\n        var audioInputDevices = [];\r\n        var audioOutputDevices = [];\r\n        var videoInputDevices = [];\r\n\r\n        if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\r\n            // Firefox 38+ seems having support of enumerateDevices\r\n            // Thanks @xdumaine/enumerateDevices\r\n            navigator.enumerateDevices = function(callback) {\r\n                var enumerateDevices = navigator.mediaDevices.enumerateDevices();\r\n                if (enumerateDevices && enumerateDevices.then) {\r\n                    navigator.mediaDevices.enumerateDevices().then(callback).catch(function() {\r\n                        callback([]);\r\n                    });\r\n                } else {\r\n                    callback([]);\r\n                }\r\n            };\r\n        }\r\n\r\n        // Media Devices detection\r\n        var canEnumerate = false;\r\n\r\n        /*global MediaStreamTrack:true */\r\n        if (typeof MediaStreamTrack !== 'undefined' && 'getSources' in MediaStreamTrack) {\r\n            canEnumerate = true;\r\n        } else if (navigator.mediaDevices && !!navigator.mediaDevices.enumerateDevices) {\r\n            canEnumerate = true;\r\n        }\r\n\r\n        var hasMicrophone = false;\r\n        var hasSpeakers = false;\r\n        var hasWebcam = false;\r\n\r\n        var isWebsiteHasMicrophonePermissions = false;\r\n        var isWebsiteHasWebcamPermissions = false;\r\n\r\n        // http://dev.w3.org/2011/webrtc/editor/getusermedia.html#mediadevices\r\n        function checkDeviceSupport(callback) {\r\n            if (!canEnumerate) {\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (!navigator.enumerateDevices && window.MediaStreamTrack && window.MediaStreamTrack.getSources) {\r\n                navigator.enumerateDevices = window.MediaStreamTrack.getSources.bind(window.MediaStreamTrack);\r\n            }\r\n\r\n            if (!navigator.enumerateDevices && navigator.enumerateDevices) {\r\n                navigator.enumerateDevices = navigator.enumerateDevices.bind(navigator);\r\n            }\r\n\r\n            if (!navigator.enumerateDevices) {\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n                return;\r\n            }\r\n\r\n            MediaDevices = [];\r\n\r\n            audioInputDevices = [];\r\n            audioOutputDevices = [];\r\n            videoInputDevices = [];\r\n\r\n            hasMicrophone = false;\r\n            hasSpeakers = false;\r\n            hasWebcam = false;\r\n\r\n            isWebsiteHasMicrophonePermissions = false;\r\n            isWebsiteHasWebcamPermissions = false;\r\n\r\n            // to prevent duplication\r\n            var alreadyUsedDevices = {};\r\n\r\n            navigator.enumerateDevices(function(devices) {\r\n                devices.forEach(function(_device) {\r\n                    var device = {};\r\n                    for (var d in _device) {\r\n                        try {\r\n                            if (typeof _device[d] !== 'function') {\r\n                                device[d] = _device[d];\r\n                            }\r\n                        } catch (e) {}\r\n                    }\r\n\r\n                    if (alreadyUsedDevices[device.deviceId + device.label + device.kind]) {\r\n                        return;\r\n                    }\r\n\r\n                    // if it is MediaStreamTrack.getSources\r\n                    if (device.kind === 'audio') {\r\n                        device.kind = 'audioinput';\r\n                    }\r\n\r\n                    if (device.kind === 'video') {\r\n                        device.kind = 'videoinput';\r\n                    }\r\n\r\n                    if (!device.deviceId) {\r\n                        device.deviceId = device.id;\r\n                    }\r\n\r\n                    if (!device.id) {\r\n                        device.id = device.deviceId;\r\n                    }\r\n\r\n                    if (!device.label) {\r\n                        device.isCustomLabel = true;\r\n\r\n                        if (device.kind === 'videoinput') {\r\n                            device.label = 'Camera ' + (videoInputDevices.length + 1);\r\n                        } else if (device.kind === 'audioinput') {\r\n                            device.label = 'Microphone ' + (audioInputDevices.length + 1);\r\n                        } else if (device.kind === 'audiooutput') {\r\n                            device.label = 'Speaker ' + (audioOutputDevices.length + 1);\r\n                        } else {\r\n                            device.label = 'Please invoke getUserMedia once.';\r\n                        }\r\n\r\n                        if (typeof DetectRTC !== 'undefined' && DetectRTC.browser.isChrome && DetectRTC.browser.version >= 46 && !/^(https:|chrome-extension:)$/g.test(location.protocol || '')) {\r\n                            if (typeof document !== 'undefined' && typeof document.domain === 'string' && document.domain.search && document.domain.search(/localhost|127.0./g) === -1) {\r\n                                device.label = 'HTTPs is required to get label of this ' + device.kind + ' device.';\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // Firefox on Android still returns empty label\r\n                        if (device.kind === 'videoinput' && !isWebsiteHasWebcamPermissions) {\r\n                            isWebsiteHasWebcamPermissions = true;\r\n                        }\r\n\r\n                        if (device.kind === 'audioinput' && !isWebsiteHasMicrophonePermissions) {\r\n                            isWebsiteHasMicrophonePermissions = true;\r\n                        }\r\n                    }\r\n\r\n                    if (device.kind === 'audioinput') {\r\n                        hasMicrophone = true;\r\n\r\n                        if (audioInputDevices.indexOf(device) === -1) {\r\n                            audioInputDevices.push(device);\r\n                        }\r\n                    }\r\n\r\n                    if (device.kind === 'audiooutput') {\r\n                        hasSpeakers = true;\r\n\r\n                        if (audioOutputDevices.indexOf(device) === -1) {\r\n                            audioOutputDevices.push(device);\r\n                        }\r\n                    }\r\n\r\n                    if (device.kind === 'videoinput') {\r\n                        hasWebcam = true;\r\n\r\n                        if (videoInputDevices.indexOf(device) === -1) {\r\n                            videoInputDevices.push(device);\r\n                        }\r\n                    }\r\n\r\n                    // there is no 'videoouput' in the spec.\r\n                    MediaDevices.push(device);\r\n\r\n                    alreadyUsedDevices[device.deviceId + device.label + device.kind] = device;\r\n                });\r\n\r\n                if (typeof DetectRTC !== 'undefined') {\r\n                    // to sync latest outputs\r\n                    DetectRTC.MediaDevices = MediaDevices;\r\n                    DetectRTC.hasMicrophone = hasMicrophone;\r\n                    DetectRTC.hasSpeakers = hasSpeakers;\r\n                    DetectRTC.hasWebcam = hasWebcam;\r\n\r\n                    DetectRTC.isWebsiteHasWebcamPermissions = isWebsiteHasWebcamPermissions;\r\n                    DetectRTC.isWebsiteHasMicrophonePermissions = isWebsiteHasMicrophonePermissions;\r\n\r\n                    DetectRTC.audioInputDevices = audioInputDevices;\r\n                    DetectRTC.audioOutputDevices = audioOutputDevices;\r\n                    DetectRTC.videoInputDevices = videoInputDevices;\r\n                }\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            });\r\n        }\r\n\r\n        var DetectRTC = window.DetectRTC || {};\r\n\r\n        // ----------\r\n        // DetectRTC.browser.name || DetectRTC.browser.version || DetectRTC.browser.fullVersion\r\n        DetectRTC.browser = getBrowserInfo();\r\n\r\n        detectPrivateMode(function(isPrivateBrowsing) {\r\n            DetectRTC.browser.isPrivateBrowsing = !!isPrivateBrowsing;\r\n        });\r\n\r\n        // DetectRTC.isChrome || DetectRTC.isFirefox || DetectRTC.isEdge\r\n        DetectRTC.browser['is' + DetectRTC.browser.name] = true;\r\n\r\n        // -----------\r\n        DetectRTC.osName = osName;\r\n        DetectRTC.osVersion = osVersion;\r\n\r\n        var isNodeWebkit = typeof process === 'object' && typeof process.versions === 'object' && process.versions['node-webkit'];\r\n\r\n        // --------- Detect if system supports WebRTC 1.0 or WebRTC 1.1.\r\n        var isWebRTCSupported = false;\r\n        ['RTCPeerConnection', 'webkitRTCPeerConnection', 'mozRTCPeerConnection', 'RTCIceGatherer'].forEach(function(item) {\r\n            if (isWebRTCSupported) {\r\n                return;\r\n            }\r\n\r\n            if (item in window) {\r\n                isWebRTCSupported = true;\r\n            }\r\n        });\r\n        DetectRTC.isWebRTCSupported = isWebRTCSupported;\r\n\r\n        //-------\r\n        DetectRTC.isORTCSupported = typeof RTCIceGatherer !== 'undefined';\r\n\r\n        // --------- Detect if system supports screen capturing API\r\n        var isScreenCapturingSupported = false;\r\n        if (DetectRTC.browser.isChrome && DetectRTC.browser.version >= 35) {\r\n            isScreenCapturingSupported = true;\r\n        } else if (DetectRTC.browser.isFirefox && DetectRTC.browser.version >= 34) {\r\n            isScreenCapturingSupported = true;\r\n        } else if (DetectRTC.browser.isEdge && DetectRTC.browser.version >= 17) {\r\n            isScreenCapturingSupported = true; // navigator.getDisplayMedia\r\n        } else if (DetectRTC.osName === 'Android' && DetectRTC.browser.isChrome) {\r\n            isScreenCapturingSupported = true;\r\n        }\r\n\r\n        if (!/^(https:|chrome-extension:)$/g.test(location.protocol || '')) {\r\n            var isNonLocalHost = typeof document !== 'undefined' && typeof document.domain === 'string' && document.domain.search && document.domain.search(/localhost|127.0./g) === -1;\r\n            if (isNonLocalHost && (DetectRTC.browser.isChrome || DetectRTC.browser.isEdge || DetectRTC.browser.isOpera)) {\r\n                isScreenCapturingSupported = false;\r\n            } else if (DetectRTC.browser.isFirefox) {\r\n                isScreenCapturingSupported = false;\r\n            }\r\n        }\r\n        DetectRTC.isScreenCapturingSupported = isScreenCapturingSupported;\r\n\r\n        // --------- Detect if WebAudio API are supported\r\n        var webAudio = {\r\n            isSupported: false,\r\n            isCreateMediaStreamSourceSupported: false\r\n        };\r\n\r\n        ['AudioContext', 'webkitAudioContext', 'mozAudioContext', 'msAudioContext'].forEach(function(item) {\r\n            if (webAudio.isSupported) {\r\n                return;\r\n            }\r\n\r\n            if (item in window) {\r\n                webAudio.isSupported = true;\r\n\r\n                if (window[item] && 'createMediaStreamSource' in window[item].prototype) {\r\n                    webAudio.isCreateMediaStreamSourceSupported = true;\r\n                }\r\n            }\r\n        });\r\n        DetectRTC.isAudioContextSupported = webAudio.isSupported;\r\n        DetectRTC.isCreateMediaStreamSourceSupported = webAudio.isCreateMediaStreamSourceSupported;\r\n\r\n        // ---------- Detect if SCTP/RTP channels are supported.\r\n\r\n        var isRtpDataChannelsSupported = false;\r\n        if (DetectRTC.browser.isChrome && DetectRTC.browser.version > 31) {\r\n            isRtpDataChannelsSupported = true;\r\n        }\r\n        DetectRTC.isRtpDataChannelsSupported = isRtpDataChannelsSupported;\r\n\r\n        var isSCTPSupportd = false;\r\n        if (DetectRTC.browser.isFirefox && DetectRTC.browser.version > 28) {\r\n            isSCTPSupportd = true;\r\n        } else if (DetectRTC.browser.isChrome && DetectRTC.browser.version > 25) {\r\n            isSCTPSupportd = true;\r\n        } else if (DetectRTC.browser.isOpera && DetectRTC.browser.version >= 11) {\r\n            isSCTPSupportd = true;\r\n        }\r\n        DetectRTC.isSctpDataChannelsSupported = isSCTPSupportd;\r\n\r\n        // ---------\r\n\r\n        DetectRTC.isMobileDevice = isMobileDevice; // \"isMobileDevice\" boolean is defined in \"getBrowserInfo.js\"\r\n\r\n        // ------\r\n        var isGetUserMediaSupported = false;\r\n        if (navigator.getUserMedia) {\r\n            isGetUserMediaSupported = true;\r\n        } else if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n            isGetUserMediaSupported = true;\r\n        }\r\n\r\n        if (DetectRTC.browser.isChrome && DetectRTC.browser.version >= 46 && !/^(https:|chrome-extension:)$/g.test(location.protocol || '')) {\r\n            if (typeof document !== 'undefined' && typeof document.domain === 'string' && document.domain.search && document.domain.search(/localhost|127.0./g) === -1) {\r\n                isGetUserMediaSupported = 'Requires HTTPs';\r\n            }\r\n        }\r\n\r\n        if (DetectRTC.osName === 'Nodejs') {\r\n            isGetUserMediaSupported = false;\r\n        }\r\n        DetectRTC.isGetUserMediaSupported = isGetUserMediaSupported;\r\n\r\n        var displayResolution = '';\r\n        if (screen.width) {\r\n            var width = (screen.width) ? screen.width : '';\r\n            var height = (screen.height) ? screen.height : '';\r\n            displayResolution += '' + width + ' x ' + height;\r\n        }\r\n        DetectRTC.displayResolution = displayResolution;\r\n\r\n        function getAspectRatio(w, h) {\r\n            function gcd(a, b) {\r\n                return (b == 0) ? a : gcd(b, a % b);\r\n            }\r\n            var r = gcd(w, h);\r\n            return (w / r) / (h / r);\r\n        }\r\n\r\n        DetectRTC.displayAspectRatio = getAspectRatio(screen.width, screen.height).toFixed(2);\r\n\r\n        // ----------\r\n        DetectRTC.isCanvasSupportsStreamCapturing = isCanvasSupportsStreamCapturing;\r\n        DetectRTC.isVideoSupportsStreamCapturing = isVideoSupportsStreamCapturing;\r\n\r\n        if (DetectRTC.browser.name == 'Chrome' && DetectRTC.browser.version >= 53) {\r\n            if (!DetectRTC.isCanvasSupportsStreamCapturing) {\r\n                DetectRTC.isCanvasSupportsStreamCapturing = 'Requires chrome flag: enable-experimental-web-platform-features';\r\n            }\r\n\r\n            if (!DetectRTC.isVideoSupportsStreamCapturing) {\r\n                DetectRTC.isVideoSupportsStreamCapturing = 'Requires chrome flag: enable-experimental-web-platform-features';\r\n            }\r\n        }\r\n\r\n        // ------\r\n        DetectRTC.DetectLocalIPAddress = DetectLocalIPAddress;\r\n\r\n        DetectRTC.isWebSocketsSupported = 'WebSocket' in window && 2 === window.WebSocket.CLOSING;\r\n        DetectRTC.isWebSocketsBlocked = !DetectRTC.isWebSocketsSupported;\r\n\r\n        if (DetectRTC.osName === 'Nodejs') {\r\n            DetectRTC.isWebSocketsSupported = true;\r\n            DetectRTC.isWebSocketsBlocked = false;\r\n        }\r\n\r\n        DetectRTC.checkWebSocketsSupport = function(callback) {\r\n            callback = callback || function() {};\r\n            try {\r\n                var starttime;\r\n                var websocket = new WebSocket('wss://echo.websocket.org:443/');\r\n                websocket.onopen = function() {\r\n                    DetectRTC.isWebSocketsBlocked = false;\r\n                    starttime = (new Date).getTime();\r\n                    websocket.send('ping');\r\n                };\r\n                websocket.onmessage = function() {\r\n                    DetectRTC.WebsocketLatency = (new Date).getTime() - starttime + 'ms';\r\n                    callback();\r\n                    websocket.close();\r\n                    websocket = null;\r\n                };\r\n                websocket.onerror = function() {\r\n                    DetectRTC.isWebSocketsBlocked = true;\r\n                    callback();\r\n                };\r\n            } catch (e) {\r\n                DetectRTC.isWebSocketsBlocked = true;\r\n                callback();\r\n            }\r\n        };\r\n\r\n        // -------\r\n        DetectRTC.load = function(callback) {\r\n            callback = callback || function() {};\r\n            checkDeviceSupport(callback);\r\n        };\r\n\r\n        // check for microphone/camera support!\r\n        if (typeof checkDeviceSupport === 'function') {\r\n            // checkDeviceSupport();\r\n        }\r\n\r\n        if (typeof MediaDevices !== 'undefined') {\r\n            DetectRTC.MediaDevices = MediaDevices;\r\n        } else {\r\n            DetectRTC.MediaDevices = [];\r\n        }\r\n\r\n        DetectRTC.hasMicrophone = hasMicrophone;\r\n        DetectRTC.hasSpeakers = hasSpeakers;\r\n        DetectRTC.hasWebcam = hasWebcam;\r\n\r\n        DetectRTC.isWebsiteHasWebcamPermissions = isWebsiteHasWebcamPermissions;\r\n        DetectRTC.isWebsiteHasMicrophonePermissions = isWebsiteHasMicrophonePermissions;\r\n\r\n        DetectRTC.audioInputDevices = audioInputDevices;\r\n        DetectRTC.audioOutputDevices = audioOutputDevices;\r\n        DetectRTC.videoInputDevices = videoInputDevices;\r\n\r\n        // ------\r\n        var isSetSinkIdSupported = false;\r\n        if (typeof document !== 'undefined' && typeof document.createElement === 'function' && 'setSinkId' in document.createElement('video')) {\r\n            isSetSinkIdSupported = true;\r\n        }\r\n        DetectRTC.isSetSinkIdSupported = isSetSinkIdSupported;\r\n\r\n        // -----\r\n        var isRTPSenderReplaceTracksSupported = false;\r\n        if (DetectRTC.browser.isFirefox && typeof mozRTCPeerConnection !== 'undefined' /*&& DetectRTC.browser.version > 39*/ ) {\r\n            /*global mozRTCPeerConnection:true */\r\n            if ('getSenders' in mozRTCPeerConnection.prototype) {\r\n                isRTPSenderReplaceTracksSupported = true;\r\n            }\r\n        } else if (DetectRTC.browser.isChrome && typeof webkitRTCPeerConnection !== 'undefined') {\r\n            /*global webkitRTCPeerConnection:true */\r\n            if ('getSenders' in webkitRTCPeerConnection.prototype) {\r\n                isRTPSenderReplaceTracksSupported = true;\r\n            }\r\n        }\r\n        DetectRTC.isRTPSenderReplaceTracksSupported = isRTPSenderReplaceTracksSupported;\r\n\r\n        //------\r\n        var isRemoteStreamProcessingSupported = false;\r\n        if (DetectRTC.browser.isFirefox && DetectRTC.browser.version > 38) {\r\n            isRemoteStreamProcessingSupported = true;\r\n        }\r\n        DetectRTC.isRemoteStreamProcessingSupported = isRemoteStreamProcessingSupported;\r\n\r\n        //-------\r\n        var isApplyConstraintsSupported = false;\r\n\r\n        /*global MediaStreamTrack:true */\r\n        if (typeof MediaStreamTrack !== 'undefined' && 'applyConstraints' in MediaStreamTrack.prototype) {\r\n            isApplyConstraintsSupported = true;\r\n        }\r\n        DetectRTC.isApplyConstraintsSupported = isApplyConstraintsSupported;\r\n\r\n        //-------\r\n        var isMultiMonitorScreenCapturingSupported = false;\r\n        if (DetectRTC.browser.isFirefox && DetectRTC.browser.version >= 43) {\r\n            // version 43 merely supports platforms for multi-monitors\r\n            // version 44 will support exact multi-monitor selection i.e. you can select any monitor for screen capturing.\r\n            isMultiMonitorScreenCapturingSupported = true;\r\n        }\r\n        DetectRTC.isMultiMonitorScreenCapturingSupported = isMultiMonitorScreenCapturingSupported;\r\n\r\n        DetectRTC.isPromisesSupported = !!('Promise' in window);\r\n\r\n        // version is generated by \"grunt\"\r\n        DetectRTC.version = '1.3.9';\r\n\r\n        if (typeof DetectRTC === 'undefined') {\r\n            window.DetectRTC = {};\r\n        }\r\n\r\n        var MediaStream = window.MediaStream;\r\n\r\n        if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n            MediaStream = webkitMediaStream;\r\n        }\r\n\r\n        if (typeof MediaStream !== 'undefined' && typeof MediaStream === 'function') {\r\n            DetectRTC.MediaStream = Object.keys(MediaStream.prototype);\r\n        } else DetectRTC.MediaStream = false;\r\n\r\n        if (typeof MediaStreamTrack !== 'undefined') {\r\n            DetectRTC.MediaStreamTrack = Object.keys(MediaStreamTrack.prototype);\r\n        } else DetectRTC.MediaStreamTrack = false;\r\n\r\n        var RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\n\r\n        if (typeof RTCPeerConnection !== 'undefined') {\r\n            DetectRTC.RTCPeerConnection = Object.keys(RTCPeerConnection.prototype);\r\n        } else DetectRTC.RTCPeerConnection = false;\r\n\r\n        window.DetectRTC = DetectRTC;\r\n\r\n        if (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n            module.exports = DetectRTC;\r\n        }\r\n\r\n        if (typeof define === 'function' && define.amd) {\r\n            define('DetectRTC', [], function() {\r\n                return DetectRTC;\r\n            });\r\n        }\r\n    })();\r\n\r\n    // globals.js\r\n\r\n    if (typeof cordova !== 'undefined') {\r\n        DetectRTC.isMobileDevice = true;\r\n        DetectRTC.browser.name = 'Chrome';\r\n    }\r\n\r\n    if (navigator && navigator.userAgent && navigator.userAgent.indexOf('Crosswalk') !== -1) {\r\n        DetectRTC.isMobileDevice = true;\r\n        DetectRTC.browser.name = 'Chrome';\r\n    }\r\n\r\n    function fireEvent(obj, eventName, args) {\r\n        if (typeof CustomEvent === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        var eventDetail = {\r\n            arguments: args,\r\n            __exposedProps__: args\r\n        };\r\n\r\n        var event = new CustomEvent(eventName, eventDetail);\r\n        obj.dispatchEvent(event);\r\n    }\r\n\r\n    function setHarkEvents(connection, streamEvent) {\r\n        if (!streamEvent.stream || !getTracks(streamEvent.stream, 'audio').length) return;\r\n\r\n        if (!connection || !streamEvent) {\r\n            throw 'Both arguments are required.';\r\n        }\r\n\r\n        if (!connection.onspeaking || !connection.onsilence) {\r\n            return;\r\n        }\r\n\r\n        if (typeof hark === 'undefined') {\r\n            throw 'hark.js not found.';\r\n        }\r\n\r\n        hark(streamEvent.stream, {\r\n            onspeaking: function() {\r\n                connection.onspeaking(streamEvent);\r\n            },\r\n            onsilence: function() {\r\n                connection.onsilence(streamEvent);\r\n            },\r\n            onvolumechange: function(volume, threshold) {\r\n                if (!connection.onvolumechange) {\r\n                    return;\r\n                }\r\n                connection.onvolumechange(merge({\r\n                    volume: volume,\r\n                    threshold: threshold\r\n                }, streamEvent));\r\n            }\r\n        });\r\n    }\r\n\r\n    function setMuteHandlers(connection, streamEvent) {\r\n        if (!streamEvent.stream || !streamEvent.stream || !streamEvent.stream.addEventListener) return;\r\n\r\n        streamEvent.stream.addEventListener('mute', function(event) {\r\n            event = connection.streamEvents[streamEvent.streamid];\r\n\r\n            event.session = {\r\n                audio: event.muteType === 'audio',\r\n                video: event.muteType === 'video'\r\n            };\r\n\r\n            connection.onmute(event);\r\n        }, false);\r\n\r\n        streamEvent.stream.addEventListener('unmute', function(event) {\r\n            event = connection.streamEvents[streamEvent.streamid];\r\n\r\n            event.session = {\r\n                audio: event.unmuteType === 'audio',\r\n                video: event.unmuteType === 'video'\r\n            };\r\n\r\n            connection.onunmute(event);\r\n        }, false);\r\n    }\r\n\r\n    function getRandomString() {\r\n        if (window.crypto && window.crypto.getRandomValues && navigator.userAgent.indexOf('Safari') === -1) {\r\n            var a = window.crypto.getRandomValues(new Uint32Array(3)),\r\n                token = '';\r\n            for (var i = 0, l = a.length; i < l; i++) {\r\n                token += a[i].toString(36);\r\n            }\r\n            return token;\r\n        } else {\r\n            return (Math.random() * new Date().getTime()).toString(36).replace(/\\./g, '');\r\n        }\r\n    }\r\n\r\n    // Get HTMLAudioElement/HTMLVideoElement accordingly\r\n    // todo: add API documentation for connection.autoCreateMediaElement\r\n\r\n    function getRMCMediaElement(stream, callback, connection) {\r\n        if (!connection.autoCreateMediaElement) {\r\n            callback({});\r\n            return;\r\n        }\r\n\r\n        var isAudioOnly = false;\r\n        if (!getTracks(stream, 'video').length && !stream.isVideo && !stream.isScreen) {\r\n            isAudioOnly = true;\r\n        }\r\n\r\n        if (DetectRTC.browser.name === 'Firefox') {\r\n            if (connection.session.video || connection.session.screen) {\r\n                isAudioOnly = false;\r\n            }\r\n        }\r\n\r\n        var mediaElement = document.createElement(isAudioOnly ? 'audio' : 'video');\r\n\r\n        mediaElement.srcObject = stream;\r\n\r\n        mediaElement.setAttribute('autoplay', true);\r\n        mediaElement.setAttribute('playsinline', true);\r\n        mediaElement.setAttribute('controls', true);\r\n        mediaElement.setAttribute('muted', false);\r\n        mediaElement.setAttribute('volume', 1);\r\n\r\n        // http://goo.gl/WZ5nFl\r\n        // Firefox don't yet support onended for any stream (remote/local)\r\n        if (DetectRTC.browser.name === 'Firefox') {\r\n            var streamEndedEvent = 'ended';\r\n\r\n            if ('oninactive' in mediaElement) {\r\n                streamEndedEvent = 'inactive';\r\n            }\r\n\r\n            mediaElement.addEventListener(streamEndedEvent, function() {\r\n                // fireEvent(stream, streamEndedEvent, stream);\r\n                currentUserMediaRequest.remove(stream.idInstance);\r\n\r\n                if (stream.type === 'local') {\r\n                    streamEndedEvent = 'ended';\r\n\r\n                    if ('oninactive' in stream) {\r\n                        streamEndedEvent = 'inactive';\r\n                    }\r\n\r\n                    StreamsHandler.onSyncNeeded(stream.streamid, streamEndedEvent);\r\n\r\n                    connection.attachStreams.forEach(function(aStream, idx) {\r\n                        if (stream.streamid === aStream.streamid) {\r\n                            delete connection.attachStreams[idx];\r\n                        }\r\n                    });\r\n\r\n                    var newStreamsArray = [];\r\n                    connection.attachStreams.forEach(function(aStream) {\r\n                        if (aStream) {\r\n                            newStreamsArray.push(aStream);\r\n                        }\r\n                    });\r\n                    connection.attachStreams = newStreamsArray;\r\n\r\n                    var streamEvent = connection.streamEvents[stream.streamid];\r\n\r\n                    if (streamEvent) {\r\n                        connection.onstreamended(streamEvent);\r\n                        return;\r\n                    }\r\n                    if (this.parentNode) {\r\n                        this.parentNode.removeChild(this);\r\n                    }\r\n                }\r\n            }, false);\r\n        }\r\n\r\n        var played = mediaElement.play();\r\n        if (typeof played !== 'undefined') {\r\n            var cbFired = false;\r\n            setTimeout(function() {\r\n                if (!cbFired) {\r\n                    cbFired = true;\r\n                    callback(mediaElement);\r\n                }\r\n            }, 1000);\r\n            played.then(function() {\r\n                if (cbFired) return;\r\n                cbFired = true;\r\n                callback(mediaElement);\r\n            }).catch(function(error) {\r\n                if (cbFired) return;\r\n                cbFired = true;\r\n                callback(mediaElement);\r\n            });\r\n        } else {\r\n            callback(mediaElement);\r\n        }\r\n    }\r\n\r\n    // if IE\r\n    if (!window.addEventListener) {\r\n        window.addEventListener = function(el, eventName, eventHandler) {\r\n            if (!el.attachEvent) {\r\n                return;\r\n            }\r\n            el.attachEvent('on' + eventName, eventHandler);\r\n        };\r\n    }\r\n\r\n    function listenEventHandler(eventName, eventHandler) {\r\n        window.removeEventListener(eventName, eventHandler);\r\n        window.addEventListener(eventName, eventHandler, false);\r\n    }\r\n\r\n    window.attachEventListener = function(video, type, listener, useCapture) {\r\n        video.addEventListener(type, listener, useCapture);\r\n    };\r\n\r\n    function removeNullEntries(array) {\r\n        var newArray = [];\r\n        array.forEach(function(item) {\r\n            if (item) {\r\n                newArray.push(item);\r\n            }\r\n        });\r\n        return newArray;\r\n    }\r\n\r\n\r\n    function isData(session) {\r\n        return !session.audio && !session.video && !session.screen && session.data;\r\n    }\r\n\r\n    function isNull(obj) {\r\n        return typeof obj === 'undefined';\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    var MediaStream = window.MediaStream;\r\n\r\n    if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n        MediaStream = webkitMediaStream;\r\n    }\r\n\r\n    /*global MediaStream:true */\r\n    if (typeof MediaStream !== 'undefined') {\r\n        if (!('stop' in MediaStream.prototype)) {\r\n            MediaStream.prototype.stop = function() {\r\n                this.getTracks().forEach(function(track) {\r\n                    track.stop();\r\n                });\r\n            };\r\n        }\r\n    }\r\n\r\n    function isAudioPlusTab(connection, audioPlusTab) {\r\n        if (connection.session.audio && connection.session.audio === 'two-way') {\r\n            return false;\r\n        }\r\n\r\n        if (DetectRTC.browser.name === 'Firefox' && audioPlusTab !== false) {\r\n            return true;\r\n        }\r\n\r\n        if (DetectRTC.browser.name !== 'Chrome' || DetectRTC.browser.version < 50) return false;\r\n\r\n        if (typeof audioPlusTab === true) {\r\n            return true;\r\n        }\r\n\r\n        if (typeof audioPlusTab === 'undefined' && connection.session.audio && connection.session.screen && !connection.session.video) {\r\n            audioPlusTab = true;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function getAudioScreenConstraints(screen_constraints) {\r\n        if (DetectRTC.browser.name === 'Firefox') {\r\n            return true;\r\n        }\r\n\r\n        if (DetectRTC.browser.name !== 'Chrome') return false;\r\n\r\n        return {\r\n            mandatory: {\r\n                chromeMediaSource: screen_constraints.mandatory.chromeMediaSource,\r\n                chromeMediaSourceId: screen_constraints.mandatory.chromeMediaSourceId\r\n            }\r\n        };\r\n    }\r\n\r\n    window.iOSDefaultAudioOutputDevice = window.iOSDefaultAudioOutputDevice || 'speaker'; // earpiece or speaker\r\n\r\n    function getTracks(stream, kind) {\r\n        if (!stream || !stream.getTracks) {\r\n            return [];\r\n        }\r\n\r\n        return stream.getTracks().filter(function(t) {\r\n            return t.kind === (kind || 'audio');\r\n        });\r\n    }\r\n\r\n    function isUnifiedPlanSupportedDefault() {\r\n        var canAddTransceiver = false;\r\n\r\n        try {\r\n            if (typeof RTCRtpTransceiver === 'undefined') return false;\r\n            if (!('currentDirection' in RTCRtpTransceiver.prototype)) return false;\r\n\r\n            var tempPc = new RTCPeerConnection();\r\n\r\n            try {\r\n                tempPc.addTransceiver('audio');\r\n                canAddTransceiver = true;\r\n            } catch (e) {}\r\n\r\n            tempPc.close();\r\n        } catch (e) {\r\n            canAddTransceiver = false;\r\n        }\r\n\r\n        return canAddTransceiver && isUnifiedPlanSuppored();\r\n    }\r\n\r\n    function isUnifiedPlanSuppored() {\r\n        var isUnifiedPlanSupported = false;\r\n\r\n        try {\r\n            var pc = new RTCPeerConnection({\r\n                sdpSemantics: 'unified-plan'\r\n            });\r\n\r\n            try {\r\n                var config = pc.getConfiguration();\r\n                if (config.sdpSemantics == 'unified-plan')\r\n                    isUnifiedPlanSupported = true;\r\n                else if (config.sdpSemantics == 'plan-b')\r\n                    isUnifiedPlanSupported = false;\r\n                else\r\n                    isUnifiedPlanSupported = false;\r\n            } catch (e) {\r\n                isUnifiedPlanSupported = false;\r\n            }\r\n        } catch (e) {\r\n            isUnifiedPlanSupported = false;\r\n        }\r\n\r\n        return isUnifiedPlanSupported;\r\n    }\r\n\r\n    // ios-hacks.js\r\n\r\n    function setCordovaAPIs() {\r\n        // if (DetectRTC.osName !== 'iOS') return;\r\n        if (typeof cordova === 'undefined' || typeof cordova.plugins === 'undefined' || typeof cordova.plugins.iosrtc === 'undefined') return;\r\n\r\n        var iosrtc = cordova.plugins.iosrtc;\r\n        window.webkitRTCPeerConnection = iosrtc.RTCPeerConnection;\r\n        window.RTCSessionDescription = iosrtc.RTCSessionDescription;\r\n        window.RTCIceCandidate = iosrtc.RTCIceCandidate;\r\n        window.MediaStream = iosrtc.MediaStream;\r\n        window.MediaStreamTrack = iosrtc.MediaStreamTrack;\r\n        navigator.getUserMedia = navigator.webkitGetUserMedia = iosrtc.getUserMedia;\r\n\r\n        iosrtc.debug.enable('iosrtc*');\r\n        if (typeof iosrtc.selectAudioOutput == 'function') {\r\n            iosrtc.selectAudioOutput(window.iOSDefaultAudioOutputDevice || 'speaker'); // earpiece or speaker\r\n        }\r\n        iosrtc.registerGlobals();\r\n    }\r\n\r\n    document.addEventListener('deviceready', setCordovaAPIs, false);\r\n    setCordovaAPIs();\r\n\r\n    // RTCPeerConnection.js\r\n\r\n    var defaults = {};\r\n\r\n    function setSdpConstraints(config) {\r\n        var sdpConstraints = {\r\n            OfferToReceiveAudio: !!config.OfferToReceiveAudio,\r\n            OfferToReceiveVideo: !!config.OfferToReceiveVideo\r\n        };\r\n\r\n        return sdpConstraints;\r\n    }\r\n\r\n    var RTCPeerConnection;\r\n    if (typeof window.RTCPeerConnection !== 'undefined') {\r\n        RTCPeerConnection = window.RTCPeerConnection;\r\n    } else if (typeof mozRTCPeerConnection !== 'undefined') {\r\n        RTCPeerConnection = mozRTCPeerConnection;\r\n    } else if (typeof webkitRTCPeerConnection !== 'undefined') {\r\n        RTCPeerConnection = webkitRTCPeerConnection;\r\n    }\r\n\r\n    var RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription;\r\n    var RTCIceCandidate = window.RTCIceCandidate || window.mozRTCIceCandidate;\r\n    var MediaStreamTrack = window.MediaStreamTrack;\r\n\r\n    function PeerInitiator(config) {\r\n        if (typeof window.RTCPeerConnection !== 'undefined') {\r\n            RTCPeerConnection = window.RTCPeerConnection;\r\n        } else if (typeof mozRTCPeerConnection !== 'undefined') {\r\n            RTCPeerConnection = mozRTCPeerConnection;\r\n        } else if (typeof webkitRTCPeerConnection !== 'undefined') {\r\n            RTCPeerConnection = webkitRTCPeerConnection;\r\n        }\r\n\r\n        RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription;\r\n        RTCIceCandidate = window.RTCIceCandidate || window.mozRTCIceCandidate;\r\n        MediaStreamTrack = window.MediaStreamTrack;\r\n\r\n        if (!RTCPeerConnection) {\r\n            throw 'WebRTC 1.0 (RTCPeerConnection) API are NOT available in this browser.';\r\n        }\r\n\r\n        var connection = config.rtcMultiConnection;\r\n\r\n        this.extra = config.remoteSdp ? config.remoteSdp.extra : connection.extra;\r\n        this.userid = config.userid;\r\n        this.streams = [];\r\n        this.channels = config.channels || [];\r\n        this.connectionDescription = config.connectionDescription;\r\n\r\n        this.addStream = function(session) {\r\n            connection.addStream(session, self.userid);\r\n        };\r\n\r\n        this.removeStream = function(streamid) {\r\n            connection.removeStream(streamid, self.userid);\r\n        };\r\n\r\n        var self = this;\r\n\r\n        if (config.remoteSdp) {\r\n            this.connectionDescription = config.remoteSdp.connectionDescription;\r\n        }\r\n\r\n        var allRemoteStreams = {};\r\n\r\n        defaults.sdpConstraints = setSdpConstraints({\r\n            OfferToReceiveAudio: true,\r\n            OfferToReceiveVideo: true\r\n        });\r\n\r\n        var peer;\r\n\r\n        var renegotiatingPeer = !!config.renegotiatingPeer;\r\n        if (config.remoteSdp) {\r\n            renegotiatingPeer = !!config.remoteSdp.renegotiatingPeer;\r\n        }\r\n\r\n        var localStreams = [];\r\n        connection.attachStreams.forEach(function(stream) {\r\n            if (!!stream) {\r\n                localStreams.push(stream);\r\n            }\r\n        });\r\n\r\n        if (!renegotiatingPeer) {\r\n            var iceTransports = 'all';\r\n            if (connection.candidates.turn || connection.candidates.relay) {\r\n                if (!connection.candidates.stun && !connection.candidates.reflexive && !connection.candidates.host) {\r\n                    iceTransports = 'relay';\r\n                }\r\n            }\r\n\r\n            try {\r\n                // ref: developer.mozilla.org/en-US/docs/Web/API/RTCConfiguration\r\n                var params = {\r\n                    iceServers: connection.iceServers,\r\n                    iceTransportPolicy: connection.iceTransportPolicy || iceTransports\r\n                };\r\n\r\n                if (typeof connection.iceCandidatePoolSize !== 'undefined') {\r\n                    params.iceCandidatePoolSize = connection.iceCandidatePoolSize;\r\n                }\r\n\r\n                if (typeof connection.bundlePolicy !== 'undefined') {\r\n                    params.bundlePolicy = connection.bundlePolicy;\r\n                }\r\n\r\n                if (typeof connection.rtcpMuxPolicy !== 'undefined') {\r\n                    params.rtcpMuxPolicy = connection.rtcpMuxPolicy;\r\n                }\r\n\r\n                if (!!connection.sdpSemantics) {\r\n                    params.sdpSemantics = connection.sdpSemantics || 'unified-plan';\r\n                }\r\n\r\n                if (!connection.iceServers || !connection.iceServers.length) {\r\n                    params = null;\r\n                    connection.optionalArgument = null;\r\n                }\r\n\r\n                peer = new RTCPeerConnection(params, connection.optionalArgument);\r\n            } catch (e) {\r\n                try {\r\n                    var params = {\r\n                        iceServers: connection.iceServers\r\n                    };\r\n\r\n                    peer = new RTCPeerConnection(params);\r\n                } catch (e) {\r\n                    peer = new RTCPeerConnection();\r\n                }\r\n            }\r\n        } else {\r\n            peer = config.peerRef;\r\n        }\r\n\r\n        if (!peer.getRemoteStreams && peer.getReceivers) {\r\n            peer.getRemoteStreams = function() {\r\n                var stream = new MediaStream();\r\n                peer.getReceivers().forEach(function(receiver) {\r\n                    stream.addTrack(receiver.track);\r\n                });\r\n                return [stream];\r\n            };\r\n        }\r\n\r\n        if (!peer.getLocalStreams && peer.getSenders) {\r\n            peer.getLocalStreams = function() {\r\n                var stream = new MediaStream();\r\n                peer.getSenders().forEach(function(sender) {\r\n                    stream.addTrack(sender.track);\r\n                });\r\n                return [stream];\r\n            };\r\n        }\r\n\r\n        peer.onicecandidate = function(event) {\r\n            if (!event.candidate) {\r\n                if (!connection.trickleIce) {\r\n                    var localSdp = peer.localDescription;\r\n                    config.onLocalSdp({\r\n                        type: localSdp.type,\r\n                        sdp: localSdp.sdp,\r\n                        remotePeerSdpConstraints: config.remotePeerSdpConstraints || false,\r\n                        renegotiatingPeer: !!config.renegotiatingPeer || false,\r\n                        connectionDescription: self.connectionDescription,\r\n                        dontGetRemoteStream: !!config.dontGetRemoteStream,\r\n                        extra: connection ? connection.extra : {},\r\n                        streamsToShare: streamsToShare\r\n                    });\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (!connection.trickleIce) return;\r\n            config.onLocalCandidate({\r\n                candidate: event.candidate.candidate,\r\n                sdpMid: event.candidate.sdpMid,\r\n                sdpMLineIndex: event.candidate.sdpMLineIndex\r\n            });\r\n        };\r\n\r\n        localStreams.forEach(function(localStream) {\r\n            if (config.remoteSdp && config.remoteSdp.remotePeerSdpConstraints && config.remoteSdp.remotePeerSdpConstraints.dontGetRemoteStream) {\r\n                return;\r\n            }\r\n\r\n            if (config.dontAttachLocalStream) {\r\n                return;\r\n            }\r\n\r\n            localStream = connection.beforeAddingStream(localStream, self);\r\n\r\n            if (!localStream) return;\r\n\r\n            peer.getLocalStreams().forEach(function(stream) {\r\n                if (localStream && stream.id == localStream.id) {\r\n                    localStream = null;\r\n                }\r\n            });\r\n\r\n            if (localStream && localStream.getTracks) {\r\n                localStream.getTracks().forEach(function(track) {\r\n                    try {\r\n                        // last parameter is redundant for unified-plan\r\n                        // starting from chrome version 72\r\n                        peer.addTrack(track, localStream);\r\n                    } catch (e) {}\r\n                });\r\n            }\r\n        });\r\n\r\n        peer.oniceconnectionstatechange = peer.onsignalingstatechange = function() {\r\n            var extra = self.extra;\r\n            if (connection.peers[self.userid]) {\r\n                extra = connection.peers[self.userid].extra || extra;\r\n            }\r\n\r\n            if (!peer) {\r\n                return;\r\n            }\r\n\r\n            config.onPeerStateChanged({\r\n                iceConnectionState: peer.iceConnectionState,\r\n                iceGatheringState: peer.iceGatheringState,\r\n                signalingState: peer.signalingState,\r\n                extra: extra,\r\n                userid: self.userid\r\n            });\r\n\r\n            if (peer && peer.iceConnectionState && peer.iceConnectionState.search(/closed|failed/gi) !== -1 && self.streams instanceof Array) {\r\n                self.streams.forEach(function(stream) {\r\n                    var streamEvent = connection.streamEvents[stream.id] || {\r\n                        streamid: stream.id,\r\n                        stream: stream,\r\n                        type: 'remote'\r\n                    };\r\n\r\n                    connection.onstreamended(streamEvent);\r\n                });\r\n            }\r\n        };\r\n\r\n        var sdpConstraints = {\r\n            OfferToReceiveAudio: !!localStreams.length,\r\n            OfferToReceiveVideo: !!localStreams.length\r\n        };\r\n\r\n        if (config.localPeerSdpConstraints) sdpConstraints = config.localPeerSdpConstraints;\r\n\r\n        defaults.sdpConstraints = setSdpConstraints(sdpConstraints);\r\n\r\n        var streamObject;\r\n        var dontDuplicate = {};\r\n\r\n        peer.ontrack = function(event) {\r\n            if (!event || event.type !== 'track') return;\r\n\r\n            event.stream = event.streams[event.streams.length - 1];\r\n\r\n            if (!event.stream.id) {\r\n                event.stream.id = event.track.id;\r\n            }\r\n\r\n            if (dontDuplicate[event.stream.id] && DetectRTC.browser.name !== 'Safari') {\r\n                if (event.track) {\r\n                    event.track.onended = function() { // event.track.onmute = \r\n                        peer && peer.onremovestream(event);\r\n                    };\r\n                }\r\n                return;\r\n            }\r\n\r\n            dontDuplicate[event.stream.id] = event.stream.id;\r\n\r\n            var streamsToShare = {};\r\n            if (config.remoteSdp && config.remoteSdp.streamsToShare) {\r\n                streamsToShare = config.remoteSdp.streamsToShare;\r\n            } else if (config.streamsToShare) {\r\n                streamsToShare = config.streamsToShare;\r\n            }\r\n\r\n            var streamToShare = streamsToShare[event.stream.id];\r\n            if (streamToShare) {\r\n                event.stream.isAudio = streamToShare.isAudio;\r\n                event.stream.isVideo = streamToShare.isVideo;\r\n                event.stream.isScreen = streamToShare.isScreen;\r\n            } else {\r\n                event.stream.isVideo = !!getTracks(event.stream, 'video').length;\r\n                event.stream.isAudio = !event.stream.isVideo;\r\n                event.stream.isScreen = false;\r\n            }\r\n\r\n            event.stream.streamid = event.stream.id;\r\n\r\n            allRemoteStreams[event.stream.id] = event.stream;\r\n            config.onRemoteStream(event.stream);\r\n\r\n            event.stream.getTracks().forEach(function(track) {\r\n                track.onended = function() { // track.onmute = \r\n                    peer && peer.onremovestream(event);\r\n                };\r\n            });\r\n\r\n            event.stream.onremovetrack = function() {\r\n                peer && peer.onremovestream(event);\r\n            };\r\n        };\r\n\r\n        peer.onremovestream = function(event) {\r\n            // this event doesn't works anymore\r\n            event.stream.streamid = event.stream.id;\r\n\r\n            if (allRemoteStreams[event.stream.id]) {\r\n                delete allRemoteStreams[event.stream.id];\r\n            }\r\n\r\n            config.onRemoteStreamRemoved(event.stream);\r\n        };\r\n\r\n        if (typeof peer.removeStream !== 'function') {\r\n            // removeStream backward compatibility\r\n            peer.removeStream = function(stream) {\r\n                stream.getTracks().forEach(function(track) {\r\n                    peer.removeTrack(track, stream);\r\n                });\r\n            };\r\n        }\r\n\r\n        this.addRemoteCandidate = function(remoteCandidate) {\r\n            peer.addIceCandidate(new RTCIceCandidate(remoteCandidate));\r\n        };\r\n\r\n        function oldAddRemoteSdp(remoteSdp, cb) {\r\n            cb = cb || function() {};\r\n\r\n            if (DetectRTC.browser.name !== 'Safari') {\r\n                remoteSdp.sdp = connection.processSdp(remoteSdp.sdp);\r\n            }\r\n            peer.setRemoteDescription(new RTCSessionDescription(remoteSdp), cb, function(error) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('setRemoteDescription failed', '\\n', error, '\\n', remoteSdp.sdp);\r\n                }\r\n\r\n                cb();\r\n            });\r\n        }\r\n\r\n        this.addRemoteSdp = function(remoteSdp, cb) {\r\n            cb = cb || function() {};\r\n\r\n            if (DetectRTC.browser.name !== 'Safari') {\r\n                remoteSdp.sdp = connection.processSdp(remoteSdp.sdp);\r\n            }\r\n\r\n            peer.setRemoteDescription(new RTCSessionDescription(remoteSdp)).then(cb, function(error) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('setRemoteDescription failed', '\\n', error, '\\n', remoteSdp.sdp);\r\n                }\r\n\r\n                cb();\r\n            }).catch(function(error) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('setRemoteDescription failed', '\\n', error, '\\n', remoteSdp.sdp);\r\n                }\r\n\r\n                cb();\r\n            });\r\n        };\r\n\r\n        var isOfferer = true;\r\n\r\n        if (config.remoteSdp) {\r\n            isOfferer = false;\r\n        }\r\n\r\n        this.createDataChannel = function() {\r\n            var channel = peer.createDataChannel('sctp', {});\r\n            setChannelEvents(channel);\r\n        };\r\n\r\n        if (connection.session.data === true && !renegotiatingPeer) {\r\n            if (!isOfferer) {\r\n                peer.ondatachannel = function(event) {\r\n                    var channel = event.channel;\r\n                    setChannelEvents(channel);\r\n                };\r\n            } else {\r\n                this.createDataChannel();\r\n            }\r\n        }\r\n\r\n        this.enableDisableVideoEncoding = function(enable) {\r\n            var rtcp;\r\n            peer.getSenders().forEach(function(sender) {\r\n                if (!rtcp && sender.track.kind === 'video') {\r\n                    rtcp = sender;\r\n                }\r\n            });\r\n\r\n            if (!rtcp || !rtcp.getParameters) return;\r\n\r\n            var parameters = rtcp.getParameters();\r\n            parameters.encodings[1] && (parameters.encodings[1].active = !!enable);\r\n            parameters.encodings[2] && (parameters.encodings[2].active = !!enable);\r\n            rtcp.setParameters(parameters);\r\n        };\r\n\r\n        if (config.remoteSdp) {\r\n            if (config.remoteSdp.remotePeerSdpConstraints) {\r\n                sdpConstraints = config.remoteSdp.remotePeerSdpConstraints;\r\n            }\r\n            defaults.sdpConstraints = setSdpConstraints(sdpConstraints);\r\n            this.addRemoteSdp(config.remoteSdp, function() {\r\n                createOfferOrAnswer('createAnswer');\r\n            });\r\n        }\r\n\r\n        function setChannelEvents(channel) {\r\n            // force ArrayBuffer in Firefox; which uses \"Blob\" by default.\r\n            channel.binaryType = 'arraybuffer';\r\n\r\n            channel.onmessage = function(event) {\r\n                config.onDataChannelMessage(event.data);\r\n            };\r\n\r\n            channel.onopen = function() {\r\n                config.onDataChannelOpened(channel);\r\n            };\r\n\r\n            channel.onerror = function(error) {\r\n                config.onDataChannelError(error);\r\n            };\r\n\r\n            channel.onclose = function(event) {\r\n                config.onDataChannelClosed(event);\r\n            };\r\n\r\n            channel.internalSend = channel.send;\r\n            channel.send = function(data) {\r\n                if (channel.readyState !== 'open') {\r\n                    return;\r\n                }\r\n\r\n                channel.internalSend(data);\r\n            };\r\n\r\n            peer.channel = channel;\r\n        }\r\n\r\n        if (connection.session.audio == 'two-way' || connection.session.video == 'two-way' || connection.session.screen == 'two-way') {\r\n            defaults.sdpConstraints = setSdpConstraints({\r\n                OfferToReceiveAudio: connection.session.audio == 'two-way' || (config.remoteSdp && config.remoteSdp.remotePeerSdpConstraints && config.remoteSdp.remotePeerSdpConstraints.OfferToReceiveAudio),\r\n                OfferToReceiveVideo: connection.session.video == 'two-way' || connection.session.screen == 'two-way' || (config.remoteSdp && config.remoteSdp.remotePeerSdpConstraints && config.remoteSdp.remotePeerSdpConstraints.OfferToReceiveAudio)\r\n            });\r\n        }\r\n\r\n        var streamsToShare = {};\r\n        peer.getLocalStreams().forEach(function(stream) {\r\n            streamsToShare[stream.streamid] = {\r\n                isAudio: !!stream.isAudio,\r\n                isVideo: !!stream.isVideo,\r\n                isScreen: !!stream.isScreen\r\n            };\r\n        });\r\n\r\n        function oldCreateOfferOrAnswer(_method) {\r\n            peer[_method](function(localSdp) {\r\n                if (DetectRTC.browser.name !== 'Safari') {\r\n                    localSdp.sdp = connection.processSdp(localSdp.sdp);\r\n                }\r\n                peer.setLocalDescription(localSdp, function() {\r\n                    if (!connection.trickleIce) return;\r\n\r\n                    config.onLocalSdp({\r\n                        type: localSdp.type,\r\n                        sdp: localSdp.sdp,\r\n                        remotePeerSdpConstraints: config.remotePeerSdpConstraints || false,\r\n                        renegotiatingPeer: !!config.renegotiatingPeer || false,\r\n                        connectionDescription: self.connectionDescription,\r\n                        dontGetRemoteStream: !!config.dontGetRemoteStream,\r\n                        extra: connection ? connection.extra : {},\r\n                        streamsToShare: streamsToShare\r\n                    });\r\n\r\n                    connection.onSettingLocalDescription(self);\r\n                }, function(error) {\r\n                    if (!!connection.enableLogs) {\r\n                        console.error('setLocalDescription-error', error);\r\n                    }\r\n                });\r\n            }, function(error) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('sdp-' + _method + '-error', error);\r\n                }\r\n            }, defaults.sdpConstraints);\r\n        }\r\n\r\n        function createOfferOrAnswer(_method) {\r\n            peer[_method](defaults.sdpConstraints).then(function(localSdp) {\r\n                if (DetectRTC.browser.name !== 'Safari') {\r\n                    localSdp.sdp = connection.processSdp(localSdp.sdp);\r\n                }\r\n                peer.setLocalDescription(localSdp).then(function() {\r\n                    if (!connection.trickleIce) return;\r\n\r\n                    config.onLocalSdp({\r\n                        type: localSdp.type,\r\n                        sdp: localSdp.sdp,\r\n                        remotePeerSdpConstraints: config.remotePeerSdpConstraints || false,\r\n                        renegotiatingPeer: !!config.renegotiatingPeer || false,\r\n                        connectionDescription: self.connectionDescription,\r\n                        dontGetRemoteStream: !!config.dontGetRemoteStream,\r\n                        extra: connection ? connection.extra : {},\r\n                        streamsToShare: streamsToShare\r\n                    });\r\n\r\n                    connection.onSettingLocalDescription(self);\r\n                }, function(error) {\r\n                    if (!connection.enableLogs) return;\r\n                    console.error('setLocalDescription error', error);\r\n                });\r\n            }, function(error) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('sdp-error', error);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (isOfferer) {\r\n            createOfferOrAnswer('createOffer');\r\n        }\r\n\r\n        peer.nativeClose = peer.close;\r\n        peer.close = function() {\r\n            if (!peer) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                if (peer.nativeClose !== peer.close) {\r\n                    peer.nativeClose();\r\n                }\r\n            } catch (e) {}\r\n\r\n            peer = null;\r\n            self.peer = null;\r\n        };\r\n\r\n        this.peer = peer;\r\n    }\r\n\r\n    // CodecsHandler.js\r\n\r\n    var CodecsHandler = (function() {\r\n        function preferCodec(sdp, codecName) {\r\n            var info = splitLines(sdp);\r\n\r\n            if (!info.videoCodecNumbers) {\r\n                return sdp;\r\n            }\r\n\r\n            if (codecName === 'vp8' && info.vp8LineNumber === info.videoCodecNumbers[0]) {\r\n                return sdp;\r\n            }\r\n\r\n            if (codecName === 'vp9' && info.vp9LineNumber === info.videoCodecNumbers[0]) {\r\n                return sdp;\r\n            }\r\n\r\n            if (codecName === 'h264' && info.h264LineNumber === info.videoCodecNumbers[0]) {\r\n                return sdp;\r\n            }\r\n\r\n            sdp = preferCodecHelper(sdp, codecName, info);\r\n\r\n            return sdp;\r\n        }\r\n\r\n        function preferCodecHelper(sdp, codec, info, ignore) {\r\n            var preferCodecNumber = '';\r\n\r\n            if (codec === 'vp8') {\r\n                if (!info.vp8LineNumber) {\r\n                    return sdp;\r\n                }\r\n                preferCodecNumber = info.vp8LineNumber;\r\n            }\r\n\r\n            if (codec === 'vp9') {\r\n                if (!info.vp9LineNumber) {\r\n                    return sdp;\r\n                }\r\n                preferCodecNumber = info.vp9LineNumber;\r\n            }\r\n\r\n            if (codec === 'h264') {\r\n                if (!info.h264LineNumber) {\r\n                    return sdp;\r\n                }\r\n\r\n                preferCodecNumber = info.h264LineNumber;\r\n            }\r\n\r\n            var newLine = info.videoCodecNumbersOriginal.split('SAVPF')[0] + 'SAVPF ';\r\n\r\n            var newOrder = [preferCodecNumber];\r\n\r\n            if (ignore) {\r\n                newOrder = [];\r\n            }\r\n\r\n            info.videoCodecNumbers.forEach(function(codecNumber) {\r\n                if (codecNumber === preferCodecNumber) return;\r\n                newOrder.push(codecNumber);\r\n            });\r\n\r\n            newLine += newOrder.join(' ');\r\n\r\n            sdp = sdp.replace(info.videoCodecNumbersOriginal, newLine);\r\n            return sdp;\r\n        }\r\n\r\n        function splitLines(sdp) {\r\n            var info = {};\r\n            sdp.split('\\n').forEach(function(line) {\r\n                if (line.indexOf('m=video') === 0) {\r\n                    info.videoCodecNumbers = [];\r\n                    line.split('SAVPF')[1].split(' ').forEach(function(codecNumber) {\r\n                        codecNumber = codecNumber.trim();\r\n                        if (!codecNumber || !codecNumber.length) return;\r\n                        info.videoCodecNumbers.push(codecNumber);\r\n                        info.videoCodecNumbersOriginal = line;\r\n                    });\r\n                }\r\n\r\n                if (line.indexOf('VP8/90000') !== -1 && !info.vp8LineNumber) {\r\n                    info.vp8LineNumber = line.replace('a=rtpmap:', '').split(' ')[0];\r\n                }\r\n\r\n                if (line.indexOf('VP9/90000') !== -1 && !info.vp9LineNumber) {\r\n                    info.vp9LineNumber = line.replace('a=rtpmap:', '').split(' ')[0];\r\n                }\r\n\r\n                if (line.indexOf('H264/90000') !== -1 && !info.h264LineNumber) {\r\n                    info.h264LineNumber = line.replace('a=rtpmap:', '').split(' ')[0];\r\n                }\r\n            });\r\n\r\n            return info;\r\n        }\r\n\r\n        function removeVPX(sdp) {\r\n            var info = splitLines(sdp);\r\n\r\n            // last parameter below means: ignore these codecs\r\n            sdp = preferCodecHelper(sdp, 'vp9', info, true);\r\n            sdp = preferCodecHelper(sdp, 'vp8', info, true);\r\n\r\n            return sdp;\r\n        }\r\n\r\n        function disableNACK(sdp) {\r\n            if (!sdp || typeof sdp !== 'string') {\r\n                throw 'Invalid arguments.';\r\n            }\r\n\r\n            sdp = sdp.replace('a=rtcp-fb:126 nack\\r\\n', '');\r\n            sdp = sdp.replace('a=rtcp-fb:126 nack pli\\r\\n', 'a=rtcp-fb:126 pli\\r\\n');\r\n            sdp = sdp.replace('a=rtcp-fb:97 nack\\r\\n', '');\r\n            sdp = sdp.replace('a=rtcp-fb:97 nack pli\\r\\n', 'a=rtcp-fb:97 pli\\r\\n');\r\n\r\n            return sdp;\r\n        }\r\n\r\n        function prioritize(codecMimeType, peer) {\r\n            if (!peer || !peer.getSenders || !peer.getSenders().length) {\r\n                return;\r\n            }\r\n\r\n            if (!codecMimeType || typeof codecMimeType !== 'string') {\r\n                throw 'Invalid arguments.';\r\n            }\r\n\r\n            peer.getSenders().forEach(function(sender) {\r\n                var params = sender.getParameters();\r\n                for (var i = 0; i < params.codecs.length; i++) {\r\n                    if (params.codecs[i].mimeType == codecMimeType) {\r\n                        params.codecs.unshift(params.codecs.splice(i, 1));\r\n                        break;\r\n                    }\r\n                }\r\n                sender.setParameters(params);\r\n            });\r\n        }\r\n\r\n        function removeNonG722(sdp) {\r\n            return sdp.replace(/m=audio ([0-9]+) RTP\\/SAVPF ([0-9 ]*)/g, 'm=audio $1 RTP\\/SAVPF 9');\r\n        }\r\n\r\n        function setBAS(sdp, bandwidth, isScreen) {\r\n            if (!bandwidth) {\r\n                return sdp;\r\n            }\r\n\r\n            if (typeof isFirefox !== 'undefined' && isFirefox) {\r\n                return sdp;\r\n            }\r\n\r\n            if (isScreen) {\r\n                if (!bandwidth.screen) {\r\n                    console.warn('It seems that you are not using bandwidth for screen. Screen sharing is expected to fail.');\r\n                } else if (bandwidth.screen < 300) {\r\n                    console.warn('It seems that you are using wrong bandwidth value for screen. Screen sharing is expected to fail.');\r\n                }\r\n            }\r\n\r\n            // if screen; must use at least 300kbs\r\n            if (bandwidth.screen && isScreen) {\r\n                sdp = sdp.replace(/b=AS([^\\r\\n]+\\r\\n)/g, '');\r\n                sdp = sdp.replace(/a=mid:video\\r\\n/g, 'a=mid:video\\r\\nb=AS:' + bandwidth.screen + '\\r\\n');\r\n            }\r\n\r\n            // remove existing bandwidth lines\r\n            if (bandwidth.audio || bandwidth.video) {\r\n                sdp = sdp.replace(/b=AS([^\\r\\n]+\\r\\n)/g, '');\r\n            }\r\n\r\n            if (bandwidth.audio) {\r\n                sdp = sdp.replace(/a=mid:audio\\r\\n/g, 'a=mid:audio\\r\\nb=AS:' + bandwidth.audio + '\\r\\n');\r\n            }\r\n\r\n            if (bandwidth.screen) {\r\n                sdp = sdp.replace(/a=mid:video\\r\\n/g, 'a=mid:video\\r\\nb=AS:' + bandwidth.screen + '\\r\\n');\r\n            } else if (bandwidth.video) {\r\n                sdp = sdp.replace(/a=mid:video\\r\\n/g, 'a=mid:video\\r\\nb=AS:' + bandwidth.video + '\\r\\n');\r\n            }\r\n\r\n            return sdp;\r\n        }\r\n\r\n        // Find the line in sdpLines that starts with |prefix|, and, if specified,\r\n        // contains |substr| (case-insensitive search).\r\n        function findLine(sdpLines, prefix, substr) {\r\n            return findLineInRange(sdpLines, 0, -1, prefix, substr);\r\n        }\r\n\r\n        // Find the line in sdpLines[startLine...endLine - 1] that starts with |prefix|\r\n        // and, if specified, contains |substr| (case-insensitive search).\r\n        function findLineInRange(sdpLines, startLine, endLine, prefix, substr) {\r\n            var realEndLine = endLine !== -1 ? endLine : sdpLines.length;\r\n            for (var i = startLine; i < realEndLine; ++i) {\r\n                if (sdpLines[i].indexOf(prefix) === 0) {\r\n                    if (!substr ||\r\n                        sdpLines[i].toLowerCase().indexOf(substr.toLowerCase()) !== -1) {\r\n                        return i;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        // Gets the codec payload type from an a=rtpmap:X line.\r\n        function getCodecPayloadType(sdpLine) {\r\n            var pattern = new RegExp('a=rtpmap:(\\\\d+) \\\\w+\\\\/\\\\d+');\r\n            var result = sdpLine.match(pattern);\r\n            return (result && result.length === 2) ? result[1] : null;\r\n        }\r\n\r\n        function setVideoBitrates(sdp, params) {\r\n            params = params || {};\r\n            var xgoogle_min_bitrate = params.min;\r\n            var xgoogle_max_bitrate = params.max;\r\n\r\n            var sdpLines = sdp.split('\\r\\n');\r\n\r\n            // VP8\r\n            var vp8Index = findLine(sdpLines, 'a=rtpmap', 'VP8/90000');\r\n            var vp8Payload;\r\n            if (vp8Index) {\r\n                vp8Payload = getCodecPayloadType(sdpLines[vp8Index]);\r\n            }\r\n\r\n            if (!vp8Payload) {\r\n                return sdp;\r\n            }\r\n\r\n            var rtxIndex = findLine(sdpLines, 'a=rtpmap', 'rtx/90000');\r\n            var rtxPayload;\r\n            if (rtxIndex) {\r\n                rtxPayload = getCodecPayloadType(sdpLines[rtxIndex]);\r\n            }\r\n\r\n            if (!rtxIndex) {\r\n                return sdp;\r\n            }\r\n\r\n            var rtxFmtpLineIndex = findLine(sdpLines, 'a=fmtp:' + rtxPayload.toString());\r\n            if (rtxFmtpLineIndex !== null) {\r\n                var appendrtxNext = '\\r\\n';\r\n                appendrtxNext += 'a=fmtp:' + vp8Payload + ' x-google-min-bitrate=' + (xgoogle_min_bitrate || '228') + '; x-google-max-bitrate=' + (xgoogle_max_bitrate || '228');\r\n                sdpLines[rtxFmtpLineIndex] = sdpLines[rtxFmtpLineIndex].concat(appendrtxNext);\r\n                sdp = sdpLines.join('\\r\\n');\r\n            }\r\n\r\n            return sdp;\r\n        }\r\n\r\n        function setOpusAttributes(sdp, params) {\r\n            params = params || {};\r\n\r\n            var sdpLines = sdp.split('\\r\\n');\r\n\r\n            // Opus\r\n            var opusIndex = findLine(sdpLines, 'a=rtpmap', 'opus/48000');\r\n            var opusPayload;\r\n            if (opusIndex) {\r\n                opusPayload = getCodecPayloadType(sdpLines[opusIndex]);\r\n            }\r\n\r\n            if (!opusPayload) {\r\n                return sdp;\r\n            }\r\n\r\n            var opusFmtpLineIndex = findLine(sdpLines, 'a=fmtp:' + opusPayload.toString());\r\n            if (opusFmtpLineIndex === null) {\r\n                return sdp;\r\n            }\r\n\r\n            var appendOpusNext = '';\r\n            appendOpusNext += '; stereo=' + (typeof params.stereo != 'undefined' ? params.stereo : '1');\r\n            appendOpusNext += '; sprop-stereo=' + (typeof params['sprop-stereo'] != 'undefined' ? params['sprop-stereo'] : '1');\r\n\r\n            if (typeof params.maxaveragebitrate != 'undefined') {\r\n                appendOpusNext += '; maxaveragebitrate=' + (params.maxaveragebitrate || 128 * 1024 * 8);\r\n            }\r\n\r\n            if (typeof params.maxplaybackrate != 'undefined') {\r\n                appendOpusNext += '; maxplaybackrate=' + (params.maxplaybackrate || 128 * 1024 * 8);\r\n            }\r\n\r\n            if (typeof params.cbr != 'undefined') {\r\n                appendOpusNext += '; cbr=' + (typeof params.cbr != 'undefined' ? params.cbr : '1');\r\n            }\r\n\r\n            if (typeof params.useinbandfec != 'undefined') {\r\n                appendOpusNext += '; useinbandfec=' + params.useinbandfec;\r\n            }\r\n\r\n            if (typeof params.usedtx != 'undefined') {\r\n                appendOpusNext += '; usedtx=' + params.usedtx;\r\n            }\r\n\r\n            if (typeof params.maxptime != 'undefined') {\r\n                appendOpusNext += '\\r\\na=maxptime:' + params.maxptime;\r\n            }\r\n\r\n            sdpLines[opusFmtpLineIndex] = sdpLines[opusFmtpLineIndex].concat(appendOpusNext);\r\n\r\n            sdp = sdpLines.join('\\r\\n');\r\n            return sdp;\r\n        }\r\n\r\n        // forceStereoAudio => via webrtcexample.com\r\n        // requires getUserMedia => echoCancellation:false\r\n        function forceStereoAudio(sdp) {\r\n            var sdpLines = sdp.split('\\r\\n');\r\n            var fmtpLineIndex = null;\r\n            for (var i = 0; i < sdpLines.length; i++) {\r\n                if (sdpLines[i].search('opus/48000') !== -1) {\r\n                    var opusPayload = extractSdp(sdpLines[i], /:(\\d+) opus\\/48000/i);\r\n                    break;\r\n                }\r\n            }\r\n            for (var i = 0; i < sdpLines.length; i++) {\r\n                if (sdpLines[i].search('a=fmtp') !== -1) {\r\n                    var payload = extractSdp(sdpLines[i], /a=fmtp:(\\d+)/);\r\n                    if (payload === opusPayload) {\r\n                        fmtpLineIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (fmtpLineIndex === null) return sdp;\r\n            sdpLines[fmtpLineIndex] = sdpLines[fmtpLineIndex].concat('; stereo=1; sprop-stereo=1');\r\n            sdp = sdpLines.join('\\r\\n');\r\n            return sdp;\r\n        }\r\n\r\n        return {\r\n            removeVPX: removeVPX,\r\n            disableNACK: disableNACK,\r\n            prioritize: prioritize,\r\n            removeNonG722: removeNonG722,\r\n            setApplicationSpecificBandwidth: function(sdp, bandwidth, isScreen) {\r\n                return setBAS(sdp, bandwidth, isScreen);\r\n            },\r\n            setVideoBitrates: function(sdp, params) {\r\n                return setVideoBitrates(sdp, params);\r\n            },\r\n            setOpusAttributes: function(sdp, params) {\r\n                return setOpusAttributes(sdp, params);\r\n            },\r\n            preferVP9: function(sdp) {\r\n                return preferCodec(sdp, 'vp9');\r\n            },\r\n            preferCodec: preferCodec,\r\n            forceStereoAudio: forceStereoAudio\r\n        };\r\n    })();\r\n\r\n    // backward compatibility\r\n    window.BandwidthHandler = CodecsHandler;\r\n\r\n    // OnIceCandidateHandler.js\r\n\r\n    var OnIceCandidateHandler = (function() {\r\n        function processCandidates(connection, icePair) {\r\n            var candidate = icePair.candidate;\r\n\r\n            var iceRestrictions = connection.candidates;\r\n            var stun = iceRestrictions.stun;\r\n            var turn = iceRestrictions.turn;\r\n\r\n            if (!isNull(iceRestrictions.reflexive)) {\r\n                stun = iceRestrictions.reflexive;\r\n            }\r\n\r\n            if (!isNull(iceRestrictions.relay)) {\r\n                turn = iceRestrictions.relay;\r\n            }\r\n\r\n            if (!iceRestrictions.host && !!candidate.match(/typ host/g)) {\r\n                return;\r\n            }\r\n\r\n            if (!turn && !!candidate.match(/typ relay/g)) {\r\n                return;\r\n            }\r\n\r\n            if (!stun && !!candidate.match(/typ srflx/g)) {\r\n                return;\r\n            }\r\n\r\n            var protocol = connection.iceProtocols;\r\n\r\n            if (!protocol.udp && !!candidate.match(/ udp /g)) {\r\n                return;\r\n            }\r\n\r\n            if (!protocol.tcp && !!candidate.match(/ tcp /g)) {\r\n                return;\r\n            }\r\n\r\n            if (connection.enableLogs) {\r\n                console.debug('Your candidate pairs:', candidate);\r\n            }\r\n\r\n            return {\r\n                candidate: candidate,\r\n                sdpMid: icePair.sdpMid,\r\n                sdpMLineIndex: icePair.sdpMLineIndex\r\n            };\r\n        }\r\n\r\n        return {\r\n            processCandidates: processCandidates\r\n        };\r\n    })();\r\n\r\n    // IceServersHandler.js\r\n\r\n    var IceServersHandler = (function() {\r\n        function getIceServers(connection) {\r\n            // resiprocate: 3344+4433\r\n            // pions: 7575\r\n            var iceServers = [{\r\n                'urls': [\r\n                    'stun:stun.l.google.com:19302',\r\n                    'stun:stun1.l.google.com:19302',\r\n                    'stun:stun2.l.google.com:19302',\r\n                    'stun:stun.l.google.com:19302?transport=udp',\r\n                ]\r\n            }];\r\n\r\n            return iceServers;\r\n        }\r\n\r\n        return {\r\n            getIceServers: getIceServers\r\n        };\r\n    })();\r\n\r\n    // getUserMediaHandler.js\r\n\r\n    function setStreamType(constraints, stream) {\r\n        if (constraints.mandatory && constraints.mandatory.chromeMediaSource) {\r\n            stream.isScreen = true;\r\n        } else if (constraints.mozMediaSource || constraints.mediaSource) {\r\n            stream.isScreen = true;\r\n        } else if (constraints.video) {\r\n            stream.isVideo = true;\r\n        } else if (constraints.audio) {\r\n            stream.isAudio = true;\r\n        }\r\n    }\r\n\r\n    // allow users to manage this object (to support re-capturing of screen/etc.)\r\n    window.currentUserMediaRequest = {\r\n        streams: [],\r\n        mutex: false,\r\n        queueRequests: [],\r\n        remove: function(idInstance) {\r\n            this.mutex = false;\r\n\r\n            var stream = this.streams[idInstance];\r\n            if (!stream) {\r\n                return;\r\n            }\r\n\r\n            stream = stream.stream;\r\n\r\n            var options = stream.currentUserMediaRequestOptions;\r\n\r\n            if (this.queueRequests.indexOf(options)) {\r\n                delete this.queueRequests[this.queueRequests.indexOf(options)];\r\n                this.queueRequests = removeNullEntries(this.queueRequests);\r\n            }\r\n\r\n            this.streams[idInstance].stream = null;\r\n            delete this.streams[idInstance];\r\n        }\r\n    };\r\n\r\n    function getUserMediaHandler(options) {\r\n        if (currentUserMediaRequest.mutex === true) {\r\n            currentUserMediaRequest.queueRequests.push(options);\r\n            return;\r\n        }\r\n        currentUserMediaRequest.mutex = true;\r\n\r\n        // easy way to match\r\n        var idInstance = JSON.stringify(options.localMediaConstraints);\r\n\r\n        function streaming(stream, returnBack) {\r\n            setStreamType(options.localMediaConstraints, stream);\r\n\r\n            var streamEndedEvent = 'ended';\r\n\r\n            if ('oninactive' in stream) {\r\n                streamEndedEvent = 'inactive';\r\n            }\r\n            stream.addEventListener(streamEndedEvent, function() {\r\n                delete currentUserMediaRequest.streams[idInstance];\r\n\r\n                currentUserMediaRequest.mutex = false;\r\n                if (currentUserMediaRequest.queueRequests.indexOf(options)) {\r\n                    delete currentUserMediaRequest.queueRequests[currentUserMediaRequest.queueRequests.indexOf(options)];\r\n                    currentUserMediaRequest.queueRequests = removeNullEntries(currentUserMediaRequest.queueRequests);\r\n                }\r\n            }, false);\r\n\r\n            currentUserMediaRequest.streams[idInstance] = {\r\n                stream: stream\r\n            };\r\n            currentUserMediaRequest.mutex = false;\r\n\r\n            if (currentUserMediaRequest.queueRequests.length) {\r\n                getUserMediaHandler(currentUserMediaRequest.queueRequests.shift());\r\n            }\r\n\r\n            // callback\r\n            options.onGettingLocalMedia(stream, returnBack);\r\n        }\r\n\r\n        if (currentUserMediaRequest.streams[idInstance]) {\r\n            streaming(currentUserMediaRequest.streams[idInstance].stream, true);\r\n        } else {\r\n            var isBlackBerry = !!(/BB10|BlackBerry/i.test(navigator.userAgent || ''));\r\n            if (isBlackBerry || typeof navigator.mediaDevices === 'undefined' || typeof navigator.mediaDevices.getUserMedia !== 'function') {\r\n                navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n                navigator.getUserMedia(options.localMediaConstraints, function(stream) {\r\n                    stream.streamid = stream.streamid || stream.id || getRandomString();\r\n                    stream.idInstance = idInstance;\r\n                    streaming(stream);\r\n                }, function(error) {\r\n                    options.onLocalMediaError(error, options.localMediaConstraints);\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (typeof navigator.mediaDevices === 'undefined') {\r\n                navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n                var getUserMediaSuccess = function() {};\r\n                var getUserMediaFailure = function() {};\r\n\r\n                var getUserMediaStream, getUserMediaError;\r\n                navigator.mediaDevices = {\r\n                    getUserMedia: function(hints) {\r\n                        navigator.getUserMedia(hints, function(getUserMediaSuccess) {\r\n                            getUserMediaSuccess(stream);\r\n                            getUserMediaStream = stream;\r\n                        }, function(error) {\r\n                            getUserMediaFailure(error);\r\n                            getUserMediaError = error;\r\n                        });\r\n\r\n                        return {\r\n                            then: function(successCB) {\r\n                                if (getUserMediaStream) {\r\n                                    successCB(getUserMediaStream);\r\n                                    return;\r\n                                }\r\n\r\n                                getUserMediaSuccess = successCB;\r\n\r\n                                return {\r\n                                    then: function(failureCB) {\r\n                                        if (getUserMediaError) {\r\n                                            failureCB(getUserMediaError);\r\n                                            return;\r\n                                        }\r\n\r\n                                        getUserMediaFailure = failureCB;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            if (options.localMediaConstraints.isScreen === true) {\r\n                if (navigator.mediaDevices.getDisplayMedia) {\r\n                    navigator.mediaDevices.getDisplayMedia(options.localMediaConstraints).then(function(stream) {\r\n                        stream.streamid = stream.streamid || stream.id || getRandomString();\r\n                        stream.idInstance = idInstance;\r\n\r\n                        streaming(stream);\r\n                    }).catch(function(error) {\r\n                        options.onLocalMediaError(error, options.localMediaConstraints);\r\n                    });\r\n                } else if (navigator.getDisplayMedia) {\r\n                    navigator.getDisplayMedia(options.localMediaConstraints).then(function(stream) {\r\n                        stream.streamid = stream.streamid || stream.id || getRandomString();\r\n                        stream.idInstance = idInstance;\r\n\r\n                        streaming(stream);\r\n                    }).catch(function(error) {\r\n                        options.onLocalMediaError(error, options.localMediaConstraints);\r\n                    });\r\n                } else {\r\n                    throw new Error('getDisplayMedia API is not availabe in this browser.');\r\n                }\r\n                return;\r\n            }\r\n\r\n            navigator.mediaDevices.getUserMedia(options.localMediaConstraints).then(function(stream) {\r\n                stream.streamid = stream.streamid || stream.id || getRandomString();\r\n                stream.idInstance = idInstance;\r\n\r\n                streaming(stream);\r\n            }).catch(function(error) {\r\n                options.onLocalMediaError(error, options.localMediaConstraints);\r\n            });\r\n        }\r\n    }\r\n\r\n    // StreamsHandler.js\r\n\r\n    var StreamsHandler = (function() {\r\n        function handleType(type) {\r\n            if (!type) {\r\n                return;\r\n            }\r\n\r\n            if (typeof type === 'string' || typeof type === 'undefined') {\r\n                return type;\r\n            }\r\n\r\n            if (type.audio && type.video) {\r\n                return null;\r\n            }\r\n\r\n            if (type.audio) {\r\n                return 'audio';\r\n            }\r\n\r\n            if (type.video) {\r\n                return 'video';\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        function setHandlers(stream, syncAction, connection) {\r\n            if (!stream || !stream.addEventListener) return;\r\n\r\n            if (typeof syncAction == 'undefined' || syncAction == true) {\r\n                var streamEndedEvent = 'ended';\r\n\r\n                if ('oninactive' in stream) {\r\n                    streamEndedEvent = 'inactive';\r\n                }\r\n\r\n                stream.addEventListener(streamEndedEvent, function() {\r\n                    StreamsHandler.onSyncNeeded(this.streamid, streamEndedEvent);\r\n                }, false);\r\n            }\r\n\r\n            stream.mute = function(type, isSyncAction) {\r\n                type = handleType(type);\r\n\r\n                if (typeof isSyncAction !== 'undefined') {\r\n                    syncAction = isSyncAction;\r\n                }\r\n\r\n                if (typeof type == 'undefined' || type == 'audio') {\r\n                    getTracks(stream, 'audio').forEach(function(track) {\r\n                        track.enabled = false;\r\n                        connection.streamEvents[stream.streamid].isAudioMuted = true;\r\n                    });\r\n                }\r\n\r\n                if (typeof type == 'undefined' || type == 'video') {\r\n                    getTracks(stream, 'video').forEach(function(track) {\r\n                        track.enabled = false;\r\n                    });\r\n                }\r\n\r\n                if (typeof syncAction == 'undefined' || syncAction == true) {\r\n                    StreamsHandler.onSyncNeeded(stream.streamid, 'mute', type);\r\n                }\r\n\r\n                connection.streamEvents[stream.streamid].muteType = type || 'both';\r\n\r\n                fireEvent(stream, 'mute', type);\r\n            };\r\n\r\n            stream.unmute = function(type, isSyncAction) {\r\n                type = handleType(type);\r\n\r\n                if (typeof isSyncAction !== 'undefined') {\r\n                    syncAction = isSyncAction;\r\n                }\r\n\r\n                graduallyIncreaseVolume();\r\n\r\n                if (typeof type == 'undefined' || type == 'audio') {\r\n                    getTracks(stream, 'audio').forEach(function(track) {\r\n                        track.enabled = true;\r\n                        connection.streamEvents[stream.streamid].isAudioMuted = false;\r\n                    });\r\n                }\r\n\r\n                if (typeof type == 'undefined' || type == 'video') {\r\n                    getTracks(stream, 'video').forEach(function(track) {\r\n                        track.enabled = true;\r\n                    });\r\n\r\n                    // make sure that video unmute doesn't affects audio\r\n                    if (typeof type !== 'undefined' && type == 'video' && connection.streamEvents[stream.streamid].isAudioMuted) {\r\n                        (function looper(times) {\r\n                            if (!times) {\r\n                                times = 0;\r\n                            }\r\n\r\n                            times++;\r\n\r\n                            // check until five-seconds\r\n                            if (times < 100 && connection.streamEvents[stream.streamid].isAudioMuted) {\r\n                                stream.mute('audio');\r\n\r\n                                setTimeout(function() {\r\n                                    looper(times);\r\n                                }, 50);\r\n                            }\r\n                        })();\r\n                    }\r\n                }\r\n\r\n                if (typeof syncAction == 'undefined' || syncAction == true) {\r\n                    StreamsHandler.onSyncNeeded(stream.streamid, 'unmute', type);\r\n                }\r\n\r\n                connection.streamEvents[stream.streamid].unmuteType = type || 'both';\r\n\r\n                fireEvent(stream, 'unmute', type);\r\n            };\r\n\r\n            function graduallyIncreaseVolume() {\r\n                if (!connection.streamEvents[stream.streamid].mediaElement) {\r\n                    return;\r\n                }\r\n\r\n                var mediaElement = connection.streamEvents[stream.streamid].mediaElement;\r\n                mediaElement.volume = 0;\r\n                afterEach(200, 5, function() {\r\n                    try {\r\n                        mediaElement.volume += .20;\r\n                    } catch (e) {\r\n                        mediaElement.volume = 1;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        function afterEach(setTimeoutInteval, numberOfTimes, callback, startedTimes) {\r\n            startedTimes = (startedTimes || 0) + 1;\r\n            if (startedTimes >= numberOfTimes) return;\r\n\r\n            setTimeout(function() {\r\n                callback();\r\n                afterEach(setTimeoutInteval, numberOfTimes, callback, startedTimes);\r\n            }, setTimeoutInteval);\r\n        }\r\n\r\n        return {\r\n            setHandlers: setHandlers,\r\n            onSyncNeeded: function(streamid, action, type) {}\r\n        };\r\n    })();\r\n\r\n    // TextReceiver.js & TextSender.js\r\n\r\n    function TextReceiver(connection) {\r\n        var content = {};\r\n\r\n        function receive(data, userid, extra) {\r\n            // uuid is used to uniquely identify sending instance\r\n            var uuid = data.uuid;\r\n            if (!content[uuid]) {\r\n                content[uuid] = [];\r\n            }\r\n\r\n            content[uuid].push(data.message);\r\n\r\n            if (data.last) {\r\n                var message = content[uuid].join('');\r\n                if (data.isobject) {\r\n                    message = JSON.parse(message);\r\n                }\r\n\r\n                // latency detection\r\n                var receivingTime = new Date().getTime();\r\n                var latency = receivingTime - data.sendingTime;\r\n\r\n                var e = {\r\n                    data: message,\r\n                    userid: userid,\r\n                    extra: extra,\r\n                    latency: latency\r\n                };\r\n\r\n                if (connection.autoTranslateText) {\r\n                    e.original = e.data;\r\n                    connection.Translator.TranslateText(e.data, function(translatedText) {\r\n                        e.data = translatedText;\r\n                        connection.onmessage(e);\r\n                    });\r\n                } else {\r\n                    connection.onmessage(e);\r\n                }\r\n\r\n                delete content[uuid];\r\n            }\r\n        }\r\n\r\n        return {\r\n            receive: receive\r\n        };\r\n    }\r\n\r\n    // TextSender.js\r\n    var TextSender = {\r\n        send: function(config) {\r\n            var connection = config.connection;\r\n\r\n            var channel = config.channel,\r\n                remoteUserId = config.remoteUserId,\r\n                initialText = config.text,\r\n                packetSize = connection.chunkSize || 1000,\r\n                textToTransfer = '',\r\n                isobject = false;\r\n\r\n            if (!isString(initialText)) {\r\n                isobject = true;\r\n                initialText = JSON.stringify(initialText);\r\n            }\r\n\r\n            // uuid is used to uniquely identify sending instance\r\n            var uuid = getRandomString();\r\n            var sendingTime = new Date().getTime();\r\n\r\n            sendText(initialText);\r\n\r\n            function sendText(textMessage, text) {\r\n                var data = {\r\n                    type: 'text',\r\n                    uuid: uuid,\r\n                    sendingTime: sendingTime\r\n                };\r\n\r\n                if (textMessage) {\r\n                    text = textMessage;\r\n                    data.packets = parseInt(text.length / packetSize);\r\n                }\r\n\r\n                if (text.length > packetSize) {\r\n                    data.message = text.slice(0, packetSize);\r\n                } else {\r\n                    data.message = text;\r\n                    data.last = true;\r\n                    data.isobject = isobject;\r\n                }\r\n\r\n                channel.send(data, remoteUserId);\r\n\r\n                textToTransfer = text.slice(data.message.length);\r\n\r\n                if (textToTransfer.length) {\r\n                    setTimeout(function() {\r\n                        sendText(null, textToTransfer);\r\n                    }, connection.chunkInterval || 100);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // FileProgressBarHandler.js\r\n\r\n    var FileProgressBarHandler = (function() {\r\n        function handle(connection) {\r\n            var progressHelper = {};\r\n\r\n            // www.RTCMultiConnection.org/docs/onFileStart/\r\n            connection.onFileStart = function(file) {\r\n                var div = document.createElement('div');\r\n                div.title = file.name;\r\n                div.innerHTML = '<label>0%</label> <progress></progress>';\r\n\r\n                if (file.remoteUserId) {\r\n                    div.innerHTML += ' (Sharing with:' + file.remoteUserId + ')';\r\n                }\r\n\r\n                if (!connection.filesContainer) {\r\n                    connection.filesContainer = document.body || document.documentElement;\r\n                }\r\n\r\n                connection.filesContainer.insertBefore(div, connection.filesContainer.firstChild);\r\n\r\n                if (!file.remoteUserId) {\r\n                    progressHelper[file.uuid] = {\r\n                        div: div,\r\n                        progress: div.querySelector('progress'),\r\n                        label: div.querySelector('label')\r\n                    };\r\n                    progressHelper[file.uuid].progress.max = file.maxChunks;\r\n                    return;\r\n                }\r\n\r\n                if (!progressHelper[file.uuid]) {\r\n                    progressHelper[file.uuid] = {};\r\n                }\r\n\r\n                progressHelper[file.uuid][file.remoteUserId] = {\r\n                    div: div,\r\n                    progress: div.querySelector('progress'),\r\n                    label: div.querySelector('label')\r\n                };\r\n                progressHelper[file.uuid][file.remoteUserId].progress.max = file.maxChunks;\r\n            };\r\n\r\n            // www.RTCMultiConnection.org/docs/onFileProgress/\r\n            connection.onFileProgress = function(chunk) {\r\n                var helper = progressHelper[chunk.uuid];\r\n                if (!helper) {\r\n                    return;\r\n                }\r\n                if (chunk.remoteUserId) {\r\n                    helper = progressHelper[chunk.uuid][chunk.remoteUserId];\r\n                    if (!helper) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                helper.progress.value = chunk.currentPosition || chunk.maxChunks || helper.progress.max;\r\n                updateLabel(helper.progress, helper.label);\r\n            };\r\n\r\n            // www.RTCMultiConnection.org/docs/onFileEnd/\r\n            connection.onFileEnd = function(file) {\r\n                var helper = progressHelper[file.uuid];\r\n                if (!helper) {\r\n                    console.error('No such progress-helper element exist.', file);\r\n                    return;\r\n                }\r\n\r\n                if (file.remoteUserId) {\r\n                    helper = progressHelper[file.uuid][file.remoteUserId];\r\n                    if (!helper) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                var div = helper.div;\r\n                if (file.type.indexOf('image') != -1) {\r\n                    div.innerHTML = '<a href=\"' + file.url + '\" download=\"' + file.name + '\">Download <strong style=\"color:red;\">' + file.name + '</strong> </a><br /><img src=\"' + file.url + '\" title=\"' + file.name + '\" style=\"max-width: 80%;\">';\r\n                } else {\r\n                    div.innerHTML = '<a href=\"' + file.url + '\" download=\"' + file.name + '\">Download <strong style=\"color:red;\">' + file.name + '</strong> </a><br /><iframe src=\"' + file.url + '\" title=\"' + file.name + '\" style=\"width: 80%;border: 0;height: inherit;margin-top:1em;\"></iframe>';\r\n                }\r\n            };\r\n\r\n            function updateLabel(progress, label) {\r\n                if (progress.position === -1) {\r\n                    return;\r\n                }\r\n\r\n                var position = +progress.position.toFixed(2).split('.')[1] || 100;\r\n                label.innerHTML = position + '%';\r\n            }\r\n        }\r\n\r\n        return {\r\n            handle: handle\r\n        };\r\n    })();\r\n\r\n    // TranslationHandler.js\r\n\r\n    var TranslationHandler = (function() {\r\n        function handle(connection) {\r\n            connection.autoTranslateText = false;\r\n            connection.language = 'en';\r\n            connection.googKey = 'AIzaSyCgB5hmFY74WYB-EoWkhr9cAGr6TiTHrEE';\r\n\r\n            // www.RTCMultiConnection.org/docs/Translator/\r\n            connection.Translator = {\r\n                TranslateText: function(text, callback) {\r\n                    // if(location.protocol === 'https:') return callback(text);\r\n\r\n                    var newScript = document.createElement('script');\r\n                    newScript.type = 'text/javascript';\r\n\r\n                    var sourceText = encodeURIComponent(text); // escape\r\n\r\n                    var randomNumber = 'method' + connection.token();\r\n                    window[randomNumber] = function(response) {\r\n                        if (response.data && response.data.translations[0] && callback) {\r\n                            callback(response.data.translations[0].translatedText);\r\n                            return;\r\n                        }\r\n\r\n                        if (response.error && response.error.message === 'Daily Limit Exceeded') {\r\n                            console.error('Text translation failed. Error message: \"Daily Limit Exceeded.\"');\r\n                            return;\r\n                        }\r\n\r\n                        if (response.error) {\r\n                            console.error(response.error.message);\r\n                            return;\r\n                        }\r\n\r\n                        console.error(response);\r\n                    };\r\n\r\n                    var source = 'https://www.googleapis.com/language/translate/v2?key=' + connection.googKey + '&target=' + (connection.language || 'en-US') + '&callback=window.' + randomNumber + '&q=' + sourceText;\r\n                    newScript.src = source;\r\n                    document.getElementsByTagName('head')[0].appendChild(newScript);\r\n                },\r\n                getListOfLanguages: function(callback) {\r\n                    var xhr = new XMLHttpRequest();\r\n                    xhr.onreadystatechange = function() {\r\n                        if (xhr.readyState == XMLHttpRequest.DONE) {\r\n                            var response = JSON.parse(xhr.responseText);\r\n\r\n                            if (response && response.data && response.data.languages) {\r\n                                callback(response.data.languages);\r\n                                return;\r\n                            }\r\n\r\n                            if (response.error && response.error.message === 'Daily Limit Exceeded') {\r\n                                console.error('Text translation failed. Error message: \"Daily Limit Exceeded.\"');\r\n                                return;\r\n                            }\r\n\r\n                            if (response.error) {\r\n                                console.error(response.error.message);\r\n                                return;\r\n                            }\r\n\r\n                            console.error(response);\r\n                        }\r\n                    }\r\n                    var url = 'https://www.googleapis.com/language/translate/v2/languages?key=' + connection.googKey + '&target=en';\r\n                    xhr.open('GET', url, true);\r\n                    xhr.send(null);\r\n                }\r\n            };\r\n        }\r\n\r\n        return {\r\n            handle: handle\r\n        };\r\n    })();\r\n\r\n    // _____________________\r\n    // RTCMultiConnection.js\r\n\r\n    (function(connection) {\r\n        forceOptions = forceOptions || {\r\n            useDefaultDevices: true\r\n        };\r\n\r\n        connection.channel = connection.sessionid = (roomid || location.href.replace(/\\/|:|#|\\?|\\$|\\^|%|\\.|`|~|!|\\+|@|\\[|\\||]|\\|*. /g, '').split('\\n').join('').split('\\r').join('')) + '';\r\n\r\n        var mPeer = new MultiPeers(connection);\r\n\r\n        var preventDuplicateOnStreamEvents = {};\r\n        mPeer.onGettingLocalMedia = function(stream, callback) {\r\n            callback = callback || function() {};\r\n\r\n            if (preventDuplicateOnStreamEvents[stream.streamid]) {\r\n                callback();\r\n                return;\r\n            }\r\n            preventDuplicateOnStreamEvents[stream.streamid] = true;\r\n\r\n            try {\r\n                stream.type = 'local';\r\n            } catch (e) {}\r\n\r\n            connection.setStreamEndHandler(stream);\r\n\r\n            getRMCMediaElement(stream, function(mediaElement) {\r\n                mediaElement.id = stream.streamid;\r\n                mediaElement.muted = true;\r\n                mediaElement.volume = 0;\r\n\r\n                if (connection.attachStreams.indexOf(stream) === -1) {\r\n                    connection.attachStreams.push(stream);\r\n                }\r\n\r\n                if (typeof StreamsHandler !== 'undefined') {\r\n                    StreamsHandler.setHandlers(stream, true, connection);\r\n                }\r\n\r\n                connection.streamEvents[stream.streamid] = {\r\n                    stream: stream,\r\n                    type: 'local',\r\n                    mediaElement: mediaElement,\r\n                    userid: connection.userid,\r\n                    extra: connection.extra,\r\n                    streamid: stream.streamid,\r\n                    isAudioMuted: true\r\n                };\r\n\r\n                try {\r\n                    setHarkEvents(connection, connection.streamEvents[stream.streamid]);\r\n                    setMuteHandlers(connection, connection.streamEvents[stream.streamid]);\r\n\r\n                    connection.onstream(connection.streamEvents[stream.streamid]);\r\n                } catch (e) {\r\n                    //\r\n                }\r\n\r\n                callback();\r\n            }, connection);\r\n        };\r\n\r\n        mPeer.onGettingRemoteMedia = function(stream, remoteUserId) {\r\n            try {\r\n                stream.type = 'remote';\r\n            } catch (e) {}\r\n\r\n            connection.setStreamEndHandler(stream, 'remote-stream');\r\n\r\n            getRMCMediaElement(stream, function(mediaElement) {\r\n                mediaElement.id = stream.streamid;\r\n\r\n                if (typeof StreamsHandler !== 'undefined') {\r\n                    StreamsHandler.setHandlers(stream, false, connection);\r\n                }\r\n\r\n                connection.streamEvents[stream.streamid] = {\r\n                    stream: stream,\r\n                    type: 'remote',\r\n                    userid: remoteUserId,\r\n                    extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {},\r\n                    mediaElement: mediaElement,\r\n                    streamid: stream.streamid\r\n                };\r\n\r\n                setMuteHandlers(connection, connection.streamEvents[stream.streamid]);\r\n\r\n                connection.onstream(connection.streamEvents[stream.streamid]);\r\n            }, connection);\r\n        };\r\n\r\n        mPeer.onRemovingRemoteMedia = function(stream, remoteUserId) {\r\n            var streamEvent = connection.streamEvents[stream.streamid];\r\n            if (!streamEvent) {\r\n                streamEvent = {\r\n                    stream: stream,\r\n                    type: 'remote',\r\n                    userid: remoteUserId,\r\n                    extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {},\r\n                    streamid: stream.streamid,\r\n                    mediaElement: connection.streamEvents[stream.streamid] ? connection.streamEvents[stream.streamid].mediaElement : null\r\n                };\r\n            }\r\n\r\n            if (connection.peersBackup[streamEvent.userid]) {\r\n                streamEvent.extra = connection.peersBackup[streamEvent.userid].extra;\r\n            }\r\n\r\n            connection.onstreamended(streamEvent);\r\n\r\n            delete connection.streamEvents[stream.streamid];\r\n        };\r\n\r\n        mPeer.onNegotiationNeeded = function(message, remoteUserId, callback) {\r\n            callback = callback || function() {};\r\n\r\n            remoteUserId = remoteUserId || message.remoteUserId;\r\n            message = message || '';\r\n\r\n            // usually a message looks like this\r\n            var messageToDeliver = {\r\n                remoteUserId: remoteUserId,\r\n                message: message,\r\n                sender: connection.userid\r\n            };\r\n\r\n            if (message.remoteUserId && message.message && message.sender) {\r\n                // if a code is manually passing required data\r\n                messageToDeliver = message;\r\n            }\r\n\r\n            connectSocket(function() {\r\n                connection.socket.emit(connection.socketMessageEvent, messageToDeliver, callback);\r\n            });\r\n        };\r\n\r\n        function onUserLeft(remoteUserId) {\r\n            connection.deletePeer(remoteUserId);\r\n        }\r\n\r\n        mPeer.onUserLeft = onUserLeft;\r\n        mPeer.disconnectWith = function(remoteUserId, callback) {\r\n            if (connection.socket) {\r\n                connection.socket.emit('disconnect-with', remoteUserId, callback || function() {});\r\n            }\r\n\r\n            connection.deletePeer(remoteUserId);\r\n        };\r\n\r\n        connection.socketOptions = {\r\n            // 'force new connection': true, // For SocketIO version < 1.0\r\n            // 'forceNew': true, // For SocketIO version >= 1.0\r\n            'transport': 'polling' // fixing transport:unknown issues\r\n        };\r\n\r\n        function connectSocket(connectCallback) {\r\n            connection.socketAutoReConnect = true;\r\n\r\n            if (connection.socket) { // todo: check here readySate/etc. to make sure socket is still opened\r\n                if (connectCallback) {\r\n                    connectCallback(connection.socket);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (typeof SocketConnection === 'undefined') {\r\n                if (typeof FirebaseConnection !== 'undefined') {\r\n                    window.SocketConnection = FirebaseConnection;\r\n                } else if (typeof PubNubConnection !== 'undefined') {\r\n                    window.SocketConnection = PubNubConnection;\r\n                } else {\r\n                    throw 'SocketConnection.js seems missed.';\r\n                }\r\n            }\r\n\r\n            new SocketConnection(connection, function(s) {\r\n                if (connectCallback) {\r\n                    connectCallback(connection.socket);\r\n                }\r\n            });\r\n        }\r\n\r\n        // 1st paramter is roomid\r\n        // 2rd paramter is a callback function\r\n        connection.openOrJoin = function(roomid, callback) {\r\n            callback = callback || function() {};\r\n\r\n            connection.checkPresence(roomid, function(isRoomExist, roomid) {\r\n                if (isRoomExist) {\r\n                    connection.sessionid = roomid;\r\n\r\n                    var localPeerSdpConstraints = false;\r\n                    var remotePeerSdpConstraints = false;\r\n                    var isOneWay = !!connection.session.oneway;\r\n                    var isDataOnly = isData(connection.session);\r\n\r\n                    remotePeerSdpConstraints = {\r\n                        OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    }\r\n\r\n                    localPeerSdpConstraints = {\r\n                        OfferToReceiveAudio: isOneWay ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: isOneWay ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    }\r\n\r\n                    var connectionDescription = {\r\n                        remoteUserId: connection.sessionid,\r\n                        message: {\r\n                            newParticipationRequest: true,\r\n                            isOneWay: isOneWay,\r\n                            isDataOnly: isDataOnly,\r\n                            localPeerSdpConstraints: localPeerSdpConstraints,\r\n                            remotePeerSdpConstraints: remotePeerSdpConstraints\r\n                        },\r\n                        sender: connection.userid\r\n                    };\r\n\r\n                    beforeJoin(connectionDescription.message, function() {\r\n                        joinRoom(connectionDescription, callback);\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                connection.waitingForLocalMedia = true;\r\n                connection.isInitiator = true;\r\n\r\n                connection.sessionid = roomid || connection.sessionid;\r\n\r\n                if (isData(connection.session)) {\r\n                    openRoom(callback);\r\n                    return;\r\n                }\r\n\r\n                connection.captureUserMedia(function() {\r\n                    openRoom(callback);\r\n                });\r\n            });\r\n        };\r\n\r\n        // don't allow someone to join this person until he has the media\r\n        connection.waitingForLocalMedia = false;\r\n\r\n        connection.open = function(roomid, callback) {\r\n            callback = callback || function() {};\r\n\r\n            connection.waitingForLocalMedia = true;\r\n            connection.isInitiator = true;\r\n\r\n            connection.sessionid = roomid || connection.sessionid;\r\n\r\n            connectSocket(function() {\r\n                if (isData(connection.session)) {\r\n                    openRoom(callback);\r\n                    return;\r\n                }\r\n\r\n                connection.captureUserMedia(function() {\r\n                    openRoom(callback);\r\n                });\r\n            });\r\n        };\r\n\r\n        // this object keeps extra-data records for all connected users\r\n        // this object is never cleared so you can always access extra-data even if a user left\r\n        connection.peersBackup = {};\r\n\r\n        connection.deletePeer = function(remoteUserId) {\r\n            if (!remoteUserId || !connection.peers[remoteUserId]) {\r\n                return;\r\n            }\r\n\r\n            var eventObject = {\r\n                userid: remoteUserId,\r\n                extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {}\r\n            };\r\n\r\n            if (connection.peersBackup[eventObject.userid]) {\r\n                eventObject.extra = connection.peersBackup[eventObject.userid].extra;\r\n            }\r\n\r\n            connection.onleave(eventObject);\r\n\r\n            if (!!connection.peers[remoteUserId]) {\r\n                connection.peers[remoteUserId].streams.forEach(function(stream) {\r\n                    stream.stop();\r\n                });\r\n\r\n                var peer = connection.peers[remoteUserId].peer;\r\n                if (peer && peer.iceConnectionState !== 'closed') {\r\n                    try {\r\n                        peer.close();\r\n                    } catch (e) {}\r\n                }\r\n\r\n                if (connection.peers[remoteUserId]) {\r\n                    connection.peers[remoteUserId].peer = null;\r\n                    delete connection.peers[remoteUserId];\r\n                }\r\n            }\r\n        }\r\n\r\n        connection.rejoin = function(connectionDescription) {\r\n            if (connection.isInitiator || !connectionDescription || !Object.keys(connectionDescription).length) {\r\n                return;\r\n            }\r\n\r\n            var extra = {};\r\n\r\n            if (connection.peers[connectionDescription.remoteUserId]) {\r\n                extra = connection.peers[connectionDescription.remoteUserId].extra;\r\n                connection.deletePeer(connectionDescription.remoteUserId);\r\n            }\r\n\r\n            if (connectionDescription && connectionDescription.remoteUserId) {\r\n                connection.join(connectionDescription.remoteUserId);\r\n\r\n                connection.onReConnecting({\r\n                    userid: connectionDescription.remoteUserId,\r\n                    extra: extra\r\n                });\r\n            }\r\n        };\r\n\r\n        connection.join = function(remoteUserId, options) {\r\n            connection.sessionid = (remoteUserId ? remoteUserId.sessionid || remoteUserId.remoteUserId || remoteUserId : false) || connection.sessionid;\r\n            connection.sessionid += '';\r\n\r\n            var localPeerSdpConstraints = false;\r\n            var remotePeerSdpConstraints = false;\r\n            var isOneWay = false;\r\n            var isDataOnly = false;\r\n\r\n            if ((remoteUserId && remoteUserId.session) || !remoteUserId || typeof remoteUserId === 'string') {\r\n                var session = remoteUserId ? remoteUserId.session || connection.session : connection.session;\r\n\r\n                isOneWay = !!session.oneway;\r\n                isDataOnly = isData(session);\r\n\r\n                remotePeerSdpConstraints = {\r\n                    OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                    OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                };\r\n\r\n                localPeerSdpConstraints = {\r\n                    OfferToReceiveAudio: isOneWay ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                    OfferToReceiveVideo: isOneWay ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                };\r\n            }\r\n\r\n            options = options || {};\r\n\r\n            var cb = function() {};\r\n            if (typeof options === 'function') {\r\n                cb = options;\r\n                options = {};\r\n            }\r\n\r\n            if (typeof options.localPeerSdpConstraints !== 'undefined') {\r\n                localPeerSdpConstraints = options.localPeerSdpConstraints;\r\n            }\r\n\r\n            if (typeof options.remotePeerSdpConstraints !== 'undefined') {\r\n                remotePeerSdpConstraints = options.remotePeerSdpConstraints;\r\n            }\r\n\r\n            if (typeof options.isOneWay !== 'undefined') {\r\n                isOneWay = options.isOneWay;\r\n            }\r\n\r\n            if (typeof options.isDataOnly !== 'undefined') {\r\n                isDataOnly = options.isDataOnly;\r\n            }\r\n\r\n            var connectionDescription = {\r\n                remoteUserId: connection.sessionid,\r\n                message: {\r\n                    newParticipationRequest: true,\r\n                    isOneWay: isOneWay,\r\n                    isDataOnly: isDataOnly,\r\n                    localPeerSdpConstraints: localPeerSdpConstraints,\r\n                    remotePeerSdpConstraints: remotePeerSdpConstraints\r\n                },\r\n                sender: connection.userid\r\n            };\r\n\r\n            beforeJoin(connectionDescription.message, function() {\r\n                connectSocket(function() {\r\n                    joinRoom(connectionDescription, cb);\r\n                });\r\n            });\r\n            return connectionDescription;\r\n        };\r\n\r\n        function joinRoom(connectionDescription, cb) {\r\n            connection.socket.emit('join-room', {\r\n                sessionid: connection.sessionid,\r\n                session: connection.session,\r\n                mediaConstraints: connection.mediaConstraints,\r\n                sdpConstraints: connection.sdpConstraints,\r\n                streams: getStreamInfoForAdmin(),\r\n                extra: connection.extra,\r\n                password: typeof connection.password !== 'undefined' && typeof connection.password !== 'object' ? connection.password : ''\r\n            }, function(isRoomJoined, error) {\r\n                if (isRoomJoined === true) {\r\n                    if (connection.enableLogs) {\r\n                        console.log('isRoomJoined: ', isRoomJoined, ' roomid: ', connection.sessionid);\r\n                    }\r\n\r\n                    if (!!connection.peers[connection.sessionid]) {\r\n                        // on socket disconnect & reconnect\r\n                        return;\r\n                    }\r\n\r\n                    mPeer.onNegotiationNeeded(connectionDescription);\r\n                }\r\n\r\n                if (isRoomJoined === false) {\r\n                    if (connection.enableLogs) {\r\n                        console.warn('isRoomJoined: ', error, ' roomid: ', connection.sessionid);\r\n                    }\r\n\r\n                    // [disabled] retry after 3 seconds\r\n                    false && setTimeout(function() {\r\n                        joinRoom(connectionDescription, cb);\r\n                    }, 3000);\r\n                }\r\n\r\n                cb(isRoomJoined, connection.sessionid, error);\r\n            });\r\n        }\r\n\r\n        connection.publicRoomIdentifier = '';\r\n\r\n        function openRoom(callback) {\r\n            if (connection.enableLogs) {\r\n                console.log('Sending open-room signal to socket.io');\r\n            }\r\n\r\n            connection.waitingForLocalMedia = false;\r\n            connection.socket.emit('open-room', {\r\n                sessionid: connection.sessionid,\r\n                session: connection.session,\r\n                mediaConstraints: connection.mediaConstraints,\r\n                sdpConstraints: connection.sdpConstraints,\r\n                streams: getStreamInfoForAdmin(),\r\n                extra: connection.extra,\r\n                identifier: connection.publicRoomIdentifier,\r\n                password: typeof connection.password !== 'undefined' && typeof connection.password !== 'object' ? connection.password : ''\r\n            }, function(isRoomOpened, error) {\r\n                if (isRoomOpened === true) {\r\n                    if (connection.enableLogs) {\r\n                        console.log('isRoomOpened: ', isRoomOpened, ' roomid: ', connection.sessionid);\r\n                    }\r\n                    callback(isRoomOpened, connection.sessionid);\r\n                }\r\n\r\n                if (isRoomOpened === false) {\r\n                    if (connection.enableLogs) {\r\n                        console.warn('isRoomOpened: ', error, ' roomid: ', connection.sessionid);\r\n                    }\r\n\r\n                    callback(isRoomOpened, connection.sessionid, error);\r\n                }\r\n            });\r\n        }\r\n\r\n        function getStreamInfoForAdmin() {\r\n            try {\r\n                return connection.streamEvents.selectAll('local').map(function(event) {\r\n                    return {\r\n                        streamid: event.streamid,\r\n                        tracks: event.stream.getTracks().length\r\n                    };\r\n                });\r\n            } catch (e) {\r\n                return [];\r\n            }\r\n        }\r\n\r\n        function beforeJoin(userPreferences, callback) {\r\n            if (connection.dontCaptureUserMedia || userPreferences.isDataOnly) {\r\n                callback();\r\n                return;\r\n            }\r\n\r\n            var localMediaConstraints = {};\r\n\r\n            if (userPreferences.localPeerSdpConstraints.OfferToReceiveAudio) {\r\n                localMediaConstraints.audio = connection.mediaConstraints.audio;\r\n            }\r\n\r\n            if (userPreferences.localPeerSdpConstraints.OfferToReceiveVideo) {\r\n                localMediaConstraints.video = connection.mediaConstraints.video;\r\n            }\r\n\r\n            var session = userPreferences.session || connection.session;\r\n\r\n            if (session.oneway && session.audio !== 'two-way' && session.video !== 'two-way' && session.screen !== 'two-way') {\r\n                callback();\r\n                return;\r\n            }\r\n\r\n            if (session.oneway && session.audio && session.audio === 'two-way') {\r\n                session = {\r\n                    audio: true\r\n                };\r\n            }\r\n\r\n            if (session.audio || session.video || session.screen) {\r\n                if (session.screen) {\r\n                    if (DetectRTC.browser.name === 'Edge') {\r\n                        navigator.getDisplayMedia({\r\n                            video: true,\r\n                            audio: isAudioPlusTab(connection)\r\n                        }).then(function(screen) {\r\n                            screen.isScreen = true;\r\n                            mPeer.onGettingLocalMedia(screen);\r\n\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                connection.invokeGetUserMedia(null, callback);\r\n                            } else {\r\n                                callback(screen);\r\n                            }\r\n                        }, function(error) {\r\n                            console.error('Unable to capture screen on Edge. HTTPs and version 17+ is required.');\r\n                        });\r\n                    } else {\r\n                        connection.invokeGetUserMedia({\r\n                            audio: isAudioPlusTab(connection),\r\n                            video: true,\r\n                            isScreen: true\r\n                        }, (session.audio || session.video) && !isAudioPlusTab(connection) ? connection.invokeGetUserMedia(null, callback) : callback);\r\n                    }\r\n                } else if (session.audio || session.video) {\r\n                    connection.invokeGetUserMedia(null, callback, session);\r\n                }\r\n            }\r\n        }\r\n\r\n        connection.getUserMedia = connection.captureUserMedia = function(callback, sessionForced) {\r\n            callback = callback || function() {};\r\n            var session = sessionForced || connection.session;\r\n\r\n            if (connection.dontCaptureUserMedia || isData(session)) {\r\n                callback();\r\n                return;\r\n            }\r\n\r\n            if (session.audio || session.video || session.screen) {\r\n                if (session.screen) {\r\n                    if (DetectRTC.browser.name === 'Edge') {\r\n                        navigator.getDisplayMedia({\r\n                            video: true,\r\n                            audio: isAudioPlusTab(connection)\r\n                        }).then(function(screen) {\r\n                            screen.isScreen = true;\r\n                            mPeer.onGettingLocalMedia(screen);\r\n\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                var nonScreenSession = {};\r\n                                for (var s in session) {\r\n                                    if (s !== 'screen') {\r\n                                        nonScreenSession[s] = session[s];\r\n                                    }\r\n                                }\r\n                                connection.invokeGetUserMedia(sessionForced, callback, nonScreenSession);\r\n                                return;\r\n                            }\r\n                            callback(screen);\r\n                        }, function(error) {\r\n                            console.error('Unable to capture screen on Edge. HTTPs and version 17+ is required.');\r\n                        });\r\n                    } else {\r\n                        connection.invokeGetUserMedia({\r\n                            audio: isAudioPlusTab(connection),\r\n                            video: true,\r\n                            isScreen: true\r\n                        }, function(stream) {\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                var nonScreenSession = {};\r\n                                for (var s in session) {\r\n                                    if (s !== 'screen') {\r\n                                        nonScreenSession[s] = session[s];\r\n                                    }\r\n                                }\r\n                                connection.invokeGetUserMedia(sessionForced, callback, nonScreenSession);\r\n                                return;\r\n                            }\r\n                            callback(stream);\r\n                        });\r\n                    }\r\n                } else if (session.audio || session.video) {\r\n                    connection.invokeGetUserMedia(sessionForced, callback, session);\r\n                }\r\n            }\r\n        };\r\n\r\n        connection.onbeforeunload = function(arg1, dontCloseSocket) {\r\n            if (!connection.closeBeforeUnload) {\r\n                return;\r\n            }\r\n\r\n            connection.peers.getAllParticipants().forEach(function(participant) {\r\n                mPeer.onNegotiationNeeded({\r\n                    userLeft: true\r\n                }, participant);\r\n\r\n                if (connection.peers[participant] && connection.peers[participant].peer) {\r\n                    connection.peers[participant].peer.close();\r\n                }\r\n\r\n                delete connection.peers[participant];\r\n            });\r\n\r\n            if (!dontCloseSocket) {\r\n                connection.closeSocket();\r\n            }\r\n\r\n            connection.isInitiator = false;\r\n        };\r\n\r\n        if (!window.ignoreBeforeUnload) {\r\n            // user can implement its own version of window.onbeforeunload\r\n            connection.closeBeforeUnload = true;\r\n            window.addEventListener('beforeunload', connection.onbeforeunload, false);\r\n        } else {\r\n            connection.closeBeforeUnload = false;\r\n        }\r\n\r\n        connection.userid = getRandomString();\r\n        connection.changeUserId = function(newUserId, callback) {\r\n            callback = callback || function() {};\r\n            connection.userid = newUserId || getRandomString();\r\n            connection.socket.emit('changed-uuid', connection.userid, callback);\r\n        };\r\n\r\n        connection.extra = {};\r\n        connection.attachStreams = [];\r\n\r\n        connection.session = {\r\n            audio: true,\r\n            video: true\r\n        };\r\n\r\n        connection.enableFileSharing = false;\r\n\r\n        // all values in kbps\r\n        connection.bandwidth = {\r\n            screen: false,\r\n            audio: false,\r\n            video: false\r\n        };\r\n\r\n        connection.codecs = {\r\n            audio: 'opus',\r\n            video: 'VP9'\r\n        };\r\n\r\n        connection.processSdp = function(sdp) {\r\n            // ignore SDP modification if unified-pan is supported\r\n            if (isUnifiedPlanSupportedDefault()) {\r\n                return sdp;\r\n            }\r\n\r\n            if (DetectRTC.browser.name === 'Safari') {\r\n                return sdp;\r\n            }\r\n\r\n            if (connection.codecs.video.toUpperCase() === 'VP8') {\r\n                sdp = CodecsHandler.preferCodec(sdp, 'vp8');\r\n            }\r\n\r\n            if (connection.codecs.video.toUpperCase() === 'VP9') {\r\n                sdp = CodecsHandler.preferCodec(sdp, 'vp9');\r\n            }\r\n\r\n            if (connection.codecs.video.toUpperCase() === 'H264') {\r\n                sdp = CodecsHandler.preferCodec(sdp, 'h264');\r\n            }\r\n\r\n            if (connection.codecs.audio === 'G722') {\r\n                sdp = CodecsHandler.removeNonG722(sdp);\r\n            }\r\n\r\n            if (DetectRTC.browser.name === 'Firefox') {\r\n                return sdp;\r\n            }\r\n\r\n            if (connection.bandwidth.video || connection.bandwidth.screen) {\r\n                sdp = CodecsHandler.setApplicationSpecificBandwidth(sdp, connection.bandwidth, !!connection.session.screen);\r\n            }\r\n\r\n            if (connection.bandwidth.video) {\r\n                sdp = CodecsHandler.setVideoBitrates(sdp, {\r\n                    min: connection.bandwidth.video * 8 * 1024,\r\n                    max: connection.bandwidth.video * 8 * 1024\r\n                });\r\n            }\r\n\r\n            if (connection.bandwidth.audio) {\r\n                sdp = CodecsHandler.setOpusAttributes(sdp, {\r\n                    maxaveragebitrate: connection.bandwidth.audio * 8 * 1024,\r\n                    maxplaybackrate: connection.bandwidth.audio * 8 * 1024,\r\n                    stereo: 1,\r\n                    maxptime: 3\r\n                });\r\n            }\r\n\r\n            return sdp;\r\n        };\r\n\r\n        if (typeof CodecsHandler !== 'undefined') {\r\n            connection.BandwidthHandler = connection.CodecsHandler = CodecsHandler;\r\n        }\r\n\r\n        connection.mediaConstraints = {\r\n            audio: {\r\n                mandatory: {},\r\n                optional: connection.bandwidth.audio ? [{\r\n                    bandwidth: connection.bandwidth.audio * 8 * 1024 || 128 * 8 * 1024\r\n                }] : []\r\n            },\r\n            video: {\r\n                mandatory: {},\r\n                optional: connection.bandwidth.video ? [{\r\n                    bandwidth: connection.bandwidth.video * 8 * 1024 || 128 * 8 * 1024\r\n                }, {\r\n                    facingMode: 'user'\r\n                }] : [{\r\n                    facingMode: 'user'\r\n                }]\r\n            }\r\n        };\r\n\r\n        if (DetectRTC.browser.name === 'Firefox') {\r\n            connection.mediaConstraints = {\r\n                audio: true,\r\n                video: true\r\n            };\r\n        }\r\n\r\n        if (!forceOptions.useDefaultDevices && !DetectRTC.isMobileDevice) {\r\n            DetectRTC.load(function() {\r\n                var lastAudioDevice, lastVideoDevice;\r\n                // it will force RTCMultiConnection to capture last-devices\r\n                // i.e. if external microphone is attached to system, we should prefer it over built-in devices.\r\n                DetectRTC.MediaDevices.forEach(function(device) {\r\n                    if (device.kind === 'audioinput' && connection.mediaConstraints.audio !== false) {\r\n                        lastAudioDevice = device;\r\n                    }\r\n\r\n                    if (device.kind === 'videoinput' && connection.mediaConstraints.video !== false) {\r\n                        lastVideoDevice = device;\r\n                    }\r\n                });\r\n\r\n                if (lastAudioDevice) {\r\n                    if (DetectRTC.browser.name === 'Firefox') {\r\n                        if (connection.mediaConstraints.audio !== true) {\r\n                            connection.mediaConstraints.audio.deviceId = lastAudioDevice.id;\r\n                        } else {\r\n                            connection.mediaConstraints.audio = {\r\n                                deviceId: lastAudioDevice.id\r\n                            }\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    if (connection.mediaConstraints.audio == true) {\r\n                        connection.mediaConstraints.audio = {\r\n                            mandatory: {},\r\n                            optional: []\r\n                        }\r\n                    }\r\n\r\n                    if (!connection.mediaConstraints.audio.optional) {\r\n                        connection.mediaConstraints.audio.optional = [];\r\n                    }\r\n\r\n                    var optional = [{\r\n                        sourceId: lastAudioDevice.id\r\n                    }];\r\n\r\n                    connection.mediaConstraints.audio.optional = optional.concat(connection.mediaConstraints.audio.optional);\r\n                }\r\n\r\n                if (lastVideoDevice) {\r\n                    if (DetectRTC.browser.name === 'Firefox') {\r\n                        if (connection.mediaConstraints.video !== true) {\r\n                            connection.mediaConstraints.video.deviceId = lastVideoDevice.id;\r\n                        } else {\r\n                            connection.mediaConstraints.video = {\r\n                                deviceId: lastVideoDevice.id\r\n                            }\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    if (connection.mediaConstraints.video == true) {\r\n                        connection.mediaConstraints.video = {\r\n                            mandatory: {},\r\n                            optional: []\r\n                        }\r\n                    }\r\n\r\n                    if (!connection.mediaConstraints.video.optional) {\r\n                        connection.mediaConstraints.video.optional = [];\r\n                    }\r\n\r\n                    var optional = [{\r\n                        sourceId: lastVideoDevice.id\r\n                    }];\r\n\r\n                    connection.mediaConstraints.video.optional = optional.concat(connection.mediaConstraints.video.optional);\r\n                }\r\n            });\r\n        }\r\n\r\n        connection.sdpConstraints = {\r\n            mandatory: {\r\n                OfferToReceiveAudio: true,\r\n                OfferToReceiveVideo: true\r\n            },\r\n            optional: [{\r\n                VoiceActivityDetection: false\r\n            }]\r\n        };\r\n\r\n        connection.sdpSemantics = null; // \"unified-plan\" or \"plan-b\", ref: webrtc.org/web-apis/chrome/unified-plan/\r\n        connection.iceCandidatePoolSize = null; // 0\r\n        connection.bundlePolicy = null; // max-bundle\r\n        connection.rtcpMuxPolicy = null; // \"require\" or \"negotiate\"\r\n        connection.iceTransportPolicy = null; // \"relay\" or \"all\"\r\n        connection.optionalArgument = {\r\n            optional: [{\r\n                DtlsSrtpKeyAgreement: true\r\n            }, {\r\n                googImprovedWifiBwe: true\r\n            }, {\r\n                googScreencastMinBitrate: 300\r\n            }, {\r\n                googIPv6: true\r\n            }, {\r\n                googDscp: true\r\n            }, {\r\n                googCpuUnderuseThreshold: 55\r\n            }, {\r\n                googCpuOveruseThreshold: 85\r\n            }, {\r\n                googSuspendBelowMinBitrate: true\r\n            }, {\r\n                googCpuOveruseDetection: true\r\n            }],\r\n            mandatory: {}\r\n        };\r\n\r\n        connection.iceServers = IceServersHandler.getIceServers(connection);\r\n\r\n        connection.candidates = {\r\n            host: true,\r\n            stun: true,\r\n            turn: true\r\n        };\r\n\r\n        connection.iceProtocols = {\r\n            tcp: true,\r\n            udp: true\r\n        };\r\n\r\n        // EVENTs\r\n        connection.onopen = function(event) {\r\n            if (!!connection.enableLogs) {\r\n                console.info('Data connection has been opened between you & ', event.userid);\r\n            }\r\n        };\r\n\r\n        connection.onclose = function(event) {\r\n            if (!!connection.enableLogs) {\r\n                console.warn('Data connection has been closed between you & ', event.userid);\r\n            }\r\n        };\r\n\r\n        connection.onerror = function(error) {\r\n            if (!!connection.enableLogs) {\r\n                console.error(error.userid, 'data-error', error);\r\n            }\r\n        };\r\n\r\n        connection.onmessage = function(event) {\r\n            if (!!connection.enableLogs) {\r\n                console.debug('data-message', event.userid, event.data);\r\n            }\r\n        };\r\n\r\n        connection.send = function(data, remoteUserId) {\r\n            connection.peers.send(data, remoteUserId);\r\n        };\r\n\r\n        connection.close = connection.disconnect = connection.leave = function() {\r\n            connection.onbeforeunload(false, true);\r\n        };\r\n\r\n        connection.closeEntireSession = function(callback) {\r\n            callback = callback || function() {};\r\n            connection.socket.emit('close-entire-session', function looper() {\r\n                if (connection.getAllParticipants().length) {\r\n                    setTimeout(looper, 100);\r\n                    return;\r\n                }\r\n\r\n                connection.onEntireSessionClosed({\r\n                    sessionid: connection.sessionid,\r\n                    userid: connection.userid,\r\n                    extra: connection.extra\r\n                });\r\n\r\n                connection.changeUserId(null, function() {\r\n                    connection.close();\r\n                    callback();\r\n                });\r\n            });\r\n        };\r\n\r\n        connection.onEntireSessionClosed = function(event) {\r\n            if (!connection.enableLogs) return;\r\n            console.info('Entire session is closed: ', event.sessionid, event.extra);\r\n        };\r\n\r\n        connection.onstream = function(e) {\r\n            var parentNode = connection.videosContainer;\r\n            parentNode.insertBefore(e.mediaElement, parentNode.firstChild);\r\n            var played = e.mediaElement.play();\r\n\r\n            if (typeof played !== 'undefined') {\r\n                played.catch(function() {\r\n                    /*** iOS 11 doesn't allow automatic play and rejects ***/\r\n                }).then(function() {\r\n                    setTimeout(function() {\r\n                        e.mediaElement.play();\r\n                    }, 2000);\r\n                });\r\n                return;\r\n            }\r\n\r\n            setTimeout(function() {\r\n                e.mediaElement.play();\r\n            }, 2000);\r\n        };\r\n\r\n        connection.onstreamended = function(e) {\r\n            if (!e.mediaElement) {\r\n                e.mediaElement = document.getElementById(e.streamid);\r\n            }\r\n\r\n            if (!e.mediaElement || !e.mediaElement.parentNode) {\r\n                return;\r\n            }\r\n\r\n            e.mediaElement.parentNode.removeChild(e.mediaElement);\r\n        };\r\n\r\n        connection.direction = 'many-to-many';\r\n\r\n        connection.removeStream = function(streamid, remoteUserId) {\r\n            var stream;\r\n            connection.attachStreams.forEach(function(localStream) {\r\n                if (localStream.id === streamid) {\r\n                    stream = localStream;\r\n                }\r\n            });\r\n\r\n            if (!stream) {\r\n                console.warn('No such stream exist.', streamid);\r\n                return;\r\n            }\r\n\r\n            connection.peers.getAllParticipants().forEach(function(participant) {\r\n                if (remoteUserId && participant !== remoteUserId) {\r\n                    return;\r\n                }\r\n\r\n                var user = connection.peers[participant];\r\n                try {\r\n                    user.peer.removeStream(stream);\r\n                } catch (e) {}\r\n            });\r\n\r\n            connection.renegotiate();\r\n        };\r\n\r\n        connection.addStream = function(session, remoteUserId) {\r\n            if (!!session.getTracks) {\r\n                if (connection.attachStreams.indexOf(session) === -1) {\r\n                    if (!session.streamid) {\r\n                        session.streamid = session.id;\r\n                    }\r\n\r\n                    connection.attachStreams.push(session);\r\n                }\r\n                connection.renegotiate(remoteUserId);\r\n                return;\r\n            }\r\n\r\n            if (isData(session)) {\r\n                connection.renegotiate(remoteUserId);\r\n                return;\r\n            }\r\n\r\n            if (session.audio || session.video || session.screen) {\r\n                if (session.screen) {\r\n                    if (DetectRTC.browser.name === 'Edge') {\r\n                        navigator.getDisplayMedia({\r\n                            video: true,\r\n                            audio: isAudioPlusTab(connection)\r\n                        }).then(function(screen) {\r\n                            screen.isScreen = true;\r\n                            mPeer.onGettingLocalMedia(screen);\r\n\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                connection.invokeGetUserMedia(null, function(stream) {\r\n                                    gumCallback(stream);\r\n                                });\r\n                            } else {\r\n                                gumCallback(screen);\r\n                            }\r\n                        }, function(error) {\r\n                            console.error('Unable to capture screen on Edge. HTTPs and version 17+ is required.');\r\n                        });\r\n                    } else {\r\n                        connection.invokeGetUserMedia({\r\n                            audio: isAudioPlusTab(connection),\r\n                            video: true,\r\n                            isScreen: true\r\n                        }, function(stream) {\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                connection.invokeGetUserMedia(null, function(stream) {\r\n                                    gumCallback(stream);\r\n                                });\r\n                            } else {\r\n                                gumCallback(stream);\r\n                            }\r\n                        });\r\n                    }\r\n                } else if (session.audio || session.video) {\r\n                    connection.invokeGetUserMedia(null, gumCallback);\r\n                }\r\n            }\r\n\r\n            function gumCallback(stream) {\r\n                if (session.streamCallback) {\r\n                    session.streamCallback(stream);\r\n                }\r\n\r\n                connection.renegotiate(remoteUserId);\r\n            }\r\n        };\r\n\r\n        connection.invokeGetUserMedia = function(localMediaConstraints, callback, session) {\r\n            if (!session) {\r\n                session = connection.session;\r\n            }\r\n\r\n            if (!localMediaConstraints) {\r\n                localMediaConstraints = connection.mediaConstraints;\r\n            }\r\n\r\n            getUserMediaHandler({\r\n                onGettingLocalMedia: function(stream) {\r\n                    var videoConstraints = localMediaConstraints.video;\r\n                    if (videoConstraints) {\r\n                        if (videoConstraints.mediaSource || videoConstraints.mozMediaSource) {\r\n                            stream.isScreen = true;\r\n                        } else if (videoConstraints.mandatory && videoConstraints.mandatory.chromeMediaSource) {\r\n                            stream.isScreen = true;\r\n                        }\r\n                    }\r\n\r\n                    if (!stream.isScreen) {\r\n                        stream.isVideo = !!getTracks(stream, 'video').length;\r\n                        stream.isAudio = !stream.isVideo && getTracks(stream, 'audio').length;\r\n                    }\r\n\r\n                    mPeer.onGettingLocalMedia(stream, function() {\r\n                        if (typeof callback === 'function') {\r\n                            callback(stream);\r\n                        }\r\n                    });\r\n                },\r\n                onLocalMediaError: function(error, constraints) {\r\n                    mPeer.onLocalMediaError(error, constraints);\r\n                },\r\n                localMediaConstraints: localMediaConstraints || {\r\n                    audio: session.audio ? localMediaConstraints.audio : false,\r\n                    video: session.video ? localMediaConstraints.video : false\r\n                }\r\n            });\r\n        };\r\n\r\n        function applyConstraints(stream, mediaConstraints) {\r\n            if (!stream) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('No stream to applyConstraints.');\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (mediaConstraints.audio) {\r\n                getTracks(stream, 'audio').forEach(function(track) {\r\n                    track.applyConstraints(mediaConstraints.audio);\r\n                });\r\n            }\r\n\r\n            if (mediaConstraints.video) {\r\n                getTracks(stream, 'video').forEach(function(track) {\r\n                    track.applyConstraints(mediaConstraints.video);\r\n                });\r\n            }\r\n        }\r\n\r\n        connection.applyConstraints = function(mediaConstraints, streamid) {\r\n            if (!MediaStreamTrack || !MediaStreamTrack.prototype.applyConstraints) {\r\n                alert('track.applyConstraints is NOT supported in your browser.');\r\n                return;\r\n            }\r\n\r\n            if (streamid) {\r\n                var stream;\r\n                if (connection.streamEvents[streamid]) {\r\n                    stream = connection.streamEvents[streamid].stream;\r\n                }\r\n                applyConstraints(stream, mediaConstraints);\r\n                return;\r\n            }\r\n\r\n            connection.attachStreams.forEach(function(stream) {\r\n                applyConstraints(stream, mediaConstraints);\r\n            });\r\n        };\r\n\r\n        function replaceTrack(track, remoteUserId, isVideoTrack) {\r\n            if (remoteUserId) {\r\n                mPeer.replaceTrack(track, remoteUserId, isVideoTrack);\r\n                return;\r\n            }\r\n\r\n            connection.peers.getAllParticipants().forEach(function(participant) {\r\n                mPeer.replaceTrack(track, participant, isVideoTrack);\r\n            });\r\n        }\r\n\r\n        connection.replaceTrack = function(session, remoteUserId, isVideoTrack) {\r\n            session = session || {};\r\n\r\n            if (!RTCPeerConnection.prototype.getSenders) {\r\n                connection.addStream(session);\r\n                return;\r\n            }\r\n\r\n            if (session instanceof MediaStreamTrack) {\r\n                replaceTrack(session, remoteUserId, isVideoTrack);\r\n                return;\r\n            }\r\n\r\n            if (session instanceof MediaStream) {\r\n                if (getTracks(session, 'video').length) {\r\n                    replaceTrack(getTracks(session, 'video')[0], remoteUserId, true);\r\n                }\r\n\r\n                if (getTracks(session, 'audio').length) {\r\n                    replaceTrack(getTracks(session, 'audio')[0], remoteUserId, false);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (isData(session)) {\r\n                throw 'connection.replaceTrack requires audio and/or video and/or screen.';\r\n                return;\r\n            }\r\n\r\n            if (session.audio || session.video || session.screen) {\r\n                if (session.screen) {\r\n                    if (DetectRTC.browser.name === 'Edge') {\r\n                        navigator.getDisplayMedia({\r\n                            video: true,\r\n                            audio: isAudioPlusTab(connection)\r\n                        }).then(function(screen) {\r\n                            screen.isScreen = true;\r\n                            mPeer.onGettingLocalMedia(screen);\r\n\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                connection.invokeGetUserMedia(null, gumCallback);\r\n                            } else {\r\n                                gumCallback(screen);\r\n                            }\r\n                        }, function(error) {\r\n                            console.error('Unable to capture screen on Edge. HTTPs and version 17+ is required.');\r\n                        });\r\n                    } else {\r\n                        connection.invokeGetUserMedia({\r\n                            audio: isAudioPlusTab(connection),\r\n                            video: true,\r\n                            isScreen: true\r\n                        }, (session.audio || session.video) && !isAudioPlusTab(connection) ? connection.invokeGetUserMedia(null, gumCallback) : gumCallback);\r\n                    }\r\n                } else if (session.audio || session.video) {\r\n                    connection.invokeGetUserMedia(null, gumCallback);\r\n                }\r\n            }\r\n\r\n            function gumCallback(stream) {\r\n                connection.replaceTrack(stream, remoteUserId, isVideoTrack || session.video || session.screen);\r\n            }\r\n        };\r\n\r\n        connection.resetTrack = function(remoteUsersIds, isVideoTrack) {\r\n            if (!remoteUsersIds) {\r\n                remoteUsersIds = connection.getAllParticipants();\r\n            }\r\n\r\n            if (typeof remoteUsersIds == 'string') {\r\n                remoteUsersIds = [remoteUsersIds];\r\n            }\r\n\r\n            remoteUsersIds.forEach(function(participant) {\r\n                var peer = connection.peers[participant].peer;\r\n\r\n                if ((typeof isVideoTrack === 'undefined' || isVideoTrack === true) && peer.lastVideoTrack) {\r\n                    connection.replaceTrack(peer.lastVideoTrack, participant, true);\r\n                }\r\n\r\n                if ((typeof isVideoTrack === 'undefined' || isVideoTrack === false) && peer.lastAudioTrack) {\r\n                    connection.replaceTrack(peer.lastAudioTrack, participant, false);\r\n                }\r\n            });\r\n        };\r\n\r\n        connection.renegotiate = function(remoteUserId) {\r\n            if (remoteUserId) {\r\n                mPeer.renegotiatePeer(remoteUserId);\r\n                return;\r\n            }\r\n\r\n            connection.peers.getAllParticipants().forEach(function(participant) {\r\n                mPeer.renegotiatePeer(participant);\r\n            });\r\n        };\r\n\r\n        connection.setStreamEndHandler = function(stream, isRemote) {\r\n            if (!stream || !stream.addEventListener) return;\r\n\r\n            isRemote = !!isRemote;\r\n\r\n            if (stream.alreadySetEndHandler) {\r\n                return;\r\n            }\r\n            stream.alreadySetEndHandler = true;\r\n\r\n            var streamEndedEvent = 'ended';\r\n\r\n            if ('oninactive' in stream) {\r\n                streamEndedEvent = 'inactive';\r\n            }\r\n\r\n            stream.addEventListener(streamEndedEvent, function() {\r\n                if (stream.idInstance) {\r\n                    currentUserMediaRequest.remove(stream.idInstance);\r\n                }\r\n\r\n                if (!isRemote) {\r\n                    // reset attachStreams\r\n                    var streams = [];\r\n                    connection.attachStreams.forEach(function(s) {\r\n                        if (s.id != stream.id) {\r\n                            streams.push(s);\r\n                        }\r\n                    });\r\n                    connection.attachStreams = streams;\r\n                }\r\n\r\n                // connection.renegotiate();\r\n\r\n                var streamEvent = connection.streamEvents[stream.streamid];\r\n                if (!streamEvent) {\r\n                    streamEvent = {\r\n                        stream: stream,\r\n                        streamid: stream.streamid,\r\n                        type: isRemote ? 'remote' : 'local',\r\n                        userid: connection.userid,\r\n                        extra: connection.extra,\r\n                        mediaElement: connection.streamEvents[stream.streamid] ? connection.streamEvents[stream.streamid].mediaElement : null\r\n                    };\r\n                }\r\n\r\n                if (isRemote && connection.peers[streamEvent.userid]) {\r\n                    // reset remote \"streams\"\r\n                    var peer = connection.peers[streamEvent.userid].peer;\r\n                    var streams = [];\r\n                    peer.getRemoteStreams().forEach(function(s) {\r\n                        if (s.id != stream.id) {\r\n                            streams.push(s);\r\n                        }\r\n                    });\r\n                    connection.peers[streamEvent.userid].streams = streams;\r\n                }\r\n\r\n                if (streamEvent.userid === connection.userid && streamEvent.type === 'remote') {\r\n                    return;\r\n                }\r\n\r\n                if (connection.peersBackup[streamEvent.userid]) {\r\n                    streamEvent.extra = connection.peersBackup[streamEvent.userid].extra;\r\n                }\r\n\r\n                connection.onstreamended(streamEvent);\r\n\r\n                delete connection.streamEvents[stream.streamid];\r\n            }, false);\r\n        };\r\n\r\n        connection.onMediaError = function(error, constraints) {\r\n            if (!!connection.enableLogs) {\r\n                console.error(error, constraints);\r\n            }\r\n        };\r\n\r\n        connection.autoCloseEntireSession = false;\r\n\r\n        connection.filesContainer = connection.videosContainer = document.body || document.documentElement;\r\n        connection.isInitiator = false;\r\n\r\n        connection.shareFile = mPeer.shareFile;\r\n        if (typeof FileProgressBarHandler !== 'undefined') {\r\n            FileProgressBarHandler.handle(connection);\r\n        }\r\n\r\n        if (typeof TranslationHandler !== 'undefined') {\r\n            TranslationHandler.handle(connection);\r\n        }\r\n\r\n        connection.token = getRandomString;\r\n\r\n        connection.onNewParticipant = function(participantId, userPreferences) {\r\n            connection.acceptParticipationRequest(participantId, userPreferences);\r\n        };\r\n\r\n        connection.acceptParticipationRequest = function(participantId, userPreferences) {\r\n            if (userPreferences.successCallback) {\r\n                userPreferences.successCallback();\r\n                delete userPreferences.successCallback;\r\n            }\r\n\r\n            mPeer.createNewPeer(participantId, userPreferences);\r\n        };\r\n\r\n        if (typeof StreamsHandler !== 'undefined') {\r\n            connection.StreamsHandler = StreamsHandler;\r\n        }\r\n\r\n        connection.onleave = function(userid) {};\r\n\r\n        connection.invokeSelectFileDialog = function(callback) {\r\n            var selector = new FileSelector();\r\n            selector.accept = '*.*';\r\n            selector.selectSingleFile(callback);\r\n        };\r\n\r\n        connection.onmute = function(e) {\r\n            if (!e || !e.mediaElement) {\r\n                return;\r\n            }\r\n\r\n            if (e.muteType === 'both' || e.muteType === 'video') {\r\n                e.mediaElement.src = null;\r\n                var paused = e.mediaElement.pause();\r\n                if (typeof paused !== 'undefined') {\r\n                    paused.then(function() {\r\n                        e.mediaElement.poster = e.snapshot || 'https://cdn.webrtc-experiment.com/images/muted.png';\r\n                    });\r\n                } else {\r\n                    e.mediaElement.poster = e.snapshot || 'https://cdn.webrtc-experiment.com/images/muted.png';\r\n                }\r\n            } else if (e.muteType === 'audio') {\r\n                e.mediaElement.muted = true;\r\n            }\r\n        };\r\n\r\n        connection.onunmute = function(e) {\r\n            if (!e || !e.mediaElement || !e.stream) {\r\n                return;\r\n            }\r\n\r\n            if (e.unmuteType === 'both' || e.unmuteType === 'video') {\r\n                e.mediaElement.poster = null;\r\n                e.mediaElement.srcObject = e.stream;\r\n                e.mediaElement.play();\r\n            } else if (e.unmuteType === 'audio') {\r\n                e.mediaElement.muted = false;\r\n            }\r\n        };\r\n\r\n        connection.onExtraDataUpdated = function(event) {\r\n            event.status = 'online';\r\n            connection.onUserStatusChanged(event, true);\r\n        };\r\n\r\n        connection.getAllParticipants = function(sender) {\r\n            return connection.peers.getAllParticipants(sender);\r\n        };\r\n\r\n        if (typeof StreamsHandler !== 'undefined') {\r\n            StreamsHandler.onSyncNeeded = function(streamid, action, type) {\r\n                connection.peers.getAllParticipants().forEach(function(participant) {\r\n                    mPeer.onNegotiationNeeded({\r\n                        streamid: streamid,\r\n                        action: action,\r\n                        streamSyncNeeded: true,\r\n                        type: type || 'both'\r\n                    }, participant);\r\n                });\r\n            };\r\n        }\r\n\r\n        connection.connectSocket = function(callback) {\r\n            connectSocket(callback);\r\n        };\r\n\r\n        connection.closeSocket = function() {\r\n            try {\r\n                io.sockets = {};\r\n            } catch (e) {};\r\n\r\n            if (!connection.socket) return;\r\n\r\n            if (typeof connection.socket.disconnect === 'function') {\r\n                connection.socket.disconnect();\r\n            }\r\n\r\n            if (typeof connection.socket.resetProps === 'function') {\r\n                connection.socket.resetProps();\r\n            }\r\n\r\n            connection.socket = null;\r\n        };\r\n\r\n        connection.getSocket = function(callback) {\r\n            if (!callback && connection.enableLogs) {\r\n                console.warn('getSocket.callback paramter is required.');\r\n            }\r\n\r\n            callback = callback || function() {};\r\n\r\n            if (!connection.socket) {\r\n                connectSocket(function() {\r\n                    callback(connection.socket);\r\n                });\r\n            } else {\r\n                callback(connection.socket);\r\n            }\r\n\r\n            return connection.socket; // callback is preferred over return-statement\r\n        };\r\n\r\n        connection.getRemoteStreams = mPeer.getRemoteStreams;\r\n\r\n        var skipStreams = ['selectFirst', 'selectAll', 'forEach'];\r\n\r\n        connection.streamEvents = {\r\n            selectFirst: function(options) {\r\n                return connection.streamEvents.selectAll(options)[0];\r\n            },\r\n            selectAll: function(options) {\r\n                if (!options) {\r\n                    // default will always be all streams\r\n                    options = {\r\n                        local: true,\r\n                        remote: true,\r\n                        isScreen: true,\r\n                        isAudio: true,\r\n                        isVideo: true\r\n                    };\r\n                }\r\n\r\n                if (options == 'local') {\r\n                    options = {\r\n                        local: true\r\n                    };\r\n                }\r\n\r\n                if (options == 'remote') {\r\n                    options = {\r\n                        remote: true\r\n                    };\r\n                }\r\n\r\n                if (options == 'screen') {\r\n                    options = {\r\n                        isScreen: true\r\n                    };\r\n                }\r\n\r\n                if (options == 'audio') {\r\n                    options = {\r\n                        isAudio: true\r\n                    };\r\n                }\r\n\r\n                if (options == 'video') {\r\n                    options = {\r\n                        isVideo: true\r\n                    };\r\n                }\r\n\r\n                var streams = [];\r\n                Object.keys(connection.streamEvents).forEach(function(key) {\r\n                    var event = connection.streamEvents[key];\r\n\r\n                    if (skipStreams.indexOf(key) !== -1) return;\r\n                    var ignore = true;\r\n\r\n                    if (options.local && event.type === 'local') {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (options.remote && event.type === 'remote') {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (options.isScreen && event.stream.isScreen) {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (options.isVideo && event.stream.isVideo) {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (options.isAudio && event.stream.isAudio) {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (options.userid && event.userid === options.userid) {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (ignore === false) {\r\n                        streams.push(event);\r\n                    }\r\n                });\r\n\r\n                return streams;\r\n            }\r\n        };\r\n\r\n        connection.socketURL = '/'; // generated via config.json\r\n        connection.socketMessageEvent = 'RTCMultiConnection-Message'; // generated via config.json\r\n        connection.socketCustomEvent = 'RTCMultiConnection-Custom-Message'; // generated via config.json\r\n        connection.DetectRTC = DetectRTC;\r\n\r\n        connection.setCustomSocketEvent = function(customEvent) {\r\n            if (customEvent) {\r\n                connection.socketCustomEvent = customEvent;\r\n            }\r\n\r\n            if (!connection.socket) {\r\n                return;\r\n            }\r\n\r\n            connection.socket.emit('set-custom-socket-event-listener', connection.socketCustomEvent);\r\n        };\r\n\r\n        connection.getNumberOfBroadcastViewers = function(broadcastId, callback) {\r\n            if (!connection.socket || !broadcastId || !callback) return;\r\n\r\n            connection.socket.emit('get-number-of-users-in-specific-broadcast', broadcastId, callback);\r\n        };\r\n\r\n        connection.onNumberOfBroadcastViewersUpdated = function(event) {\r\n            if (!connection.enableLogs || !connection.isInitiator) return;\r\n            console.info('Number of broadcast (', event.broadcastId, ') viewers', event.numberOfBroadcastViewers);\r\n        };\r\n\r\n        connection.onUserStatusChanged = function(event, dontWriteLogs) {\r\n            if (!!connection.enableLogs && !dontWriteLogs) {\r\n                console.info(event.userid, event.status);\r\n            }\r\n        };\r\n\r\n        connection.getUserMediaHandler = getUserMediaHandler;\r\n        connection.multiPeersHandler = mPeer;\r\n        connection.enableLogs = true;\r\n        connection.setCustomSocketHandler = function(customSocketHandler) {\r\n            if (typeof SocketConnection !== 'undefined') {\r\n                SocketConnection = customSocketHandler;\r\n            }\r\n        };\r\n\r\n        // default value should be 15k because [old]Firefox's receiving limit is 16k!\r\n        // however 64k works chrome-to-chrome\r\n        connection.chunkSize = 40 * 1000;\r\n\r\n        connection.maxParticipantsAllowed = 1000;\r\n\r\n        // eject or leave single user\r\n        connection.disconnectWith = mPeer.disconnectWith;\r\n\r\n        // check if room exist on server\r\n        // we will pass roomid to the server and wait for callback (i.e. server's response)\r\n        connection.checkPresence = function(roomid, callback) {\r\n            roomid = roomid || connection.sessionid;\r\n\r\n            if (SocketConnection.name === 'SSEConnection') {\r\n                SSEConnection.checkPresence(roomid, function(isRoomExist, _roomid, extra) {\r\n                    if (!connection.socket) {\r\n                        if (!isRoomExist) {\r\n                            connection.userid = _roomid;\r\n                        }\r\n\r\n                        connection.connectSocket(function() {\r\n                            callback(isRoomExist, _roomid, extra);\r\n                        });\r\n                        return;\r\n                    }\r\n                    callback(isRoomExist, _roomid);\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (!connection.socket) {\r\n                connection.connectSocket(function() {\r\n                    connection.checkPresence(roomid, callback);\r\n                });\r\n                return;\r\n            }\r\n\r\n            connection.socket.emit('check-presence', roomid + '', function(isRoomExist, _roomid, extra) {\r\n                if (connection.enableLogs) {\r\n                    console.log('checkPresence.isRoomExist: ', isRoomExist, ' roomid: ', _roomid);\r\n                }\r\n                callback(isRoomExist, _roomid, extra);\r\n            });\r\n        };\r\n\r\n        connection.onReadyForOffer = function(remoteUserId, userPreferences) {\r\n            connection.multiPeersHandler.createNewPeer(remoteUserId, userPreferences);\r\n        };\r\n\r\n        connection.setUserPreferences = function(userPreferences) {\r\n            if (connection.dontAttachStream) {\r\n                userPreferences.dontAttachLocalStream = true;\r\n            }\r\n\r\n            if (connection.dontGetRemoteStream) {\r\n                userPreferences.dontGetRemoteStream = true;\r\n            }\r\n\r\n            return userPreferences;\r\n        };\r\n\r\n        connection.updateExtraData = function() {\r\n            connection.socket.emit('extra-data-updated', connection.extra);\r\n        };\r\n\r\n        connection.enableScalableBroadcast = false;\r\n        connection.maxRelayLimitPerUser = 3; // each broadcast should serve only 3 users\r\n\r\n        connection.dontCaptureUserMedia = false;\r\n        connection.dontAttachStream = false;\r\n        connection.dontGetRemoteStream = false;\r\n\r\n        connection.onReConnecting = function(event) {\r\n            if (connection.enableLogs) {\r\n                console.info('ReConnecting with', event.userid, '...');\r\n            }\r\n        };\r\n\r\n        connection.beforeAddingStream = function(stream) {\r\n            return stream;\r\n        };\r\n\r\n        connection.beforeRemovingStream = function(stream) {\r\n            return stream;\r\n        };\r\n\r\n        if (typeof isChromeExtensionAvailable !== 'undefined') {\r\n            connection.checkIfChromeExtensionAvailable = isChromeExtensionAvailable;\r\n        }\r\n\r\n        if (typeof isFirefoxExtensionAvailable !== 'undefined') {\r\n            connection.checkIfChromeExtensionAvailable = isFirefoxExtensionAvailable;\r\n        }\r\n\r\n        if (typeof getChromeExtensionStatus !== 'undefined') {\r\n            connection.getChromeExtensionStatus = getChromeExtensionStatus;\r\n        }\r\n\r\n        connection.modifyScreenConstraints = function(screen_constraints) {\r\n            return screen_constraints;\r\n        };\r\n\r\n        connection.onPeerStateChanged = function(state) {\r\n            if (connection.enableLogs) {\r\n                if (state.iceConnectionState.search(/closed|failed/gi) !== -1) {\r\n                    console.error('Peer connection is closed between you & ', state.userid, state.extra, 'state:', state.iceConnectionState);\r\n                }\r\n            }\r\n        };\r\n\r\n        connection.isOnline = true;\r\n\r\n        listenEventHandler('online', function() {\r\n            connection.isOnline = true;\r\n        });\r\n\r\n        listenEventHandler('offline', function() {\r\n            connection.isOnline = false;\r\n        });\r\n\r\n        connection.isLowBandwidth = false;\r\n        if (navigator && navigator.connection && navigator.connection.type) {\r\n            connection.isLowBandwidth = navigator.connection.type.toString().toLowerCase().search(/wifi|cell/g) !== -1;\r\n            if (connection.isLowBandwidth) {\r\n                connection.bandwidth = {\r\n                    audio: false,\r\n                    video: false,\r\n                    screen: false\r\n                };\r\n\r\n                if (connection.mediaConstraints.audio && connection.mediaConstraints.audio.optional && connection.mediaConstraints.audio.optional.length) {\r\n                    var newArray = [];\r\n                    connection.mediaConstraints.audio.optional.forEach(function(opt) {\r\n                        if (typeof opt.bandwidth === 'undefined') {\r\n                            newArray.push(opt);\r\n                        }\r\n                    });\r\n                    connection.mediaConstraints.audio.optional = newArray;\r\n                }\r\n\r\n                if (connection.mediaConstraints.video && connection.mediaConstraints.video.optional && connection.mediaConstraints.video.optional.length) {\r\n                    var newArray = [];\r\n                    connection.mediaConstraints.video.optional.forEach(function(opt) {\r\n                        if (typeof opt.bandwidth === 'undefined') {\r\n                            newArray.push(opt);\r\n                        }\r\n                    });\r\n                    connection.mediaConstraints.video.optional = newArray;\r\n                }\r\n            }\r\n        }\r\n\r\n        connection.getExtraData = function(remoteUserId, callback) {\r\n            if (!remoteUserId) throw 'remoteUserId is required.';\r\n\r\n            if (typeof callback === 'function') {\r\n                connection.socket.emit('get-remote-user-extra-data', remoteUserId, function(extra, remoteUserId, error) {\r\n                    callback(extra, remoteUserId, error);\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (!connection.peers[remoteUserId]) {\r\n                if (connection.peersBackup[remoteUserId]) {\r\n                    return connection.peersBackup[remoteUserId].extra;\r\n                }\r\n                return {};\r\n            }\r\n\r\n            return connection.peers[remoteUserId].extra;\r\n        };\r\n\r\n        if (!!forceOptions.autoOpenOrJoin) {\r\n            connection.openOrJoin(connection.sessionid);\r\n        }\r\n\r\n        connection.onUserIdAlreadyTaken = function(useridAlreadyTaken, yourNewUserId) {\r\n            // via #683\r\n            connection.close();\r\n            connection.closeSocket();\r\n\r\n            connection.isInitiator = false;\r\n            connection.userid = connection.token();\r\n\r\n            connection.join(connection.sessionid);\r\n\r\n            if (connection.enableLogs) {\r\n                console.warn('Userid already taken.', useridAlreadyTaken, 'Your new userid:', connection.userid);\r\n            }\r\n        };\r\n\r\n        connection.trickleIce = true;\r\n        connection.version = '3.6.9';\r\n\r\n        connection.onSettingLocalDescription = function(event) {\r\n            if (connection.enableLogs) {\r\n                console.info('Set local description for remote user', event.userid);\r\n            }\r\n        };\r\n\r\n        connection.resetScreen = function() {\r\n            sourceId = null;\r\n            if (DetectRTC && DetectRTC.screen) {\r\n                delete DetectRTC.screen.sourceId;\r\n            }\r\n\r\n            currentUserMediaRequest = {\r\n                streams: [],\r\n                mutex: false,\r\n                queueRequests: []\r\n            };\r\n        };\r\n\r\n        // if disabled, \"event.mediaElement\" for \"onstream\" will be NULL\r\n        connection.autoCreateMediaElement = true;\r\n\r\n        // set password\r\n        connection.password = null;\r\n\r\n        // set password\r\n        connection.setPassword = function(password, callback) {\r\n            callback = callback || function() {};\r\n            if (connection.socket) {\r\n                connection.socket.emit('set-password', password, callback);\r\n            } else {\r\n                connection.password = password;\r\n                callback(true, connection.sessionid, null);\r\n            }\r\n        };\r\n\r\n        connection.onSocketDisconnect = function(event) {\r\n            if (connection.enableLogs) {\r\n                console.warn('socket.io connection is closed');\r\n            }\r\n        };\r\n\r\n        connection.onSocketError = function(event) {\r\n            if (connection.enableLogs) {\r\n                console.warn('socket.io connection is failed');\r\n            }\r\n        };\r\n\r\n        // error messages\r\n        connection.errors = {\r\n            ROOM_NOT_AVAILABLE: 'Room not available',\r\n            INVALID_PASSWORD: 'Invalid password',\r\n            USERID_NOT_AVAILABLE: 'User ID does not exist',\r\n            ROOM_PERMISSION_DENIED: 'Room permission denied',\r\n            ROOM_FULL: 'Room full',\r\n            DID_NOT_JOIN_ANY_ROOM: 'Did not join any room yet',\r\n            INVALID_SOCKET: 'Invalid socket',\r\n            PUBLIC_IDENTIFIER_MISSING: 'publicRoomIdentifier is required',\r\n            INVALID_ADMIN_CREDENTIAL: 'Invalid username or password attempted'\r\n        };\r\n    })(this);\r\n\r\n};\r\n\r\nif (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n    module.exports = exports = RTCMultiConnection;\r\n}\r\n\r\nif (typeof define === 'function' && define.amd) {\r\n    define('RTCMultiConnection', [], function() {\r\n        return RTCMultiConnection;\r\n    });\r\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h1',[_vm._v(\"This is the title screen\")]),_c('a',{on:{\"click\":_vm.startBattleMode}},[_vm._v(\"Battle Mode\")]),_c('br'),_c('a',{on:{\"click\":_vm.startPartyMode}},[_vm._v(\"Party Mode\")]),_vm._m(0)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"overlay\"}),_c('button',{staticClass:\"btn-select-file\",attrs:{\"id\":\"btn-select-file\"}}),_c('iframe'),_c('header',[_c('div',{staticClass:\"ribbon\"},[_c('div',{staticClass:\"ribbon-stitches-top\"}),_c('strong',{staticClass:\"ribbon-content\"},[_c('h1')]),_c('div',{staticClass:\"ribbon-stitches-bottom\"})])]),_c('div',{attrs:{\"id\":\"number-of-users\",\"title\":\"Number of online users.\"}},[_vm._v(\"0\")]),_c('div',{attrs:{\"id\":\"logs\"}},[_c('p',[_vm._v(\"\\n        Peer-to-Peer (private) file sharing.\\n      \")]),_c('p',[_vm._v(\"\\n        You can share/receive files from any platform/device e.g. destkop operating systems, Android, iOS etc.\\n      \")]),_c('p',[_vm._v(\"\\n        Create or join a room & select file using \\\"+\\\" button.\\n      \")])])])}]\n\nexport { render, staticRenderFns }","export function FileSelector() {\n    var selector = this;\n\n    var noFileSelectedCallback = function() {};\n\n    selector.selectSingleFile = function(callback, failure) {\n        if (failure) {\n            noFileSelectedCallback = failure;\n        }\n\n        selectFile(callback);\n    };\n    selector.selectMultipleFiles = function(callback, failure) {\n        if (failure) {\n            noFileSelectedCallback = failure;\n        }\n\n        selectFile(callback, true);\n    };\n    selector.selectDirectory = function(callback, failure) {\n        if (failure) {\n            noFileSelectedCallback = failure;\n        }\n\n        selectFile(callback, true, true);\n    };\n\n    selector.accept = '*.*';\n\n    function selectFile(callback, multiple, directory) {\n        callback = callback || function() {};\n\n        var file = document.createElement('input');\n        file.type = 'file';\n\n        if (multiple) {\n            file.multiple = true;\n        }\n\n        if (directory) {\n            file.webkitdirectory = true;\n        }\n\n        file.accept = selector.accept;\n\n        file.onclick = function() {\n            file.clickStarted = true;\n        };\n\n        document.body.onfocus = function() {\n            setTimeout(function() {\n                if (!file.clickStarted) return;\n                file.clickStarted = false;\n\n                if (!file.value) {\n                    noFileSelectedCallback();\n                }\n            }, 500);\n        };\n\n        file.onchange = function() {\n            if (multiple) {\n                if (!file.files.length) {\n                    console.error('No file selected.');\n                    return;\n                }\n\n                var arr = [];\n                Array.from(file.files).forEach(function(file) {\n                    file.url = file.webkitRelativePath;\n                    arr.push(file);\n                });\n                callback(arr);\n                return;\n            }\n\n            if (!file.files[0]) {\n                console.error('No file selected.');\n                return;\n            }\n\n            callback(file.files[0]);\n\n            file.parentNode.removeChild(file);\n        };\n        file.style.display = 'none';\n        (document.body || document.documentElement).appendChild(file);\n        fireClickEvent(file);\n    }\n\n    function getValidFileName(fileName) {\n        if (!fileName) {\n            fileName = 'file' + (new Date).toISOString().replace(/:|\\.|-/g, '')\n        }\n\n        var a = fileName;\n        a = a.replace(/^.*[\\\\\\/]([^\\\\\\/]*)$/i, \"$1\");\n        a = a.replace(/\\s/g, \"_\");\n        a = a.replace(/,/g, '');\n        a = a.toLowerCase();\n        return a;\n    }\n\n    function fireClickEvent(element) {\n        if (typeof element.click === 'function') {\n            element.click();\n            return;\n        }\n\n        if (typeof element.change === 'function') {\n            element.change();\n            return;\n        }\n\n        if (typeof document.createEvent('Event') !== 'undefined') {\n            var event = document.createEvent('Event');\n\n            if (typeof event.initEvent === 'function' && typeof element.dispatchEvent === 'function') {\n                event.initEvent('click', true, true);\n                element.dispatchEvent(event);\n                return;\n            }\n        }\n\n        var event = new MouseEvent('click', {\n            view: window,\n            bubbles: true,\n            cancelable: true\n        });\n\n        element.dispatchEvent(event);\n    }\n}","<template>\n  <div>\n    <h1>This is the title screen</h1>\n\n    <a @click=\"startBattleMode\">Battle Mode</a>\n    <br>\n    <a @click=\"startPartyMode\">Party Mode</a>\n\n    <div>\n      <div class=\"overlay\"></div>\n      <button id=\"btn-select-file\" class=\"btn-select-file\"></button>\n\n      <iframe></iframe>\n\n      <header>\n          <div class=\"ribbon\"><div class=\"ribbon-stitches-top\"></div><strong class=\"ribbon-content\"><h1>\n          </h1></strong><div class=\"ribbon-stitches-bottom\"></div></div>\n      </header>\n\n      <div id=\"number-of-users\" title=\"Number of online users.\">0</div>\n      <div id=\"logs\">\n        <p>\n          Peer-to-Peer (private) file sharing.\n        </p>\n        <p>\n          You can share/receive files from any platform/device e.g. destkop operating systems, Android, iOS etc.\n        </p>\n        <p>\n          Create or join a room & select file using \"+\" button.\n        </p>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport setGameMode, { GAME_MODE_BATTLE, GAME_MODE_PARTY, GameSettings } from \"../common/GameSettings\";\nimport router from '../router';\nimport {FileSelector} from \"../common/FileSelector\";\n\nexport default {\n  name: \"title-screen\",\n  mounted() {\n    window.getExternalIceServers = true;\n\n    window.onerror = console.error = function() {\n            var error = JSON.stringify(arguments);\n            if(error.indexOf('Blocked a frame with origin') !== -1) {\n                return;\n            }\n            alert('Error:\\n' + error);\n        };\n        // Muaz Khan     - https://github.com/muaz-khan\n        // MIT License   - https://www.WebRTC-Experiment.com/licence/\n        // Source Code   - https://github.com/muaz-khan/RTCMultiConnection\n        let btnSelectFile = document.getElementById(\"btn-select-file\")\n        function setupFileTransfer() {\n          joinARoom(\"battleslides-1234\");\n        }\n        \n        var connection;\n        function joinARoom(roomId) {\n            var iframe = document.querySelector('iframe');\n            btnSelectFile.onclick = function(file) {\n                if(file && (file instanceof File || file instanceof Blob) && file.size) {\n                  previewFile(file);\n                  onFileSelected(file);\n                  return;\n                }\n                var fileSelector = new FileSelector();\n                fileSelector.selectSingleFile(function(file) {\n                    previewFile(file);\n                    onFileSelected(file);\n                });\n            };\n            var lastSelectedFile;\n            var room_id = '';\n            // 60k -- assuming receiving client is chrome\n            var chunk_size = 60 * 1000;\n            function setupWebRTCConnection() {\n                if (connection) {\n                    return;\n                }\n                const RTCMultiConnection = require('rtcmulticonnection');\n                const fbr = require(\"fbr\");\n    \n                connection = new RTCMultiConnection();\n                // to make sure, \"connection-reconnect\" doesn't sends files again\n                connection.fileReceived = {};\n                // by default, socket.io server is assumed to be deployed on your own URL\n                //connection.socketURL = '/';\n                // comment-out below line if you do not have your own socket.io server\n                connection.socketURL = 'https://rtcmulticonnection.herokuapp.com:443/';\n                connection.socketMessageEvent = 'file-sharing-demo';\n                connection.chunkSize = chunk_size;\n                connection.sdpConstraints.mandatory = {\n                    OfferToReceiveAudio: false,\n                    OfferToReceiveVideo: false\n                };\n                connection.enableFileSharing = true;\n                if (room_id && room_id.length) {\n                    connection.userid = room_id;\n                }\n                connection.channel = connection.sessionid = roomId;\n                connection.session = {\n                    data: true,\n                    // oneway: true --- to make it one-to-many\n                };\n                // https://www.rtcmulticonnection.org/docs/iceServers/\n                // use your own TURN-server here!\n                connection.iceServers = [{\n                    'urls': [\n                        'stun:stun.l.google.com:19302',\n                        'stun:stun1.l.google.com:19302',\n                        'stun:stun2.l.google.com:19302',\n                        'stun:stun.l.google.com:19302?transport=udp',\n                    ]\n                }];\n                connection.filesContainer = logsDiv;\n                connection.connectedWith = {};\n                connection.onmessage = function(event) {\n                    if(event.data.doYouWannaReceiveThisFile) {\n                        if(!connection.fileReceived[event.data.fileName]) {\n                            connection.send({\n                                yesIWannaReceive:true,\n                                fileName: event.data.fileName\n                            });\n                        }\n                    }\n                    if(event.data.yesIWannaReceive && !!lastSelectedFile) {\n                        connection.shareFile(lastSelectedFile, event.userid);\n                    }\n                };\n                connection.onopen = function(e) {\n                    try {\n                        chrome.power.requestKeepAwake('display');\n                    }\n                    catch(e) {}\n                    if (connection.connectedWith[e.userid]) return;\n                    connection.connectedWith[e.userid] = true;\n                    var message = '<b>' + e.userid + '</b><br>is connected.';\n                    appendLog(message);\n                    if (!lastSelectedFile) return;\n                    // already shared the file\n                    var file = lastSelectedFile;\n                    setTimeout(function() {\n                        appendLog('Sharing file<br><b>' + file.name + '</b><br>Size: <b>' + bytesToSize(file.size) + '<b><br>With <b>' + connection.getAllParticipants().length + '</b> users');\n                        connection.send({\n                            doYouWannaReceiveThisFile: true,\n                            fileName: file.size + file.name\n                        });\n                    }, 500);\n                };\n                connection.onclose = function(e) {\n                    incrementOrDecrementUsers();\n                    if (connection.connectedWith[e.userid]) return;\n                    appendLog('Data connection has been closed between you and <b>' + e.userid + '</b>. Re-Connecting..');\n                    connection.join(roomId);\n                };\n                connection.onerror = function(e) {\n                    if (connection.connectedWith[e.userid]) return;\n                    appendLog('Data connection failed. between you and <b>' + e.userid + '</b>. Retrying..');\n                };\n                setFileProgressBarHandlers(connection);\n                connection.onUserStatusChanged = function(user) {\n                    incrementOrDecrementUsers();\n                };\n                connection.onleave = function(user) {\n                    user.status = 'offline';\n                    connection.onUserStatusChanged(user);\n                    incrementOrDecrementUsers();\n                };\n                var message = 'Connecting room:<br><b>' + connection.channel + '</b>';\n                appendLog(message);\n                connection.openOrJoin(connection.channel, function(isRoomExist, roomid) {\n                    var message = 'Successfully connected to room: <b>' + roomid + '</b><hr>Other users can join you on iPhone/Android using \"' + roomid + '\" or desktop (Windows/MacOSX/Ubuntu) users can join using this (secure/private) URL: <a href=\"./file-sharing.html#' + roomid + '\" target=\"_blank\">file-sharing.html#' + roomid + '</a>';\n                    // if (isRoomEists) { }\n                    appendLog(message);\n                    connection.getSocket(function(socket) {\n                      socket.on('disconnect', function() {\n                         appendLog('Seems disconnected.', 'red');\n                      });\n                      socket.on('connect', function() {\n                         location.reload();\n                      });\n                      socket.on('error', function() {\n                         location.reload();\n                      });\n                    });\n                    window.addEventListener('offline', function() {\n                      appendLog('Seems disconnected.', 'red');\n                    }, false);\n                });\n                window.connection = connection;\n            }\n            function setFileProgressBarHandlers(connection) {\n                var progressHelper = {};\n                // www.RTCMultiConnection.org/docs/onFileStart/\n                connection.onFileStart = function(file) {\n                    if (connection.fileReceived[file.size + file.name]) return;\n                    var div = document.createElement('div');\n                    div.style.borderBottom = '1px solid black';\n                    div.style.padding = '2px 4px';\n                    div.id = file.uuid;\n                    var message = '';\n                    if (file.userid == connection.userid) {\n                        message += 'Sharing with:' + file.remoteUserId;\n                    } else {\n                        message += 'Receiving from:' + file.userid;\n                    }\n                    message += '<br><b>' + file.name + '</b>.';\n                    message += '<br>Size: <b>' + bytesToSize(file.size) + '</b>';\n                    message += '<br><label>0%</label> <progress></progress>';\n                    if(file.userid !== connection.userid) {\n                        message += '<br><button id=\"resend\">Receive Again?</button>';\n                    }\n                    div.innerHTML = message;\n                    connection.filesContainer.insertBefore(div, connection.filesContainer.firstChild);\n                    if(file.userid !== connection.userid && div.querySelector('#resend')) {\n                        div.querySelector('#resend').onclick = function(e) {\n                            e.preventDefault();\n                            this.onclick = function() {};\n                            if(connection.fileReceived[file.size + file.name]) {\n                                delete connection.fileReceived[file.size + file.name];\n                            }\n                            connection.send({\n                                yesIWannaReceive: true,\n                                fileName: file.name\n                            }, file.userid);\n                            div.parentNode.removeChild(div);\n                        };\n                    }\n                    if (!file.remoteUserId) {\n                        progressHelper[file.uuid] = {\n                            div: div,\n                            progress: div.querySelector('progress'),\n                            label: div.querySelector('label')\n                        };\n                        progressHelper[file.uuid].progress.max = file.maxChunks;\n                        return;\n                    }\n                    if (!progressHelper[file.uuid]) {\n                        progressHelper[file.uuid] = {};\n                    }\n                    progressHelper[file.uuid][file.remoteUserId] = {\n                        div: div,\n                        progress: div.querySelector('progress'),\n                        label: div.querySelector('label')\n                    };\n                    progressHelper[file.uuid][file.remoteUserId].progress.max = file.maxChunks;\n                };\n                // www.RTCMultiConnection.org/docs/onFileProgress/\n                connection.onFileProgress = function(chunk) {\n                    if (connection.fileReceived[chunk.size + chunk.name]) return;\n                    var helper = progressHelper[chunk.uuid];\n                    if (!helper) {\n                        return;\n                    }\n                    if (chunk.remoteUserId) {\n                        helper = progressHelper[chunk.uuid][chunk.remoteUserId];\n                        if (!helper) {\n                            return;\n                        }\n                    }\n                    helper.progress.value = chunk.currentPosition || chunk.maxChunks || helper.progress.max;\n                    updateLabel(helper.progress, helper.label);\n                };\n                // www.RTCMultiConnection.org/docs/onFileEnd/\n                connection.onFileEnd = function(file) {\n                    if (connection.fileReceived[file.size + file.name]) return;\n                    var div = document.getElementById(file.uuid);\n                    if (div) {\n                        div.parentNode.removeChild(div);\n                    }\n                    if (file.remoteUserId === connection.userid) {\n                        previewFile(file);\n                        connection.fileReceived[file.size + file.name] = file;\n                        var message = 'Successfully received file';\n                        message += '<br><b>' + file.name + '</b>.';\n                        message += '<br>Size: <b>' + bytesToSize(file.size) + '</b>.';\n                        message += '<br><a href=\"' + file.url + '\" target=\"_blank\" download=\"' + file.name + '\">Download</a>';\n                        var div = appendLog(message);\n                        return;\n                    }\n                    var message = 'Successfully shared file';\n                    message += '<br><b>' + file.name + '</b>.';\n                    message += '<br>With: <b>' + file.remoteUserId + '</b>.';\n                    message += '<br>Size: <b>' + bytesToSize(file.size) + '</b>.';\n                    appendLog(message);\n                };\n                function updateLabel(progress, label) {\n                    if (progress.position === -1) {\n                        return;\n                    }\n                    var position = +progress.position.toFixed(2).split('.')[1] || 100;\n                    label.innerHTML = position + '%';\n                }\n            }\n            function bytesToSize(bytes) {\n                var k = 1000;\n                var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n                if (bytes === 0) {\n                    return '0 Bytes';\n                }\n                var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);\n                return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\n            }\n            function onFileSelected(file) {\n                var innerHTML = 'You selected:<br><b>' + file.name + '</b><br>Size: <b>' + bytesToSize(file.size) + '</b>';\n                appendLog(innerHTML);\n                lastSelectedFile = file;\n                if (connection) {\n                    connection.send({\n                        doYouWannaReceiveThisFile: true,\n                        fileName: file.size + file.name\n                    });\n                }\n            }\n            var numberOfUsers = document.getElementById('number-of-users');\n            function incrementOrDecrementUsers() {\n                numberOfUsers.innerHTML = connection ? connection.getAllParticipants().length : 0;\n            }\n            var logsDiv = document.getElementById('logs');\n            function appendLog(html, color) {\n                var div = document.createElement('div');\n                div.innerHTML = '<p>' + html + '</p>';\n                logsDiv.insertBefore(div, logsDiv.firstChild);\n                if(color) {\n                  div.style.color = color;\n                }\n                return div;\n            }\n            window.onerror = console.error = function() {\n                var error = JSON.stringify(arguments);\n                if(error.indexOf('Blocked a frame with origin') !== -1) {\n                  return;\n                }\n                appendLog('Error:<br>' + error, 'red')\n            };\n            function previewFile(file) {\n                btnSelectFile.style.left = '5px';\n                btnSelectFile.style.right = 'auto';\n                btnSelectFile.style.zIndex = 10;\n                btnSelectFile.style.top = '5px';\n                btnSelectFile.style.outline = 'none';\n                document.querySelector('.overlay').style.display = 'none';\n                iframe.style.display = 'block';\n                iframe.onload = function() {\n                    Array.prototype.slice.call(iframe.contentWindow.document.body.querySelectorAll('*')).forEach(function(element) {\n                        element.style.maxWidth = '100%';\n                    });\n                    if (!file.type || fileNameMatches || file.type.match(/image|video|audio|pdf/g) || iframe.src.indexOf('data:image/png') !== -1 || iframe.src.toLowerCase().search(/.png|.jpeg|.jpg|.gif/g) !== -1) {\n                        iframe.contentWindow.document.body.style.textAlign = 'center';\n                        iframe.contentWindow.document.body.style.background = 'black';\n                        iframe.contentWindow.document.body.style.color = 'white';\n                        return;\n                    }\n                    iframe.contentWindow.document.body.style.textAlign = 'left';\n                    iframe.contentWindow.document.body.style.background = 'white';\n                    iframe.contentWindow.document.body.style.color = 'black';\n                };\n                var fileNameMatches = (file.name || '').toLowerCase().match(/.webm|.wav|.pdf|.txt|.js|.css|.cs|.png|.jpg|.jpeg|.gif/g);\n                if (fileNameMatches) {\n                    iframe.src = URL.createObjectURL(file);\n                    GameSettings.Images.push(file);\n                } else {\n                    iframe.src = 'https://www.webrtc-experiment.com/images/unknown-file.png';\n                }\n            }\n            setupWebRTCConnection();\n        }\n        window.addEventListener('online', function() {\n          location.reload();\n        }, false);\n        // drag-drop support\n        document.addEventListener('dragover', function(e) {\n          e.preventDefault();\n          e.stopPropagation();\n          e.dataTransfer.dropEffect = 'copy';\n        }, false);\n        document.addEventListener('drop', function(e) {\n          e.preventDefault();\n          e.stopPropagation();\n          if(!e.dataTransfer.files || !e.dataTransfer.files.length) {\n            return;\n          }\n          var file = e.dataTransfer.files[0];\n          if(!connection) {\n            document.getElementById('join-room').onclick();\n          }\n          btnSelectFile.onclick(file);\n        }, false);\n        \n      setupFileTransfer();\n  },\n  methods: {\n    startBattleMode()\n    {\n      GameSettings.SetupBattleModeGame();\n      router.push(\"intro-screen\");\n    },\n    startPartyMode()\n    {\n      GameSettings.SetupPartyModeGame();\n      router.push(\"intro-screen\");\n    }\n  }\n}\n</script>\n\n\n\n<style>\n        * {\n          margin: 0;\n          padding: 0;\n        }\n        ::-webkit-scrollbar {\n          height: 0;\n          overflow: visible;\n          width: 10px;\n          border-left:1px solid rgb(229, 229, 229);\n        }\n        ::-webkit-scrollbar-thumb {\n          background-color: rgba(0, 0, 0, .2);\n          background-clip: padding-box;\n          min-height: 28px;\n          padding: 100px 0 0;\n          box-shadow: inset 1px 1px 0 rgba(0,0,0,.1),inset 0 -1px 0 rgba(0,0,0,.07);\n          border-width: 1px 1px 1px 6px;\n        }\n        ::-webkit-scrollbar-button {\n          height: 0;\n          width: 0;\n        }\n        ::-webkit-scrollbar-track {\n          background-clip: padding-box;\n          border: solid transparent;\n          border-width: 0 0 0 4px;\n        }\n        ::-webkit-scrollbar-corner {\n          background: transparent;\n        }\n        html, body {\n          background-color: black;\n          font-family: 'Open Sans', 'Segoe UI Light','Segoe UI',Verdana,Arial;\n          font-size: 1.1em;\n          overflow: hidden;\n        }\n        .overlay {\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background: black;\n          z-index: 1;\n        }\n        .btn-select-file {\n          position: absolute;\n          z-index: 2;\n          left: 40%;\n          top: 40%;\n          width: 100px;\n          height: 100px;\n          -webkit-user-select: none;\n          border-radius: 50%;\n          text-shadow: 2px 2px white;\n          border: 1px solid #1B1B1B;\n          background-color: #D5D8D8;\n          cursor: pointer;\n          background-image: url(https://www.webrtc-experiment.com/images/btn-select-file.png);\n          outline: none;\n        }\n        .btn-select-file:hover {\n          background-color: #BBBBBB;\n        }\n        .btn-select-file:active {\n          background-color: #7F7B7B;\n        }\n        iframe {\n          position: absolute;\n          width: 80%;\n          height: 96%;\n          top: 87px;\n          left: 0;\n          right: 20;\n          bottom: 0;\n          border: 0;\n          outline: 0;\n          z-index: 5;\n          display: none;\n        }\n        #logs {\n          position: absolute;\n          background: white;\n          border-left: 1px solid black;\n          width: 20%;\n          top: 87px;\n          right: 0;\n          bottom: 0;\n          z-index: 6;\n          font-size: medium;\n          overflow: auto;\n          height: 100%;\n          border-top-left-radius: 5px;\n          font-size: 22px;\n        }\n        #logs p {\n          padding: 2px 4px;\n          border-bottom: 1px solid black;\n        }\n        header {\n          position: absolute;\n          text-align: center;\n          width: 100%;\n          height: 61px;\n          top: 0;\n          right: 0;\n          left: 0;\n          z-index: 7;\n          padding-top: 8px;\n          background: #EFEBEB;\n          border-bottom: 1px solid white;\n        }\n        #number-of-users {\n          position: absolute;\n          right: 60px;\n          top: 16px;\n          width: 36px;\n          height: 30px;\n          -webkit-user-select: none;\n          border-radius: 5px;\n          border: 1px solid #FFFFFF;\n          background-color: #E83930;\n          z-index: 8;\n          text-align: center;\n          padding-top: 6px;\n          color: white;\n        }\n        #join-room {\n          border: 1px solid black;\n          background: rgba(255, 255, 255, 0.28);\n          padding: 1px 3px;\n          border-left: 0;\n          font-size: 100%;\n          border-top-right-radius: 5px;\n          border-bottom-right-radius: 5px;\n        }\n         .android-app-icon {\n           background-repeat: no-repeat;\n           background-position: center center;\n           background-size: 64px 64px;\n           background-image: url(https://www.webrtc-experiment.com/images/android-app-icon.png);\n           width: 64px;\n           height: 64px;\n           position: absolute;\n           bottom: 5px;\n           left: 15px;\n           z-index: 9999;\n         }\n         .chrome-web-store-icon {\n          background-repeat: no-repeat;\n           background-position: center center;\n           background-size: 64px 64px;\n           background-image: url(https://www.webrtc-experiment.com/images/chrome-web-store-icon.png);\n           width: 64px;\n           height: 64px;\n           position: absolute;\n           bottom: 5px;\n           left: 90px;\n           z-index: 9999;\n         }\n        @media all and (max-width: 500px) {\n          #logs {\n            position: fixed;\n            bottom: 0;\n            left: 0;\n            width: 100%;\n            top: auto;\n            height: 40%;\n            border-left: 0;\n            border-top: 1px solid black;\n            font-size: 18px;\n          }\n          .btn-select-file {\n            top: 20%;\n            left: 40%;\n          }\n          .ribbon{\n            height: 150%;\n            width: 80%;\n          }\n          .ribbon h1 {\n            font-size: 20px!important;\n          }\n          #number-of-users {\n            right: 50px;\n          }\n          .android-app-icon, .chrome-web-store-icon {\n            display: none;\n          }\n        }\n        hr {border:0;}\n    </style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TitleScreen.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TitleScreen.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TitleScreen.vue?vue&type=template&id=275dba82&\"\nimport script from \"./TitleScreen.vue?vue&type=script&lang=js&\"\nexport * from \"./TitleScreen.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TitleScreen.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"sourceRoot":""}