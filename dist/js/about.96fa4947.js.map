{"version":3,"sources":["webpack:///./src/views/TitleScreen.vue?36c5","webpack:///./node_modules/core-js/modules/es6.array.from.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/core-js/modules/es6.regexp.split.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./node_modules/core-js/modules/es6.regexp.search.js","webpack:///./node_modules/core-js/modules/es6.regexp.match.js","webpack:///./node_modules/core-js/modules/es6.string.iterator.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/core-js/modules/_same-value.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/fbr/FileBufferReader.js","webpack:///./node_modules/core-js/modules/_is-regexp.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/rtcmulticonnection/dist/RTCMultiConnection.js","webpack:///./node_modules/isarray/index.js","webpack:///./src/views/TitleScreen.vue?028f","webpack:///src/views/TitleScreen.vue","webpack:///./src/views/TitleScreen.vue?08bd","webpack:///./src/views/TitleScreen.vue","webpack:///./node_modules/core-js/modules/_create-property.js","webpack:///./node_modules/process/browser.js"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TitleScreen_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TitleScreen_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","ctx","$export","toObject","call","isArrayIter","toLength","createProperty","getIterFn","S","F","iter","Array","from","arrayLike","length","result","step","iterator","O","C","this","aLen","arguments","mapfn","undefined","mapping","index","iterFn","next","done","value","exports","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","code","i","len","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","isRegExp","anObject","speciesConstructor","advanceStringIndex","callRegExpExec","regexpExec","fails","$min","Math","min","$push","$SPLIT","LENGTH","LAST_INDEX","MAX_UINT32","SUPPORTS_Y","RegExp","defined","SPLIT","$split","maybeCallNative","internalSplit","separator","limit","string","String","match","lastIndex","lastLength","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","splitLimit","separatorCopy","source","slice","apply","test","splitter","regexp","res","rx","unicodeMatching","lim","p","q","A","e","z","f","prototype","configurable","get","sameValue","regExpExec","SEARCH","$search","fn","previousLastIndex","MATCH","$match","global","fullUnicode","matchStr","$at","iterated","_t","_i","point","$flags","DESCRIPTORS","TO_STRING","$toString","define","R","concat","name","dP","FProto","Function","nameRE","NAME","module","Object","is","x","y","read","buffer","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","pow","write","c","rt","abs","isNaN","floor","log","LN2","Buffer","FileBufferReader","fbr","fbrHelper","FileBufferReaderHelper","chunks","users","readAsArrayBuffer","file","callback","extra","options","earlyCallback","chunk","fbrClone","currentPosition","userid","keys","forEach","key","getNextChunk","fileUUID","uuid","allFileChunks","nextChunk","convertToArrayBuffer","chunkMissing","remoteUserId","onBegin","onEnd","onProgress","maxChunks","fbReceiver","FileBufferReceiver","to","constructor","Date","Number","Boolean","addChunk","receive","readyForNextChunk","chunksWaiters","convertToObject","FileConverter","ConvertToObject","ConvertToArrayBuffer","setMultipleUsers","fileReaderWrapper","postMessage","random","toString","replace","chunkSize","numOfChunksInSlice","sliceId","cacheSize","chunksPerSlice","sliceSize","ceil","size","type","lastModifiedDate","blob","reader","FileReader","addChunks","fileName","binarySlice","addChunkCallback","onloadend","evt","target","readyState","DONE","url","URL","createObjectURL","processChunk","FileSelector","selector","noFileSelectedCallback","selectFile","multiple","directory","document","createElement","webkitdirectory","accept","onclick","clickStarted","body","onfocus","setTimeout","onchange","files","console","error","webkitRelativePath","parentNode","removeChild","style","display","documentElement","appendChild","fireClickEvent","element","click","change","createEvent","event","initEvent","dispatchEvent","MouseEvent","view","window","bubbles","cancelable","selectSingleFile","failure","selectMultipleFiles","selectDirectory","chunksObject","chunksArray","item","idx","Blob","merge","looper","object","binarize","pack","dataView","unpack","mergein","mergeto","debug","BIG_ENDIAN","LITTLE_ENDIAN","TYPE_LENGTH","BYTES_PER_ELEMENT","LENGTH_LENGTH","Uint16Array","BYTES_LENGTH","Uint32Array","Types","NULL","UNDEFINED","STRING","NUMBER","BOOLEAN","ARRAY","OBJECT","INT8ARRAY","INT16ARRAY","INT32ARRAY","UINT8ARRAY","UINT16ARRAY","UINT32ARRAY","FLOAT32ARRAY","FLOAT64ARRAY","ARRAYBUFFER","BLOB","FILE","BUFFER","TypeNames","Length","binary_dump","table","endianness","ROW_LENGTH","getUint8","find_type","obj","const_name","const_name_reflection","toUpperCase","Int8Array","Int16Array","Int32Array","Float32Array","Float64Array","ArrayBuffer","serialized","cursor","j","ab","byte_length","header_size","DataView","type_name","unit","setUint8","info","setUint16","setUint32","_view","set","elem","getUint16","getUint32","fromCharCode","getFloat64","mime","val","deferredSerialize","array","results","count","serialize","subarray","deferred","hasOwnProperty","mime_type","onload","onerror","deserialize","Test","isObject","cof","it","base64","ieee754","isArray","typedArraySupport","__proto__","foo","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","TypeError","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","encoding","checked","isEncoding","actual","fromArrayLike","byteOffset","isBuffer","copy","isnan","data","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","buf","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","decodeCodePointsArray","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","defineProperty","allocUnsafeSlow","_isBuffer","compare","a","list","pos","swap16","swap32","swap64","equals","inspect","str","max","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","MAX_ARGUMENTS_LENGTH","codePoints","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","base64clean","stringtrim","trim","units","leadSurrogate","byteArray","hi","lo","src","dst","process","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","RTCMultiConnection","roomid","forceOptions","browserFakeUserAgent","SocketConnection","connection","connectCallback","isData","session","audio","video","screen","parameters","sessionid","socketMessageEvent","socketCustomEvent","autoCloseEntireSession","broadcast","maxParticipantsAllowed","enableScalableBroadcast","maxRelayLimitPerUser","JSON","stringify","socketCustomParameters","io","sockets","socketURL","enableLogs","location","origin","socket","connect","socketOptions","mPeer","multiPeersHandler","updateExtraBackup","peersBackup","onMessageEvent","message","peers","sender","onExtraDataUpdated","streamSyncNeeded","stream","streamEvents","streamid","action","onstreamended","allParticipants","participant","localPeerSdpConstraints","OfferToReceiveAudio","sdpConstraints","mandatory","OfferToReceiveVideo","remotePeerSdpConstraints","oneway","isOneWay","direction","isDataOnly","newParticipant","createNewPeer","userPreferences","readyForOffer","attachStreams","waitingForLocalMedia","newParticipationRequest","deletePeer","dontGetRemoteStream","dontAttachLocalStream","connectionDescription","successCallback","onNewParticipant","changedUUID","oldUUID","newUUID","userLeft","onUserLeft","leave","addNegotiatedMessage","on","alreadyConnected","resetProps","emit","onSocketDisconnect","onSocketError","onUserStatusChanged","status","onEntireSessionClosed","useridAlreadyTaken","yourNewUserId","onUserIdAlreadyTaken","onNumberOfBroadcastViewersUpdated","isInitiator","MultiPeers","self","skipPeers","initFileBufferReader","onFileProgress","onFileStart","onFileEnd","getLength","numberOfPeers","peer","selectFirst","firstPeer","getAllParticipants","allPeers","callbcak","send","isNull","enableFileSharing","shareFile","remoteUser","channels","channel","createDataChannel","renegotiate","TextSender","text","getLocalConfig","remoteSdp","streamsToShare","rtcMultiConnection","renegotiatingPeer","peerRef","onLocalSdp","localSdp","onNegotiationNeeded","onLocalCandidate","localCandidate","OnIceCandidateHandler","processCandidates","onDataChannelMessage","isLastChunk","promptNextChunk","onDataChannelError","onDataChannelOpened","onDataChannelClosed","onRemoteStream","streams","onGettingRemoteMedia","onRemoteStreamRemoved","onRemovingRemoteMedia","onPeerStateChanged","states","iceConnectionState","onNegotiationStarted","onNegotiationCompleted","search","disconnectWith","enableMedia","setUserPreferences","localConfig","PeerInitiator","createAnsweringPeer","renegotiatePeer","replaceTrack","track","isVideoTrack","getSenders","rtpSender","kind","lastVideoTrack","lastAudioTrack","warn","sdp","addRemoteSdp","candidate","addRemoteCandidate","isAudio","isVideo","isScreen","onReadyForOffer","onGettingLocalMedia","localStream","onLocalMediaError","constraints","onMediaError","arrayOfUsers","DetectRTC","browser","textReceiver","TextReceiver","parse","onclose","onopen","state","getRemoteStreams","fireEvent","eventName","args","CustomEvent","eventDetail","__exposedProps__","setHarkEvents","streamEvent","getTracks","onspeaking","onsilence","hark","onvolumechange","volume","threshold","setMuteHandlers","addEventListener","muteType","onmute","unmuteType","onunmute","getRandomString","crypto","getRandomValues","navigator","userAgent","token","l","getTime","getRMCMediaElement","autoCreateMediaElement","isAudioOnly","mediaElement","srcObject","setAttribute","streamEndedEvent","currentUserMediaRequest","remove","idInstance","StreamsHandler","onSyncNeeded","aStream","newStreamsArray","played","play","cbFired","then","catch","listenEventHandler","eventHandler","removeEventListener","removeNullEntries","newArray","isString","getUserMedia","captureStream","mozCaptureStream","getContext","pause","drawImage","toDataURL","HTMLVideoElement","HTMLMediaElement","protocol","href","hash","width","height","revokeObjectURL","isNodejs","versions","node","version","webkitGetUserMedia","mozGetUserMedia","isMobileDevice","isEdge","msSaveOrOpenBlob","msSaveBlob","isOpera","opera","isFirefox","InstallTrigger","isSafari","isChrome","chrome","isIE","documentMode","getBrowserInfo","appVersion","nameOffset","verOffset","ix","nAgt","browserName","appName","fullVersion","parseFloat","majorVersion","split","substring","isPrivateBrowsing","retry","isDone","currentTrial","maxRetry","isTimeout","id","setInterval","clearInterval","isIE10OrLater","ua","exec","detectPrivateMode","isPrivate","webkitRequestFileSystem","TEMPORARY","indexedDB","db","open","localStorage","setItem","removeItem","isMobile","Android","BlackBerry","iOS","Opera","Windows","any","getOsName","osName","detectDesktopOS","cs","unknown","nVer","os","clientStrings","r","osVersion","getAndroidVersion","osInfo","isCanvasSupportsStreamCapturing","isVideoSupportsStreamCapturing","regexIpv4Local","regexIpv4","regexIpv6","DetectLocalIPAddress","isWebRTCSupported","isPublic","isIpv4","getIPs","ip","getElementById","ipDuplicates","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","iframe","win","contentWindow","peerConfig","optional","RtpDataChannels","servers","iceServers","urls","pc","addStream","addTrack","onicecandidate","handleCandidate","isPromisesSupported","createOffer","setLocalDescription","afterCreateOffer","ipAddress","lines","localDescription","line","MediaDevices","audioInputDevices","audioOutputDevices","videoInputDevices","mediaDevices","enumerateDevices","canEnumerate","MediaStreamTrack","hasMicrophone","hasSpeakers","hasWebcam","isWebsiteHasMicrophonePermissions","isWebsiteHasWebcamPermissions","checkDeviceSupport","getSources","bind","alreadyUsedDevices","devices","_device","device","deviceId","label","isCustomLabel","domain","isORTCSupported","RTCIceGatherer","isScreenCapturingSupported","isNonLocalHost","webAudio","isSupported","isCreateMediaStreamSourceSupported","isAudioContextSupported","isRtpDataChannelsSupported","isSCTPSupportd","isSctpDataChannelsSupported","isGetUserMediaSupported","displayResolution","getAspectRatio","w","h","gcd","displayAspectRatio","toFixed","isWebSocketsSupported","WebSocket","CLOSING","isWebSocketsBlocked","checkWebSocketsSupport","starttime","websocket","onmessage","WebsocketLatency","close","load","isSetSinkIdSupported","isRTPSenderReplaceTracksSupported","isRemoteStreamProcessingSupported","isApplyConstraintsSupported","isMultiMonitorScreenCapturingSupported","MediaStream","webkitMediaStream","cordova","el","attachEvent","attachEventListener","listener","useCapture","isAudioPlusTab","audioPlusTab","filter","t","isUnifiedPlanSupportedDefault","canAddTransceiver","RTCRtpTransceiver","tempPc","addTransceiver","isUnifiedPlanSuppored","isUnifiedPlanSupported","sdpSemantics","config","getConfiguration","setCordovaAPIs","plugins","iosrtc","RTCSessionDescription","RTCIceCandidate","enable","selectAudioOutput","iOSDefaultAudioOutputDevice","registerGlobals","stop","defaults","setSdpConstraints","mozRTCSessionDescription","mozRTCIceCandidate","removeStream","allRemoteStreams","localStreams","iceTransports","candidates","turn","relay","stun","reflexive","host","params","iceTransportPolicy","iceCandidatePoolSize","bundlePolicy","rtcpMuxPolicy","optionalArgument","getReceivers","receiver","getLocalStreams","trickleIce","sdpMid","sdpMLineIndex","beforeAddingStream","oniceconnectionstatechange","onsignalingstatechange","iceGatheringState","signalingState","dontDuplicate","ontrack","onended","onremovestream","streamToShare","onremovetrack","removeTrack","remoteCandidate","addIceCandidate","cb","processSdp","setRemoteDescription","isOfferer","setChannelEvents","binaryType","internalSend","ondatachannel","enableDisableVideoEncoding","rtcp","getParameters","encodings","active","setParameters","createOfferOrAnswer","_method","onSettingLocalDescription","nativeClose","CodecsHandler","preferCodec","codecName","splitLines","videoCodecNumbers","vp8LineNumber","vp9LineNumber","h264LineNumber","preferCodecHelper","codec","ignore","preferCodecNumber","newLine","videoCodecNumbersOriginal","newOrder","codecNumber","removeVPX","disableNACK","prioritize","codecMimeType","codecs","mimeType","unshift","splice","removeNonG722","setBAS","bandwidth","findLine","sdpLines","prefix","findLineInRange","startLine","endLine","realEndLine","getCodecPayloadType","sdpLine","pattern","setVideoBitrates","vp8Payload","xgoogle_min_bitrate","xgoogle_max_bitrate","vp8Index","rtxPayload","rtxIndex","rtxFmtpLineIndex","appendrtxNext","setOpusAttributes","opusPayload","opusIndex","opusFmtpLineIndex","appendOpusNext","stereo","maxaveragebitrate","maxplaybackrate","cbr","useinbandfec","usedtx","maxptime","forceStereoAudio","fmtpLineIndex","extractSdp","payload","setApplicationSpecificBandwidth","preferVP9","BandwidthHandler","icePair","iceRestrictions","iceProtocols","udp","tcp","IceServersHandler","getIceServers","setStreamType","chromeMediaSource","mozMediaSource","mediaSource","getUserMediaHandler","mutex","localMediaConstraints","streaming","isBlackBerry","getUserMediaStream","getUserMediaError","getUserMediaFailure","hints","getUserMediaSuccess","successCB","failureCB","getDisplayMedia","queueRequests","returnBack","shift","currentUserMediaRequestOptions","handleType","setHandlers","syncAction","mute","isSyncAction","enabled","isAudioMuted","unmute","graduallyIncreaseVolume","times","afterEach","setTimeoutInteval","numberOfTimes","startedTimes","content","last","isobject","receivingTime","latency","sendingTime","autoTranslateText","original","Translator","TranslateText","translatedText","initialText","packetSize","textToTransfer","sendText","textMessage","packets","chunkInterval","FileProgressBarHandler","handle","progressHelper","updateLabel","progress","position","innerHTML","div","title","filesContainer","insertBefore","firstChild","querySelector","helper","TranslationHandler","language","googKey","newScript","sourceText","encodeURIComponent","randomNumber","response","translations","getElementsByTagName","getListOfLanguages","xhr","XMLHttpRequest","onreadystatechange","responseText","languages","useDefaultDevices","preventDuplicateOnStreamEvents","connectSocket","socketAutoReConnect","FirebaseConnection","PubNubConnection","joinRoom","mediaConstraints","getStreamInfoForAdmin","password","isRoomJoined","openRoom","identifier","publicRoomIdentifier","isRoomOpened","selectAll","map","tracks","beforeJoin","dontCaptureUserMedia","invokeGetUserMedia","applyConstraints","setStreamEndHandler","muted","onstream","messageToDeliver","transport","openOrJoin","checkPresence","isRoomExist","captureUserMedia","eventObject","onleave","rejoin","onReConnecting","sessionForced","nonScreenSession","onbeforeunload","arg1","dontCloseSocket","closeBeforeUnload","closeSocket","ignoreBeforeUnload","changeUserId","newUserId","facingMode","lastAudioDevice","lastVideoDevice","sourceId","VoiceActivityDetection","DtlsSrtpKeyAgreement","googImprovedWifiBwe","googScreencastMinBitrate","googIPv6","googDscp","googCpuUnderuseThreshold","googCpuOveruseThreshold","googSuspendBelowMinBitrate","googCpuOveruseDetection","disconnect","closeEntireSession","videosContainer","user","gumCallback","streamCallback","videoConstraints","alert","resetTrack","remoteUsersIds","isRemote","alreadySetEndHandler","participantId","acceptParticipationRequest","invokeSelectFileDialog","paused","poster","snapshot","getSocket","skipStreams","local","remote","setCustomSocketEvent","customEvent","getNumberOfBroadcastViewers","broadcastId","numberOfBroadcastViewers","dontWriteLogs","setCustomSocketHandler","customSocketHandler","_roomid","SSEConnection","dontAttachStream","updateExtraData","beforeRemovingStream","isChromeExtensionAvailable","checkIfChromeExtensionAvailable","isFirefoxExtensionAvailable","getChromeExtensionStatus","modifyScreenConstraints","screen_constraints","isOnline","isLowBandwidth","opt","getExtraData","autoOpenOrJoin","resetScreen","setPassword","errors","ROOM_NOT_AVAILABLE","INVALID_PASSWORD","USERID_NOT_AVAILABLE","ROOM_PERMISSION_DENIED","ROOM_FULL","DID_NOT_JOIN_ANY_ROOM","INVALID_SOCKET","PUBLIC_IDENTIFIER_MISSING","INVALID_ADMIN_CREDENTIAL","render","_vm","_h","$createElement","_c","_self","_v","startBattleMode","startPartyMode","_m","staticRenderFns","staticClass","attrs","placeholder","TitleScreenvue_type_script_lang_js_","mounted","getExternalIceServers","btnSelectFile","joinARoom","roomId","lastSelectedFile","File","previewFile","onFileSelected","fileSelector","room_id","chunk_size","setupWebRTCConnection","fileReceived","logsDiv","connectedWith","doYouWannaReceiveThisFile","yesIWannaReceive","power","requestKeepAwake","appendLog","bytesToSize","incrementOrDecrementUsers","setFileProgressBarHandlers","innerWidth","reload","borderBottom","padding","preventDefault","k","sizes","toPrecision","numberOfUsers","html","color","left","right","zIndex","top","outline","querySelectorAll","maxWidth","fileNameMatches","textAlign","background","mouseEvent","getItem","disabled","stopPropagation","dataTransfer","dropEffect","methods","GameSettings","SetupBattleModeGame","router","SetupPartyModeGame","views_TitleScreenvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","$defineProperty","createDesc","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","Item","noop","nextTick","env","argv","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask"],"mappings":"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","file":"js/about.96fa4947.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TitleScreen.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TitleScreen.vue?vue&type=style&index=0&lang=css&\"","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","'use strict';\n\nvar isRegExp = require('./_is-regexp');\nvar anObject = require('./_an-object');\nvar speciesConstructor = require('./_species-constructor');\nvar advanceStringIndex = require('./_advance-string-index');\nvar toLength = require('./_to-length');\nvar callRegExpExec = require('./_regexp-exec-abstract');\nvar regexpExec = require('./_regexp-exec');\nvar fails = require('./_fails');\nvar $min = Math.min;\nvar $push = [].push;\nvar $SPLIT = 'split';\nvar LENGTH = 'length';\nvar LAST_INDEX = 'lastIndex';\nvar MAX_UINT32 = 0xffffffff;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return $split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy[LAST_INDEX];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);\n    };\n  } else {\n    internalSplit = $split;\n  }\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = defined(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n});\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","'use strict';\n\nvar anObject = require('./_an-object');\nvar sameValue = require('./_same-value');\nvar regExpExec = require('./_regexp-exec-abstract');\n\n// @@search logic\nrequire('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[SEARCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search\n    function (regexp) {\n      var res = maybeCallNative($search, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n","'use strict';\n\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\n\n// @@match logic\nrequire('./_fix-re-wks')('match', 1, function (defined, MATCH, $match, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[MATCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative($match, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      if (!rx.global) return regExpExec(rx, S);\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// 7.2.9 SameValue(x, y)\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// Last time updated: 2017-08-27 5:48:35 AM UTC\r\n\r\n// ________________\r\n// FileBufferReader\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/FileBufferReader\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\n'use strict';\r\n\r\n(function() {\r\n\r\n    function FileBufferReader() {\r\n        var fbr = this;\r\n        var fbrHelper = new FileBufferReaderHelper();\r\n\r\n        fbr.chunks = {};\r\n        fbr.users = {};\r\n\r\n        fbr.readAsArrayBuffer = function(file, callback, extra) {\r\n            var options = {\r\n                file: file,\r\n                earlyCallback: function(chunk) {\r\n                    callback(fbrClone(chunk, {\r\n                        currentPosition: -1\r\n                    }));\r\n                },\r\n                extra: extra || {\r\n                    userid: 0\r\n                }\r\n            };\r\n\r\n            if (file.extra && Object.keys(file.extra).length) {\r\n                Object.keys(file.extra).forEach(function(key) {\r\n                    options.extra[key] = file.extra[key];\r\n                });\r\n            }\r\n\r\n            fbrHelper.readAsArrayBuffer(fbr, options);\r\n        };\r\n\r\n        fbr.getNextChunk = function(fileUUID, callback, userid) {\r\n            var currentPosition;\r\n\r\n            if (typeof fileUUID.currentPosition !== 'undefined') {\r\n                currentPosition = fileUUID.currentPosition;\r\n                fileUUID = fileUUID.uuid;\r\n            }\r\n\r\n            var allFileChunks = fbr.chunks[fileUUID];\r\n            if (!allFileChunks) {\r\n                return;\r\n            }\r\n\r\n            if (typeof userid !== 'undefined') {\r\n                if (!fbr.users[userid + '']) {\r\n                    fbr.users[userid + ''] = {\r\n                        fileUUID: fileUUID,\r\n                        userid: userid,\r\n                        currentPosition: -1\r\n                    };\r\n                }\r\n\r\n                if (typeof currentPosition !== 'undefined') {\r\n                    fbr.users[userid + ''].currentPosition = currentPosition;\r\n                }\r\n\r\n                fbr.users[userid + ''].currentPosition++;\r\n                currentPosition = fbr.users[userid + ''].currentPosition;\r\n            } else {\r\n                if (typeof currentPosition !== 'undefined') {\r\n                    fbr.chunks[fileUUID].currentPosition = currentPosition;\r\n                }\r\n\r\n                fbr.chunks[fileUUID].currentPosition++;\r\n                currentPosition = fbr.chunks[fileUUID].currentPosition;\r\n            }\r\n\r\n            var nextChunk = allFileChunks[currentPosition];\r\n            if (!nextChunk) {\r\n                delete fbr.chunks[fileUUID];\r\n                fbr.convertToArrayBuffer({\r\n                    chunkMissing: true,\r\n                    currentPosition: currentPosition,\r\n                    uuid: fileUUID\r\n                }, callback);\r\n                return;\r\n            }\r\n\r\n            nextChunk = fbrClone(nextChunk);\r\n\r\n            if (typeof userid !== 'undefined') {\r\n                nextChunk.remoteUserId = userid + '';\r\n            }\r\n\r\n            if (!!nextChunk.start) {\r\n                fbr.onBegin(nextChunk);\r\n            }\r\n\r\n            if (!!nextChunk.end) {\r\n                fbr.onEnd(nextChunk);\r\n            }\r\n\r\n            fbr.onProgress(nextChunk);\r\n\r\n            fbr.convertToArrayBuffer(nextChunk, function(buffer) {\r\n                if (nextChunk.currentPosition == nextChunk.maxChunks) {\r\n                    callback(buffer, true);\r\n                    return;\r\n                }\r\n\r\n                callback(buffer, false);\r\n            });\r\n        };\r\n\r\n        var fbReceiver = new FileBufferReceiver(fbr);\r\n\r\n        fbr.addChunk = function(chunk, callback) {\r\n            if (!chunk) {\r\n                return;\r\n            }\r\n\r\n            fbReceiver.receive(chunk, function(chunk) {\r\n                fbr.convertToArrayBuffer({\r\n                    readyForNextChunk: true,\r\n                    currentPosition: chunk.currentPosition,\r\n                    uuid: chunk.uuid\r\n                }, callback);\r\n            });\r\n        };\r\n\r\n        fbr.chunkMissing = function(chunk) {\r\n            delete fbReceiver.chunks[chunk.uuid];\r\n            delete fbReceiver.chunksWaiters[chunk.uuid];\r\n        };\r\n\r\n        fbr.onBegin = function() {};\r\n        fbr.onEnd = function() {};\r\n        fbr.onProgress = function() {};\r\n\r\n        fbr.convertToObject = FileConverter.ConvertToObject;\r\n        fbr.convertToArrayBuffer = FileConverter.ConvertToArrayBuffer\r\n\r\n        // for backward compatibility----it is redundant.\r\n        fbr.setMultipleUsers = function() {};\r\n\r\n        // extends 'from' object with members from 'to'. If 'to' is null, a deep clone of 'from' is returned\r\n        function fbrClone(from, to) {\r\n            if (from == null || typeof from != \"object\") return from;\r\n            if (from.constructor != Object && from.constructor != Array) return from;\r\n            if (from.constructor == Date || from.constructor == RegExp || from.constructor == Function ||\r\n                from.constructor == String || from.constructor == Number || from.constructor == Boolean)\r\n                return new from.constructor(from);\r\n\r\n            to = to || new from.constructor();\r\n\r\n            for (var name in from) {\r\n                to[name] = typeof to[name] == \"undefined\" ? fbrClone(from[name], null) : to[name];\r\n            }\r\n\r\n            return to;\r\n        }\r\n    }\r\n\r\n    function FileBufferReaderHelper() {\r\n        var fbrHelper = this;\r\n\r\n        function processInWebWorker(_function) {\r\n            var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                'this.onmessage =  function (e) {' + _function.name + '(e.data);}'\r\n            ], {\r\n                type: 'application/javascript'\r\n            }));\r\n\r\n            var worker = new Worker(blob);\r\n            return worker;\r\n        }\r\n\r\n        fbrHelper.readAsArrayBuffer = function(fbr, options) {\r\n            var earlyCallback = options.earlyCallback;\r\n            delete options.earlyCallback;\r\n\r\n            function processChunk(chunk) {\r\n                if (!fbr.chunks[chunk.uuid]) {\r\n                    fbr.chunks[chunk.uuid] = {\r\n                        currentPosition: -1\r\n                    };\r\n                }\r\n\r\n                options.extra = options.extra || {\r\n                    userid: 0\r\n                };\r\n\r\n                chunk.userid = options.userid || options.extra.userid || 0;\r\n                chunk.extra = options.extra;\r\n\r\n                fbr.chunks[chunk.uuid][chunk.currentPosition] = chunk;\r\n\r\n                if (chunk.end && earlyCallback) {\r\n                    earlyCallback(chunk.uuid);\r\n                    earlyCallback = null;\r\n                }\r\n\r\n                // for huge files\r\n                if ((chunk.maxChunks > 200 && chunk.currentPosition == 200) && earlyCallback) {\r\n                    earlyCallback(chunk.uuid);\r\n                    earlyCallback = null;\r\n                }\r\n            }\r\n            if (false && typeof Worker !== 'undefined') {\r\n                var webWorker = processInWebWorker(fileReaderWrapper);\r\n\r\n                webWorker.onmessage = function(event) {\r\n                    processChunk(event.data);\r\n                };\r\n\r\n                webWorker.postMessage(options);\r\n            } else {\r\n                fileReaderWrapper(options, processChunk);\r\n            }\r\n        };\r\n\r\n        function fileReaderWrapper(options, callback) {\r\n            callback = callback || function(chunk) {\r\n                postMessage(chunk);\r\n            };\r\n\r\n            var file = options.file;\r\n            if (!file.uuid) {\r\n                file.uuid = (Math.random() * 100).toString().replace(/\\./g, '');\r\n            }\r\n\r\n            var chunkSize = options.chunkSize || 15 * 1000;\r\n            if (options.extra && options.extra.chunkSize) {\r\n                chunkSize = options.extra.chunkSize;\r\n            }\r\n\r\n            var sliceId = 0;\r\n            var cacheSize = chunkSize;\r\n\r\n            var chunksPerSlice = Math.floor(Math.min(100000000, cacheSize) / chunkSize);\r\n            var sliceSize = chunksPerSlice * chunkSize;\r\n            var maxChunks = Math.ceil(file.size / chunkSize);\r\n\r\n            file.maxChunks = maxChunks;\r\n\r\n            var numOfChunksInSlice;\r\n            var currentPosition = 0;\r\n            var hasEntireFile;\r\n            var chunks = [];\r\n\r\n            callback({\r\n                currentPosition: currentPosition,\r\n                uuid: file.uuid,\r\n                maxChunks: maxChunks,\r\n                size: file.size,\r\n                name: file.name,\r\n                type: file.type,\r\n                lastModifiedDate: (file.lastModifiedDate || new Date()).toString(),\r\n                start: true\r\n            });\r\n\r\n            var blob, reader = new FileReader();\r\n\r\n            reader.onloadend = function(evt) {\r\n                if (evt.target.readyState == FileReader.DONE) {\r\n                    addChunks(file.name, evt.target.result, function() {\r\n                        sliceId++;\r\n                        if ((sliceId + 1) * sliceSize < file.size) {\r\n                            blob = file.slice(sliceId * sliceSize, (sliceId + 1) * sliceSize);\r\n                            reader.readAsArrayBuffer(blob);\r\n                        } else if (sliceId * sliceSize < file.size) {\r\n                            blob = file.slice(sliceId * sliceSize, file.size);\r\n                            reader.readAsArrayBuffer(blob);\r\n                        } else {\r\n                            file.url = URL.createObjectURL(file);\r\n                            callback({\r\n                                currentPosition: currentPosition,\r\n                                uuid: file.uuid,\r\n                                maxChunks: maxChunks,\r\n                                size: file.size,\r\n                                name: file.name,\r\n                                lastModifiedDate: (file.lastModifiedDate || new Date()).toString(),\r\n                                url: URL.createObjectURL(file),\r\n                                type: file.type,\r\n                                end: true\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n\r\n            currentPosition += 1;\r\n\r\n            blob = file.slice(sliceId * sliceSize, (sliceId + 1) * sliceSize);\r\n            reader.readAsArrayBuffer(blob);\r\n\r\n            function addChunks(fileName, binarySlice, addChunkCallback) {\r\n                numOfChunksInSlice = Math.ceil(binarySlice.byteLength / chunkSize);\r\n                for (var i = 0; i < numOfChunksInSlice; i++) {\r\n                    var start = i * chunkSize;\r\n                    chunks[currentPosition] = binarySlice.slice(start, Math.min(start + chunkSize, binarySlice.byteLength));\r\n\r\n                    callback({\r\n                        uuid: file.uuid,\r\n                        buffer: chunks[currentPosition],\r\n                        currentPosition: currentPosition,\r\n                        maxChunks: maxChunks,\r\n\r\n                        size: file.size,\r\n                        name: file.name,\r\n                        lastModifiedDate: (file.lastModifiedDate || new Date()).toString(),\r\n                        type: file.type\r\n                    });\r\n\r\n                    currentPosition++;\r\n                }\r\n\r\n                if (currentPosition == maxChunks) {\r\n                    hasEntireFile = true;\r\n                }\r\n\r\n                addChunkCallback();\r\n            }\r\n        }\r\n    }\r\n\r\n    function FileSelector() {\r\n        var selector = this;\r\n\r\n        var noFileSelectedCallback = function() {};\r\n\r\n        selector.selectSingleFile = function(callback, failure) {\r\n            if (failure) {\r\n                noFileSelectedCallback = failure;\r\n            }\r\n\r\n            selectFile(callback);\r\n        };\r\n        selector.selectMultipleFiles = function(callback, failure) {\r\n            if (failure) {\r\n                noFileSelectedCallback = failure;\r\n            }\r\n\r\n            selectFile(callback, true);\r\n        };\r\n        selector.selectDirectory = function(callback, failure) {\r\n            if (failure) {\r\n                noFileSelectedCallback = failure;\r\n            }\r\n\r\n            selectFile(callback, true, true);\r\n        };\r\n\r\n        selector.accept = '*.*';\r\n\r\n        function selectFile(callback, multiple, directory) {\r\n            callback = callback || function() {};\r\n\r\n            var file = document.createElement('input');\r\n            file.type = 'file';\r\n\r\n            if (multiple) {\r\n                file.multiple = true;\r\n            }\r\n\r\n            if (directory) {\r\n                file.webkitdirectory = true;\r\n            }\r\n\r\n            file.accept = selector.accept;\r\n\r\n            file.onclick = function() {\r\n                file.clickStarted = true;\r\n            };\r\n\r\n            document.body.onfocus = function() {\r\n                setTimeout(function() {\r\n                    if (!file.clickStarted) return;\r\n                    file.clickStarted = false;\r\n\r\n                    if (!file.value) {\r\n                        noFileSelectedCallback();\r\n                    }\r\n                }, 500);\r\n            };\r\n\r\n            file.onchange = function() {\r\n                if (multiple) {\r\n                    if (!file.files.length) {\r\n                        console.error('No file selected.');\r\n                        return;\r\n                    }\r\n\r\n                    var arr = [];\r\n                    Array.from(file.files).forEach(function(file) {\r\n                        file.url = file.webkitRelativePath;\r\n                        arr.push(file);\r\n                    });\r\n                    callback(arr);\r\n                    return;\r\n                }\r\n\r\n                if (!file.files[0]) {\r\n                    console.error('No file selected.');\r\n                    return;\r\n                }\r\n\r\n                callback(file.files[0]);\r\n\r\n                file.parentNode.removeChild(file);\r\n            };\r\n            file.style.display = 'none';\r\n            (document.body || document.documentElement).appendChild(file);\r\n            fireClickEvent(file);\r\n        }\r\n\r\n        function getValidFileName(fileName) {\r\n            if (!fileName) {\r\n                fileName = 'file' + (new Date).toISOString().replace(/:|\\.|-/g, '')\r\n            }\r\n\r\n            var a = fileName;\r\n            a = a.replace(/^.*[\\\\\\/]([^\\\\\\/]*)$/i, \"$1\");\r\n            a = a.replace(/\\s/g, \"_\");\r\n            a = a.replace(/,/g, '');\r\n            a = a.toLowerCase();\r\n            return a;\r\n        }\r\n\r\n        function fireClickEvent(element) {\r\n            if (typeof element.click === 'function') {\r\n                element.click();\r\n                return;\r\n            }\r\n\r\n            if (typeof element.change === 'function') {\r\n                element.change();\r\n                return;\r\n            }\r\n\r\n            if (typeof document.createEvent('Event') !== 'undefined') {\r\n                var event = document.createEvent('Event');\r\n\r\n                if (typeof event.initEvent === 'function' && typeof element.dispatchEvent === 'function') {\r\n                    event.initEvent('click', true, true);\r\n                    element.dispatchEvent(event);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            var event = new MouseEvent('click', {\r\n                view: window,\r\n                bubbles: true,\r\n                cancelable: true\r\n            });\r\n\r\n            element.dispatchEvent(event);\r\n        }\r\n    }\r\n\r\n    function FileBufferReceiver(fbr) {\r\n        var fbReceiver = this;\r\n\r\n        fbReceiver.chunks = {};\r\n        fbReceiver.chunksWaiters = {};\r\n\r\n        function receive(chunk, callback) {\r\n            if (!chunk.uuid) {\r\n                fbr.convertToObject(chunk, function(object) {\r\n                    receive(object);\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (chunk.start && !fbReceiver.chunks[chunk.uuid]) {\r\n                fbReceiver.chunks[chunk.uuid] = {};\r\n                if (fbr.onBegin) fbr.onBegin(chunk);\r\n            }\r\n\r\n            if (!chunk.end && chunk.buffer) {\r\n                fbReceiver.chunks[chunk.uuid][chunk.currentPosition] = chunk.buffer;\r\n            }\r\n\r\n            if (chunk.end) {\r\n                var chunksObject = fbReceiver.chunks[chunk.uuid];\r\n                var chunksArray = [];\r\n                Object.keys(chunksObject).forEach(function(item, idx) {\r\n                    chunksArray.push(chunksObject[item]);\r\n                });\r\n\r\n                var blob = new Blob(chunksArray, {\r\n                    type: chunk.type\r\n                });\r\n                blob = merge(blob, chunk);\r\n                blob.url = URL.createObjectURL(blob);\r\n                blob.uuid = chunk.uuid;\r\n\r\n                if (!blob.size) console.error('Something went wrong. Blob Size is 0.');\r\n\r\n                if (fbr.onEnd) fbr.onEnd(blob);\r\n\r\n                // clear system memory\r\n                delete fbReceiver.chunks[chunk.uuid];\r\n                delete fbReceiver.chunksWaiters[chunk.uuid];\r\n            }\r\n\r\n            if (chunk.buffer && fbr.onProgress) fbr.onProgress(chunk);\r\n\r\n            if (!chunk.end) {\r\n                callback(chunk);\r\n\r\n                fbReceiver.chunksWaiters[chunk.uuid] = function() {\r\n                    function looper() {\r\n                        if (!chunk.buffer) {\r\n                            return;\r\n                        }\r\n\r\n                        if (!fbReceiver.chunks[chunk.uuid]) {\r\n                            return;\r\n                        }\r\n\r\n                        if (chunk.currentPosition != chunk.maxChunks && !fbReceiver.chunks[chunk.uuid][chunk.currentPosition]) {\r\n                            callback(chunk);\r\n                            setTimeout(looper, 5000);\r\n                        }\r\n                    }\r\n                    setTimeout(looper, 5000);\r\n                };\r\n\r\n                fbReceiver.chunksWaiters[chunk.uuid]();\r\n            }\r\n        }\r\n\r\n        fbReceiver.receive = receive;\r\n    }\r\n\r\n    var FileConverter = {\r\n        ConvertToArrayBuffer: function(object, callback) {\r\n            binarize.pack(object, function(dataView) {\r\n                callback(dataView.buffer);\r\n            });\r\n        },\r\n        ConvertToObject: function(buffer, callback) {\r\n            binarize.unpack(buffer, callback);\r\n        }\r\n    };\r\n\r\n    function merge(mergein, mergeto) {\r\n        if (!mergein) mergein = {};\r\n        if (!mergeto) return mergein;\r\n\r\n        for (var item in mergeto) {\r\n            try {\r\n                mergein[item] = mergeto[item];\r\n            } catch (e) {}\r\n        }\r\n        return mergein;\r\n    }\r\n\r\n    var debug = false;\r\n\r\n    var BIG_ENDIAN = false,\r\n        LITTLE_ENDIAN = true,\r\n        TYPE_LENGTH = Uint8Array.BYTES_PER_ELEMENT,\r\n        LENGTH_LENGTH = Uint16Array.BYTES_PER_ELEMENT,\r\n        BYTES_LENGTH = Uint32Array.BYTES_PER_ELEMENT;\r\n\r\n    var Types = {\r\n        NULL: 0,\r\n        UNDEFINED: 1,\r\n        STRING: 2,\r\n        NUMBER: 3,\r\n        BOOLEAN: 4,\r\n        ARRAY: 5,\r\n        OBJECT: 6,\r\n        INT8ARRAY: 7,\r\n        INT16ARRAY: 8,\r\n        INT32ARRAY: 9,\r\n        UINT8ARRAY: 10,\r\n        UINT16ARRAY: 11,\r\n        UINT32ARRAY: 12,\r\n        FLOAT32ARRAY: 13,\r\n        FLOAT64ARRAY: 14,\r\n        ARRAYBUFFER: 15,\r\n        BLOB: 16,\r\n        FILE: 16,\r\n        BUFFER: 17 // Special type for node.js\r\n    };\r\n\r\n    if (debug) {\r\n        var TypeNames = [\r\n            'NULL',\r\n            'UNDEFINED',\r\n            'STRING',\r\n            'NUMBER',\r\n            'BOOLEAN',\r\n            'ARRAY',\r\n            'OBJECT',\r\n            'INT8ARRAY',\r\n            'INT16ARRAY',\r\n            'INT32ARRAY',\r\n            'UINT8ARRAY',\r\n            'UINT16ARRAY',\r\n            'UINT32ARRAY',\r\n            'FLOAT32ARRAY',\r\n            'FLOAT64ARRAY',\r\n            'ARRAYBUFFER',\r\n            'BLOB',\r\n            'BUFFER'\r\n        ];\r\n    }\r\n\r\n    var Length = [\r\n        null, // Types.NULL\r\n        null, // Types.UNDEFINED\r\n        'Uint16', // Types.STRING\r\n        'Float64', // Types.NUMBER\r\n        'Uint8', // Types.BOOLEAN\r\n        null, // Types.ARRAY\r\n        null, // Types.OBJECT\r\n        'Int8', // Types.INT8ARRAY\r\n        'Int16', // Types.INT16ARRAY\r\n        'Int32', // Types.INT32ARRAY\r\n        'Uint8', // Types.UINT8ARRAY\r\n        'Uint16', // Types.UINT16ARRAY\r\n        'Uint32', // Types.UINT32ARRAY\r\n        'Float32', // Types.FLOAT32ARRAY\r\n        'Float64', // Types.FLOAT64ARRAY\r\n        'Uint8', // Types.ARRAYBUFFER\r\n        'Uint8', // Types.BLOB, Types.FILE\r\n        'Uint8' // Types.BUFFER\r\n    ];\r\n\r\n    var binary_dump = function(view, start, length) {\r\n        var table = [],\r\n            endianness = BIG_ENDIAN,\r\n            ROW_LENGTH = 40;\r\n        table[0] = [];\r\n        for (var i = 0; i < ROW_LENGTH; i++) {\r\n            table[0][i] = i < 10 ? '0' + i.toString(10) : i.toString(10);\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var code = view.getUint8(start + i, endianness);\r\n            var index = ~~(i / ROW_LENGTH) + 1;\r\n            if (typeof table[index] === 'undefined') table[index] = [];\r\n            table[index][i % ROW_LENGTH] = code < 16 ? '0' + code.toString(16) : code.toString(16);\r\n        }\r\n        console.log('%c' + table[0].join(' '), 'font-weight: bold;');\r\n        for (i = 1; i < table.length; i++) {\r\n            console.log(table[i].join(' '));\r\n        }\r\n    };\r\n\r\n    var find_type = function(obj) {\r\n        var type = undefined;\r\n\r\n        if (obj === undefined) {\r\n            type = Types.UNDEFINED;\r\n\r\n        } else if (obj === null) {\r\n            type = Types.NULL;\r\n\r\n        } else {\r\n            var const_name = obj.constructor.name;\r\n            var const_name_reflection = obj.constructor.toString().match(/\\w+/g)[1];\r\n            if (const_name !== undefined && Types[const_name.toUpperCase()] !== undefined) {\r\n                // return type by .constructor.name if possible\r\n                type = Types[const_name.toUpperCase()];\r\n\r\n            } else if (const_name_reflection !== undefined && Types[const_name_reflection.toUpperCase()] !== undefined) {\r\n                type = Types[const_name_reflection.toUpperCase()];\r\n\r\n            } else {\r\n                // Work around when constructor.name is not defined\r\n                switch (typeof obj) {\r\n                    case 'string':\r\n                        type = Types.STRING;\r\n                        break;\r\n\r\n                    case 'number':\r\n                        type = Types.NUMBER;\r\n                        break;\r\n\r\n                    case 'boolean':\r\n                        type = Types.BOOLEAN;\r\n                        break;\r\n\r\n                    case 'object':\r\n                        if (obj instanceof Array) {\r\n                            type = Types.ARRAY;\r\n\r\n                        } else if (obj instanceof Int8Array) {\r\n                            type = Types.INT8ARRAY;\r\n\r\n                        } else if (obj instanceof Int16Array) {\r\n                            type = Types.INT16ARRAY;\r\n\r\n                        } else if (obj instanceof Int32Array) {\r\n                            type = Types.INT32ARRAY;\r\n\r\n                        } else if (obj instanceof Uint8Array) {\r\n                            type = Types.UINT8ARRAY;\r\n\r\n                        } else if (obj instanceof Uint16Array) {\r\n                            type = Types.UINT16ARRAY;\r\n\r\n                        } else if (obj instanceof Uint32Array) {\r\n                            type = Types.UINT32ARRAY;\r\n\r\n                        } else if (obj instanceof Float32Array) {\r\n                            type = Types.FLOAT32ARRAY;\r\n\r\n                        } else if (obj instanceof Float64Array) {\r\n                            type = Types.FLOAT64ARRAY;\r\n\r\n                        } else if (obj instanceof ArrayBuffer) {\r\n                            type = Types.ARRAYBUFFER;\r\n\r\n                        } else if (obj instanceof Blob) { // including File\r\n                            type = Types.BLOB;\r\n\r\n                        } else if (obj instanceof Buffer) { // node.js only\r\n                            type = Types.BUFFER;\r\n\r\n                        } else if (obj instanceof Object) {\r\n                            type = Types.OBJECT;\r\n\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        return type;\r\n    };\r\n\r\n    var utf16_utf8 = function(string) {\r\n        return unescape(encodeURIComponent(string));\r\n    };\r\n\r\n    var utf8_utf16 = function(bytes) {\r\n        return decodeURIComponent(escape(bytes));\r\n    };\r\n\r\n    /**\r\n     * packs seriarized elements array into a packed ArrayBuffer\r\n     * @param  {Array} serialized Serialized array of elements.\r\n     * @return {DataView} view of packed binary\r\n     */\r\n    var pack = function(serialized) {\r\n        var cursor = 0,\r\n            i = 0,\r\n            j = 0,\r\n            endianness = BIG_ENDIAN;\r\n\r\n        var ab = new ArrayBuffer(serialized[0].byte_length + serialized[0].header_size);\r\n        var view = new DataView(ab);\r\n\r\n        for (i = 0; i < serialized.length; i++) {\r\n            var start = cursor,\r\n                header_size = serialized[i].header_size,\r\n                type = serialized[i].type,\r\n                length = serialized[i].length,\r\n                value = serialized[i].value,\r\n                byte_length = serialized[i].byte_length,\r\n                type_name = Length[type],\r\n                unit = type_name === null ? 0 : window[type_name + 'Array'].BYTES_PER_ELEMENT;\r\n\r\n            // Set type\r\n            if (type === Types.BUFFER) {\r\n                // on node.js Blob is emulated using Buffer type\r\n                view.setUint8(cursor, Types.BLOB, endianness);\r\n            } else {\r\n                view.setUint8(cursor, type, endianness);\r\n            }\r\n            cursor += TYPE_LENGTH;\r\n\r\n            if (debug) {\r\n                console.info('Packing', type, TypeNames[type]);\r\n            }\r\n\r\n            // Set length if required\r\n            if (type === Types.ARRAY || type === Types.OBJECT) {\r\n                view.setUint16(cursor, length, endianness);\r\n                cursor += LENGTH_LENGTH;\r\n\r\n                if (debug) {\r\n                    console.info('Content Length', length);\r\n                }\r\n            }\r\n\r\n            // Set byte length\r\n            view.setUint32(cursor, byte_length, endianness);\r\n            cursor += BYTES_LENGTH;\r\n\r\n            if (debug) {\r\n                console.info('Header Size', header_size, 'bytes');\r\n                console.info('Byte Length', byte_length, 'bytes');\r\n            }\r\n\r\n            switch (type) {\r\n                case Types.NULL:\r\n                case Types.UNDEFINED:\r\n                    // NULL and UNDEFINED doesn't have any payload\r\n                    break;\r\n\r\n                case Types.STRING:\r\n                    if (debug) {\r\n                        console.info('Actual Content %c\"' + value + '\"', 'font-weight:bold;');\r\n                    }\r\n                    for (j = 0; j < length; j++, cursor += unit) {\r\n                        view.setUint16(cursor, value.charCodeAt(j), endianness);\r\n                    }\r\n                    break;\r\n\r\n                case Types.NUMBER:\r\n                case Types.BOOLEAN:\r\n                    if (debug) {\r\n                        console.info('%c' + value.toString(), 'font-weight:bold;');\r\n                    }\r\n                    view['set' + type_name](cursor, value, endianness);\r\n                    cursor += unit;\r\n                    break;\r\n\r\n                case Types.INT8ARRAY:\r\n                case Types.INT16ARRAY:\r\n                case Types.INT32ARRAY:\r\n                case Types.UINT8ARRAY:\r\n                case Types.UINT16ARRAY:\r\n                case Types.UINT32ARRAY:\r\n                case Types.FLOAT32ARRAY:\r\n                case Types.FLOAT64ARRAY:\r\n                    var _view = new Uint8Array(view.buffer, cursor, byte_length);\r\n                    _view.set(new Uint8Array(value.buffer));\r\n                    cursor += byte_length;\r\n                    break;\r\n\r\n                case Types.ARRAYBUFFER:\r\n                case Types.BUFFER:\r\n                    var _view = new Uint8Array(view.buffer, cursor, byte_length);\r\n                    _view.set(new Uint8Array(value));\r\n                    cursor += byte_length;\r\n                    break;\r\n\r\n                case Types.BLOB:\r\n                case Types.ARRAY:\r\n                case Types.OBJECT:\r\n                    break;\r\n\r\n                default:\r\n                    throw 'TypeError: Unexpected type found.';\r\n            }\r\n\r\n            if (debug) {\r\n                binary_dump(view, start, cursor - start);\r\n            }\r\n        }\r\n\r\n        return view;\r\n    };\r\n\r\n    /**\r\n     * Unpack binary data into an object with value and cursor\r\n     * @param  {DataView} view [description]\r\n     * @param  {Number} cursor [description]\r\n     * @return {Object}\r\n     */\r\n    var unpack = function(view, cursor) {\r\n        var i = 0,\r\n            endianness = BIG_ENDIAN,\r\n            start = cursor;\r\n        var type, length, byte_length, value, elem;\r\n\r\n        // Retrieve \"type\"\r\n        type = view.getUint8(cursor, endianness);\r\n        cursor += TYPE_LENGTH;\r\n\r\n        if (debug) {\r\n            console.info('Unpacking', type, TypeNames[type]);\r\n        }\r\n\r\n        // Retrieve \"length\"\r\n        if (type === Types.ARRAY || type === Types.OBJECT) {\r\n            length = view.getUint16(cursor, endianness);\r\n            cursor += LENGTH_LENGTH;\r\n\r\n            if (debug) {\r\n                console.info('Content Length', length);\r\n            }\r\n        }\r\n\r\n        // Retrieve \"byte_length\"\r\n        byte_length = view.getUint32(cursor, endianness);\r\n        cursor += BYTES_LENGTH;\r\n\r\n        if (debug) {\r\n            console.info('Byte Length', byte_length, 'bytes');\r\n        }\r\n\r\n        var type_name = Length[type];\r\n        var unit = type_name === null ? 0 : window[type_name + 'Array'].BYTES_PER_ELEMENT;\r\n\r\n        switch (type) {\r\n            case Types.NULL:\r\n            case Types.UNDEFINED:\r\n                if (debug) {\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                // NULL and UNDEFINED doesn't have any octet\r\n                value = null;\r\n                break;\r\n\r\n            case Types.STRING:\r\n                length = byte_length / unit;\r\n                var string = [];\r\n                for (i = 0; i < length; i++) {\r\n                    var code = view.getUint16(cursor, endianness);\r\n                    cursor += unit;\r\n                    string.push(String.fromCharCode(code));\r\n                }\r\n                value = string.join('');\r\n                if (debug) {\r\n                    console.info('Actual Content %c\"' + value + '\"', 'font-weight:bold;');\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                break;\r\n\r\n            case Types.NUMBER:\r\n                value = view.getFloat64(cursor, endianness);\r\n                cursor += unit;\r\n                if (debug) {\r\n                    console.info('Actual Content %c\"' + value.toString() + '\"', 'font-weight:bold;');\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                break;\r\n\r\n            case Types.BOOLEAN:\r\n                value = view.getUint8(cursor, endianness) === 1 ? true : false;\r\n                cursor += unit;\r\n                if (debug) {\r\n                    console.info('Actual Content %c\"' + value.toString() + '\"', 'font-weight:bold;');\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                break;\r\n\r\n            case Types.INT8ARRAY:\r\n            case Types.INT16ARRAY:\r\n            case Types.INT32ARRAY:\r\n            case Types.UINT8ARRAY:\r\n            case Types.UINT16ARRAY:\r\n            case Types.UINT32ARRAY:\r\n            case Types.FLOAT32ARRAY:\r\n            case Types.FLOAT64ARRAY:\r\n            case Types.ARRAYBUFFER:\r\n                elem = view.buffer.slice(cursor, cursor + byte_length);\r\n                cursor += byte_length;\r\n\r\n                // If ArrayBuffer\r\n                if (type === Types.ARRAYBUFFER) {\r\n                    value = elem;\r\n\r\n                    // If other TypedArray\r\n                } else {\r\n                    value = new window[type_name + 'Array'](elem);\r\n                }\r\n\r\n                if (debug) {\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                break;\r\n\r\n            case Types.BLOB:\r\n                if (debug) {\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                // If Blob is available (on browser)\r\n                if (window.Blob) {\r\n                    var mime = unpack(view, cursor);\r\n                    var buffer = unpack(view, mime.cursor);\r\n                    cursor = buffer.cursor;\r\n                    value = new Blob([buffer.value], {\r\n                        type: mime.value\r\n                    });\r\n                } else {\r\n                    // node.js implementation goes here\r\n                    elem = view.buffer.slice(cursor, cursor + byte_length);\r\n                    cursor += byte_length;\r\n                    // node.js implementatino uses Buffer to help Blob\r\n                    value = new Buffer(elem);\r\n                }\r\n                break;\r\n\r\n            case Types.ARRAY:\r\n                if (debug) {\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                value = [];\r\n                for (i = 0; i < length; i++) {\r\n                    // Retrieve array element\r\n                    elem = unpack(view, cursor);\r\n                    cursor = elem.cursor;\r\n                    value.push(elem.value);\r\n                }\r\n                break;\r\n\r\n            case Types.OBJECT:\r\n                if (debug) {\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                value = {};\r\n                for (i = 0; i < length; i++) {\r\n                    // Retrieve object key and value in sequence\r\n                    var key = unpack(view, cursor);\r\n                    var val = unpack(view, key.cursor);\r\n                    cursor = val.cursor;\r\n                    value[key.value] = val.value;\r\n                }\r\n                break;\r\n\r\n            default:\r\n                throw 'TypeError: Type not supported.';\r\n        }\r\n        return {\r\n            value: value,\r\n            cursor: cursor\r\n        };\r\n    };\r\n\r\n    /**\r\n     * deferred function to process multiple serialization in order\r\n     * @param  {array}   array    [description]\r\n     * @param  {Function} callback [description]\r\n     * @return {void} no return value\r\n     */\r\n    var deferredSerialize = function(array, callback) {\r\n        var length = array.length,\r\n            results = [],\r\n            count = 0,\r\n            byte_length = 0;\r\n        for (var i = 0; i < array.length; i++) {\r\n            (function(index) {\r\n                serialize(array[index], function(result) {\r\n                    // store results in order\r\n                    results[index] = result;\r\n                    // count byte length\r\n                    byte_length += result[0].header_size + result[0].byte_length;\r\n                    // when all results are on table\r\n                    if (++count === length) {\r\n                        // finally concatenate all reuslts into a single array in order\r\n                        var array = [];\r\n                        for (var j = 0; j < results.length; j++) {\r\n                            array = array.concat(results[j]);\r\n                        }\r\n                        callback(array, byte_length);\r\n                    }\r\n                });\r\n            })(i);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Serializes object and return byte_length\r\n     * @param  {mixed} obj JavaScript object you want to serialize\r\n     * @return {Array} Serialized array object\r\n     */\r\n    var serialize = function(obj, callback) {\r\n        var subarray = [],\r\n            unit = 1,\r\n            header_size = TYPE_LENGTH + BYTES_LENGTH,\r\n            type, byte_length = 0,\r\n            length = 0,\r\n            value = obj;\r\n\r\n        type = find_type(obj);\r\n\r\n        unit = Length[type] === undefined || Length[type] === null ? 0 :\r\n            window[Length[type] + 'Array'].BYTES_PER_ELEMENT;\r\n\r\n        switch (type) {\r\n            case Types.UNDEFINED:\r\n            case Types.NULL:\r\n                break;\r\n\r\n            case Types.NUMBER:\r\n            case Types.BOOLEAN:\r\n                byte_length = unit;\r\n                break;\r\n\r\n            case Types.STRING:\r\n                length = obj.length;\r\n                byte_length += length * unit;\r\n                break;\r\n\r\n            case Types.INT8ARRAY:\r\n            case Types.INT16ARRAY:\r\n            case Types.INT32ARRAY:\r\n            case Types.UINT8ARRAY:\r\n            case Types.UINT16ARRAY:\r\n            case Types.UINT32ARRAY:\r\n            case Types.FLOAT32ARRAY:\r\n            case Types.FLOAT64ARRAY:\r\n                length = obj.length;\r\n                byte_length += length * unit;\r\n                break;\r\n\r\n            case Types.ARRAY:\r\n                deferredSerialize(obj, function(subarray, byte_length) {\r\n                    callback([{\r\n                        type: type,\r\n                        length: obj.length,\r\n                        header_size: header_size + LENGTH_LENGTH,\r\n                        byte_length: byte_length,\r\n                        value: null\r\n                    }].concat(subarray));\r\n                });\r\n                return;\r\n\r\n            case Types.OBJECT:\r\n                var deferred = [];\r\n                for (var key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        deferred.push(key);\r\n                        deferred.push(obj[key]);\r\n                        length++;\r\n                    }\r\n                }\r\n                deferredSerialize(deferred, function(subarray, byte_length) {\r\n                    callback([{\r\n                        type: type,\r\n                        length: length,\r\n                        header_size: header_size + LENGTH_LENGTH,\r\n                        byte_length: byte_length,\r\n                        value: null\r\n                    }].concat(subarray));\r\n                });\r\n                return;\r\n\r\n            case Types.ARRAYBUFFER:\r\n                byte_length += obj.byteLength;\r\n                break;\r\n\r\n            case Types.BLOB:\r\n                var mime_type = obj.type;\r\n                var reader = new FileReader();\r\n                reader.onload = function(e) {\r\n                    deferredSerialize([mime_type, e.target.result], function(subarray, byte_length) {\r\n                        callback([{\r\n                            type: type,\r\n                            length: length,\r\n                            header_size: header_size,\r\n                            byte_length: byte_length,\r\n                            value: null\r\n                        }].concat(subarray));\r\n                    });\r\n                };\r\n                reader.onerror = function(e) {\r\n                    throw 'FileReader Error: ' + e;\r\n                };\r\n                reader.readAsArrayBuffer(obj);\r\n                return;\r\n\r\n            case Types.BUFFER:\r\n                byte_length += obj.length;\r\n                break;\r\n\r\n            default:\r\n                throw 'TypeError: Type \"' + obj.constructor.name + '\" not supported.';\r\n        }\r\n\r\n        callback([{\r\n            type: type,\r\n            length: length,\r\n            header_size: header_size,\r\n            byte_length: byte_length,\r\n            value: value\r\n        }].concat(subarray));\r\n    };\r\n\r\n    /**\r\n     * Deserialize binary and return JavaScript object\r\n     * @param  ArrayBuffer buffer ArrayBuffer you want to deserialize\r\n     * @return mixed              Retrieved JavaScript object\r\n     */\r\n    var deserialize = function(buffer, callback) {\r\n        var view = buffer instanceof DataView ? buffer : new DataView(buffer);\r\n        var result = unpack(view, 0);\r\n        return result.value;\r\n    };\r\n\r\n    if (debug) {\r\n        window.Test = {\r\n            BIG_ENDIAN: BIG_ENDIAN,\r\n            LITTLE_ENDIAN: LITTLE_ENDIAN,\r\n            Types: Types,\r\n            pack: pack,\r\n            unpack: unpack,\r\n            serialize: serialize,\r\n            deserialize: deserialize\r\n        };\r\n    }\r\n\r\n    var binarize = {\r\n        pack: function(obj, callback) {\r\n            try {\r\n                if (debug) console.info('%cPacking Start', 'font-weight: bold; color: red;', obj);\r\n                serialize(obj, function(array) {\r\n                    if (debug) console.info('Serialized Object', array);\r\n                    callback(pack(array));\r\n                });\r\n            } catch (e) {\r\n                throw e;\r\n            }\r\n        },\r\n        unpack: function(buffer, callback) {\r\n            try {\r\n                if (debug) console.info('%cUnpacking Start', 'font-weight: bold; color: red;', buffer);\r\n                var result = deserialize(buffer);\r\n                if (debug) console.info('Deserialized Object', result);\r\n                callback(result);\r\n            } catch (e) {\r\n                throw e;\r\n            }\r\n        }\r\n    };\r\n\r\n    window.FileConverter = FileConverter;\r\n    window.FileSelector = FileSelector;\r\n    window.FileBufferReader = FileBufferReader;\r\n})();\r\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict';\r\n\r\n// Last time updated: 2019-06-15 4:26:11 PM UTC\r\n\r\n// _________________________\r\n// RTCMultiConnection v3.6.9\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/RTCMultiConnection\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\nvar RTCMultiConnection = function(roomid, forceOptions) {\r\n\r\n    var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n    (function(that) {\r\n        if (!that) {\r\n            return;\r\n        }\r\n\r\n        if (typeof window !== 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (typeof global === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        global.navigator = {\r\n            userAgent: browserFakeUserAgent,\r\n            getUserMedia: function() {}\r\n        };\r\n\r\n        if (!global.console) {\r\n            global.console = {};\r\n        }\r\n\r\n        if (typeof global.console.debug === 'undefined') {\r\n            global.console.debug = global.console.info = global.console.error = global.console.log = global.console.log || function() {\r\n                console.log(arguments);\r\n            };\r\n        }\r\n\r\n        if (typeof document === 'undefined') {\r\n            /*global document:true */\r\n            that.document = {};\r\n\r\n            document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n                var obj = {\r\n                    getContext: function() {\r\n                        return obj;\r\n                    },\r\n                    play: function() {},\r\n                    pause: function() {},\r\n                    drawImage: function() {},\r\n                    toDataURL: function() {\r\n                        return '';\r\n                    }\r\n                };\r\n                return obj;\r\n            };\r\n\r\n            document.addEventListener = document.removeEventListener = that.addEventListener = that.removeEventListener = function() {};\r\n\r\n            that.HTMLVideoElement = that.HTMLMediaElement = function() {};\r\n        }\r\n\r\n        if (typeof io === 'undefined') {\r\n            that.io = function() {\r\n                return {\r\n                    on: function(eventName, callback) {\r\n                        callback = callback || function() {};\r\n\r\n                        if (eventName === 'connect') {\r\n                            callback();\r\n                        }\r\n                    },\r\n                    emit: function(eventName, data, callback) {\r\n                        callback = callback || function() {};\r\n                        if (eventName === 'open-room' || eventName === 'join-room') {\r\n                            callback(true, data.sessionid, null);\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        }\r\n\r\n        if (typeof location === 'undefined') {\r\n            /*global location:true */\r\n            that.location = {\r\n                protocol: 'file:',\r\n                href: '',\r\n                hash: '',\r\n                origin: 'self'\r\n            };\r\n        }\r\n\r\n        if (typeof screen === 'undefined') {\r\n            /*global screen:true */\r\n            that.screen = {\r\n                width: 0,\r\n                height: 0\r\n            };\r\n        }\r\n\r\n        if (typeof URL === 'undefined') {\r\n            /*global screen:true */\r\n            that.URL = {\r\n                createObjectURL: function() {\r\n                    return '';\r\n                },\r\n                revokeObjectURL: function() {\r\n                    return '';\r\n                }\r\n            };\r\n        }\r\n\r\n        /*global window:true */\r\n        that.window = global;\r\n    })(typeof global !== 'undefined' ? global : null);\r\n\r\n    function SocketConnection(connection, connectCallback) {\r\n        function isData(session) {\r\n            return !session.audio && !session.video && !session.screen && session.data;\r\n        }\r\n\r\n        var parameters = '';\r\n\r\n        parameters += '?userid=' + connection.userid;\r\n        parameters += '&sessionid=' + connection.sessionid;\r\n        parameters += '&msgEvent=' + connection.socketMessageEvent;\r\n        parameters += '&socketCustomEvent=' + connection.socketCustomEvent;\r\n        parameters += '&autoCloseEntireSession=' + !!connection.autoCloseEntireSession;\r\n\r\n        if (connection.session.broadcast === true) {\r\n            parameters += '&oneToMany=true';\r\n        }\r\n\r\n        parameters += '&maxParticipantsAllowed=' + connection.maxParticipantsAllowed;\r\n\r\n        if (connection.enableScalableBroadcast) {\r\n            parameters += '&enableScalableBroadcast=true';\r\n            parameters += '&maxRelayLimitPerUser=' + (connection.maxRelayLimitPerUser || 2);\r\n        }\r\n\r\n        parameters += '&extra=' + JSON.stringify(connection.extra || {});\r\n\r\n        if (connection.socketCustomParameters) {\r\n            parameters += connection.socketCustomParameters;\r\n        }\r\n\r\n        try {\r\n            io.sockets = {};\r\n        } catch (e) {};\r\n\r\n        if (!connection.socketURL) {\r\n            connection.socketURL = '/';\r\n        }\r\n\r\n        if (connection.socketURL.substr(connection.socketURL.length - 1, 1) != '/') {\r\n            // connection.socketURL = 'https://domain.com:9001/';\r\n            throw '\"socketURL\" MUST end with a slash.';\r\n        }\r\n\r\n        if (connection.enableLogs) {\r\n            if (connection.socketURL == '/') {\r\n                console.info('socket.io url is: ', location.origin + '/');\r\n            } else {\r\n                console.info('socket.io url is: ', connection.socketURL);\r\n            }\r\n        }\r\n\r\n        try {\r\n            connection.socket = io(connection.socketURL + parameters);\r\n        } catch (e) {\r\n            connection.socket = io.connect(connection.socketURL + parameters, connection.socketOptions);\r\n        }\r\n\r\n        var mPeer = connection.multiPeersHandler;\r\n\r\n        connection.socket.on('extra-data-updated', function(remoteUserId, extra) {\r\n            if (!connection.peers[remoteUserId]) return;\r\n            connection.peers[remoteUserId].extra = extra;\r\n\r\n            connection.onExtraDataUpdated({\r\n                userid: remoteUserId,\r\n                extra: extra\r\n            });\r\n\r\n            updateExtraBackup(remoteUserId, extra);\r\n        });\r\n\r\n        function updateExtraBackup(remoteUserId, extra) {\r\n            if (!connection.peersBackup[remoteUserId]) {\r\n                connection.peersBackup[remoteUserId] = {\r\n                    userid: remoteUserId,\r\n                    extra: {}\r\n                };\r\n            }\r\n\r\n            connection.peersBackup[remoteUserId].extra = extra;\r\n        }\r\n\r\n        function onMessageEvent(message) {\r\n            if (message.remoteUserId != connection.userid) return;\r\n\r\n            if (connection.peers[message.sender] && connection.peers[message.sender].extra != message.message.extra) {\r\n                connection.peers[message.sender].extra = message.extra;\r\n                connection.onExtraDataUpdated({\r\n                    userid: message.sender,\r\n                    extra: message.extra\r\n                });\r\n\r\n                updateExtraBackup(message.sender, message.extra);\r\n            }\r\n\r\n            if (message.message.streamSyncNeeded && connection.peers[message.sender]) {\r\n                var stream = connection.streamEvents[message.message.streamid];\r\n                if (!stream || !stream.stream) {\r\n                    return;\r\n                }\r\n\r\n                var action = message.message.action;\r\n\r\n                if (action === 'ended' || action === 'inactive' || action === 'stream-removed') {\r\n                    if (connection.peersBackup[stream.userid]) {\r\n                        stream.extra = connection.peersBackup[stream.userid].extra;\r\n                    }\r\n                    connection.onstreamended(stream);\r\n                    return;\r\n                }\r\n\r\n                var type = message.message.type != 'both' ? message.message.type : null;\r\n\r\n                if (typeof stream.stream[action] == 'function') {\r\n                    stream.stream[action](type);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (message.message === 'dropPeerConnection') {\r\n                connection.deletePeer(message.sender);\r\n                return;\r\n            }\r\n\r\n            if (message.message.allParticipants) {\r\n                if (message.message.allParticipants.indexOf(message.sender) === -1) {\r\n                    message.message.allParticipants.push(message.sender);\r\n                }\r\n\r\n                message.message.allParticipants.forEach(function(participant) {\r\n                    mPeer[!connection.peers[participant] ? 'createNewPeer' : 'renegotiatePeer'](participant, {\r\n                        localPeerSdpConstraints: {\r\n                            OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                            OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                        },\r\n                        remotePeerSdpConstraints: {\r\n                            OfferToReceiveAudio: connection.session.oneway ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                            OfferToReceiveVideo: connection.session.oneway ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                        },\r\n                        isOneWay: !!connection.session.oneway || connection.direction === 'one-way',\r\n                        isDataOnly: isData(connection.session)\r\n                    });\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (message.message.newParticipant) {\r\n                if (message.message.newParticipant == connection.userid) return;\r\n                if (!!connection.peers[message.message.newParticipant]) return;\r\n\r\n                mPeer.createNewPeer(message.message.newParticipant, message.message.userPreferences || {\r\n                    localPeerSdpConstraints: {\r\n                        OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    },\r\n                    remotePeerSdpConstraints: {\r\n                        OfferToReceiveAudio: connection.session.oneway ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: connection.session.oneway ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    },\r\n                    isOneWay: !!connection.session.oneway || connection.direction === 'one-way',\r\n                    isDataOnly: isData(connection.session)\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (message.message.readyForOffer) {\r\n                if (connection.attachStreams.length) {\r\n                    connection.waitingForLocalMedia = false;\r\n                }\r\n\r\n                if (connection.waitingForLocalMedia) {\r\n                    // if someone is waiting to join you\r\n                    // make sure that we've local media before making a handshake\r\n                    setTimeout(function() {\r\n                        onMessageEvent(message);\r\n                    }, 1);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (message.message.newParticipationRequest && message.sender !== connection.userid) {\r\n                if (connection.peers[message.sender]) {\r\n                    connection.deletePeer(message.sender);\r\n                }\r\n\r\n                var userPreferences = {\r\n                    extra: message.extra || {},\r\n                    localPeerSdpConstraints: message.message.remotePeerSdpConstraints || {\r\n                        OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    },\r\n                    remotePeerSdpConstraints: message.message.localPeerSdpConstraints || {\r\n                        OfferToReceiveAudio: connection.session.oneway ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: connection.session.oneway ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    },\r\n                    isOneWay: typeof message.message.isOneWay !== 'undefined' ? message.message.isOneWay : !!connection.session.oneway || connection.direction === 'one-way',\r\n                    isDataOnly: typeof message.message.isDataOnly !== 'undefined' ? message.message.isDataOnly : isData(connection.session),\r\n                    dontGetRemoteStream: typeof message.message.isOneWay !== 'undefined' ? message.message.isOneWay : !!connection.session.oneway || connection.direction === 'one-way',\r\n                    dontAttachLocalStream: !!message.message.dontGetRemoteStream,\r\n                    connectionDescription: message,\r\n                    successCallback: function() {}\r\n                };\r\n\r\n                connection.onNewParticipant(message.sender, userPreferences);\r\n                return;\r\n            }\r\n\r\n            if (message.message.changedUUID) {\r\n                if (connection.peers[message.message.oldUUID]) {\r\n                    connection.peers[message.message.newUUID] = connection.peers[message.message.oldUUID];\r\n                    delete connection.peers[message.message.oldUUID];\r\n                }\r\n            }\r\n\r\n            if (message.message.userLeft) {\r\n                mPeer.onUserLeft(message.sender);\r\n\r\n                if (!!message.message.autoCloseEntireSession) {\r\n                    connection.leave();\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            mPeer.addNegotiatedMessage(message.message, message.sender);\r\n        }\r\n\r\n        connection.socket.on(connection.socketMessageEvent, onMessageEvent);\r\n\r\n        var alreadyConnected = false;\r\n\r\n        connection.socket.resetProps = function() {\r\n            alreadyConnected = false;\r\n        };\r\n\r\n        connection.socket.on('connect', function() {\r\n            if (alreadyConnected) {\r\n                return;\r\n            }\r\n            alreadyConnected = true;\r\n\r\n            if (connection.enableLogs) {\r\n                console.info('socket.io connection is opened.');\r\n            }\r\n\r\n            setTimeout(function() {\r\n                connection.socket.emit('extra-data-updated', connection.extra);\r\n            }, 1000);\r\n\r\n            if (connectCallback) {\r\n                connectCallback(connection.socket);\r\n            }\r\n        });\r\n\r\n        connection.socket.on('disconnect', function(event) {\r\n            connection.onSocketDisconnect(event);\r\n        });\r\n\r\n        connection.socket.on('error', function(event) {\r\n            connection.onSocketError(event);\r\n        });\r\n\r\n        connection.socket.on('user-disconnected', function(remoteUserId) {\r\n            if (remoteUserId === connection.userid) {\r\n                return;\r\n            }\r\n\r\n            connection.onUserStatusChanged({\r\n                userid: remoteUserId,\r\n                status: 'offline',\r\n                extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra || {} : {}\r\n            });\r\n\r\n            connection.deletePeer(remoteUserId);\r\n        });\r\n\r\n        connection.socket.on('user-connected', function(userid) {\r\n            if (userid === connection.userid) {\r\n                return;\r\n            }\r\n\r\n            connection.onUserStatusChanged({\r\n                userid: userid,\r\n                status: 'online',\r\n                extra: connection.peers[userid] ? connection.peers[userid].extra || {} : {}\r\n            });\r\n        });\r\n\r\n        connection.socket.on('closed-entire-session', function(sessionid, extra) {\r\n            connection.leave();\r\n            connection.onEntireSessionClosed({\r\n                sessionid: sessionid,\r\n                userid: sessionid,\r\n                extra: extra\r\n            });\r\n        });\r\n\r\n        connection.socket.on('userid-already-taken', function(useridAlreadyTaken, yourNewUserId) {\r\n            connection.onUserIdAlreadyTaken(useridAlreadyTaken, yourNewUserId);\r\n        });\r\n\r\n        connection.socket.on('logs', function(log) {\r\n            if (!connection.enableLogs) return;\r\n            console.debug('server-logs', log);\r\n        });\r\n\r\n        connection.socket.on('number-of-broadcast-viewers-updated', function(data) {\r\n            connection.onNumberOfBroadcastViewersUpdated(data);\r\n        });\r\n\r\n        connection.socket.on('set-isInitiator-true', function(sessionid) {\r\n            if (sessionid != connection.sessionid) return;\r\n            connection.isInitiator = true;\r\n        });\r\n    }\r\n\r\n    function MultiPeers(connection) {\r\n        var self = this;\r\n\r\n        var skipPeers = ['getAllParticipants', 'getLength', 'selectFirst', 'streams', 'send', 'forEach'];\r\n        connection.peers = {\r\n            getLength: function() {\r\n                var numberOfPeers = 0;\r\n                for (var peer in this) {\r\n                    if (skipPeers.indexOf(peer) == -1) {\r\n                        numberOfPeers++;\r\n                    }\r\n                }\r\n                return numberOfPeers;\r\n            },\r\n            selectFirst: function() {\r\n                var firstPeer;\r\n                for (var peer in this) {\r\n                    if (skipPeers.indexOf(peer) == -1) {\r\n                        firstPeer = this[peer];\r\n                    }\r\n                }\r\n                return firstPeer;\r\n            },\r\n            getAllParticipants: function(sender) {\r\n                var allPeers = [];\r\n                for (var peer in this) {\r\n                    if (skipPeers.indexOf(peer) == -1 && peer != sender) {\r\n                        allPeers.push(peer);\r\n                    }\r\n                }\r\n                return allPeers;\r\n            },\r\n            forEach: function(callbcak) {\r\n                this.getAllParticipants().forEach(function(participant) {\r\n                    callbcak(connection.peers[participant]);\r\n                });\r\n            },\r\n            send: function(data, remoteUserId) {\r\n                var that = this;\r\n\r\n                if (!isNull(data.size) && !isNull(data.type)) {\r\n                    if (connection.enableFileSharing) {\r\n                        self.shareFile(data, remoteUserId);\r\n                        return;\r\n                    }\r\n\r\n                    if (typeof data !== 'string') {\r\n                        data = JSON.stringify(data);\r\n                    }\r\n                }\r\n\r\n                if (data.type !== 'text' && !(data instanceof ArrayBuffer) && !(data instanceof DataView)) {\r\n                    TextSender.send({\r\n                        text: data,\r\n                        channel: this,\r\n                        connection: connection,\r\n                        remoteUserId: remoteUserId\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                if (data.type === 'text') {\r\n                    data = JSON.stringify(data);\r\n                }\r\n\r\n                if (remoteUserId) {\r\n                    var remoteUser = connection.peers[remoteUserId];\r\n                    if (remoteUser) {\r\n                        if (!remoteUser.channels.length) {\r\n                            connection.peers[remoteUserId].createDataChannel();\r\n                            connection.renegotiate(remoteUserId);\r\n                            setTimeout(function() {\r\n                                that.send(data, remoteUserId);\r\n                            }, 3000);\r\n                            return;\r\n                        }\r\n\r\n                        remoteUser.channels.forEach(function(channel) {\r\n                            channel.send(data);\r\n                        });\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                this.getAllParticipants().forEach(function(participant) {\r\n                    if (!that[participant].channels.length) {\r\n                        connection.peers[participant].createDataChannel();\r\n                        connection.renegotiate(participant);\r\n                        setTimeout(function() {\r\n                            that[participant].channels.forEach(function(channel) {\r\n                                channel.send(data);\r\n                            });\r\n                        }, 3000);\r\n                        return;\r\n                    }\r\n\r\n                    that[participant].channels.forEach(function(channel) {\r\n                        channel.send(data);\r\n                    });\r\n                });\r\n            }\r\n        };\r\n\r\n        this.uuid = connection.userid;\r\n\r\n        this.getLocalConfig = function(remoteSdp, remoteUserId, userPreferences) {\r\n            if (!userPreferences) {\r\n                userPreferences = {};\r\n            }\r\n\r\n            return {\r\n                streamsToShare: userPreferences.streamsToShare || {},\r\n                rtcMultiConnection: connection,\r\n                connectionDescription: userPreferences.connectionDescription,\r\n                userid: remoteUserId,\r\n                localPeerSdpConstraints: userPreferences.localPeerSdpConstraints,\r\n                remotePeerSdpConstraints: userPreferences.remotePeerSdpConstraints,\r\n                dontGetRemoteStream: !!userPreferences.dontGetRemoteStream,\r\n                dontAttachLocalStream: !!userPreferences.dontAttachLocalStream,\r\n                renegotiatingPeer: !!userPreferences.renegotiatingPeer,\r\n                peerRef: userPreferences.peerRef,\r\n                channels: userPreferences.channels || [],\r\n                onLocalSdp: function(localSdp) {\r\n                    self.onNegotiationNeeded(localSdp, remoteUserId);\r\n                },\r\n                onLocalCandidate: function(localCandidate) {\r\n                    localCandidate = OnIceCandidateHandler.processCandidates(connection, localCandidate)\r\n                    if (localCandidate) {\r\n                        self.onNegotiationNeeded(localCandidate, remoteUserId);\r\n                    }\r\n                },\r\n                remoteSdp: remoteSdp,\r\n                onDataChannelMessage: function(message) {\r\n                    if (!connection.fbr && connection.enableFileSharing) initFileBufferReader();\r\n\r\n                    if (typeof message == 'string' || !connection.enableFileSharing) {\r\n                        self.onDataChannelMessage(message, remoteUserId);\r\n                        return;\r\n                    }\r\n\r\n                    var that = this;\r\n\r\n                    if (message instanceof ArrayBuffer || message instanceof DataView) {\r\n                        connection.fbr.convertToObject(message, function(object) {\r\n                            that.onDataChannelMessage(object);\r\n                        });\r\n                        return;\r\n                    }\r\n\r\n                    if (message.readyForNextChunk) {\r\n                        connection.fbr.getNextChunk(message, function(nextChunk, isLastChunk) {\r\n                            connection.peers[remoteUserId].channels.forEach(function(channel) {\r\n                                channel.send(nextChunk);\r\n                            });\r\n                        }, remoteUserId);\r\n                        return;\r\n                    }\r\n\r\n                    if (message.chunkMissing) {\r\n                        connection.fbr.chunkMissing(message);\r\n                        return;\r\n                    }\r\n\r\n                    connection.fbr.addChunk(message, function(promptNextChunk) {\r\n                        connection.peers[remoteUserId].peer.channel.send(promptNextChunk);\r\n                    });\r\n                },\r\n                onDataChannelError: function(error) {\r\n                    self.onDataChannelError(error, remoteUserId);\r\n                },\r\n                onDataChannelOpened: function(channel) {\r\n                    self.onDataChannelOpened(channel, remoteUserId);\r\n                },\r\n                onDataChannelClosed: function(event) {\r\n                    self.onDataChannelClosed(event, remoteUserId);\r\n                },\r\n                onRemoteStream: function(stream) {\r\n                    if (connection.peers[remoteUserId]) {\r\n                        connection.peers[remoteUserId].streams.push(stream);\r\n                    }\r\n\r\n                    self.onGettingRemoteMedia(stream, remoteUserId);\r\n                },\r\n                onRemoteStreamRemoved: function(stream) {\r\n                    self.onRemovingRemoteMedia(stream, remoteUserId);\r\n                },\r\n                onPeerStateChanged: function(states) {\r\n                    self.onPeerStateChanged(states);\r\n\r\n                    if (states.iceConnectionState === 'new') {\r\n                        self.onNegotiationStarted(remoteUserId, states);\r\n                    }\r\n\r\n                    if (states.iceConnectionState === 'connected') {\r\n                        self.onNegotiationCompleted(remoteUserId, states);\r\n                    }\r\n\r\n                    if (states.iceConnectionState.search(/closed|failed/gi) !== -1) {\r\n                        self.onUserLeft(remoteUserId);\r\n                        self.disconnectWith(remoteUserId);\r\n                    }\r\n                }\r\n            };\r\n        };\r\n\r\n        this.createNewPeer = function(remoteUserId, userPreferences) {\r\n            if (connection.maxParticipantsAllowed <= connection.getAllParticipants().length) {\r\n                return;\r\n            }\r\n\r\n            userPreferences = userPreferences || {};\r\n\r\n            if (connection.isInitiator && !!connection.session.audio && connection.session.audio === 'two-way' && !userPreferences.streamsToShare) {\r\n                userPreferences.isOneWay = false;\r\n                userPreferences.isDataOnly = false;\r\n                userPreferences.session = connection.session;\r\n            }\r\n\r\n            if (!userPreferences.isOneWay && !userPreferences.isDataOnly) {\r\n                userPreferences.isOneWay = true;\r\n                this.onNegotiationNeeded({\r\n                    enableMedia: true,\r\n                    userPreferences: userPreferences\r\n                }, remoteUserId);\r\n                return;\r\n            }\r\n\r\n            userPreferences = connection.setUserPreferences(userPreferences, remoteUserId);\r\n            var localConfig = this.getLocalConfig(null, remoteUserId, userPreferences);\r\n            connection.peers[remoteUserId] = new PeerInitiator(localConfig);\r\n        };\r\n\r\n        this.createAnsweringPeer = function(remoteSdp, remoteUserId, userPreferences) {\r\n            userPreferences = connection.setUserPreferences(userPreferences || {}, remoteUserId);\r\n\r\n            var localConfig = this.getLocalConfig(remoteSdp, remoteUserId, userPreferences);\r\n            connection.peers[remoteUserId] = new PeerInitiator(localConfig);\r\n        };\r\n\r\n        this.renegotiatePeer = function(remoteUserId, userPreferences, remoteSdp) {\r\n            if (!connection.peers[remoteUserId]) {\r\n                if (connection.enableLogs) {\r\n                    console.error('Peer (' + remoteUserId + ') does not exist. Renegotiation skipped.');\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (!userPreferences) {\r\n                userPreferences = {};\r\n            }\r\n\r\n            userPreferences.renegotiatingPeer = true;\r\n            userPreferences.peerRef = connection.peers[remoteUserId].peer;\r\n            userPreferences.channels = connection.peers[remoteUserId].channels;\r\n\r\n            var localConfig = this.getLocalConfig(remoteSdp, remoteUserId, userPreferences);\r\n\r\n            connection.peers[remoteUserId] = new PeerInitiator(localConfig);\r\n        };\r\n\r\n        this.replaceTrack = function(track, remoteUserId, isVideoTrack) {\r\n            if (!connection.peers[remoteUserId]) {\r\n                throw 'This peer (' + remoteUserId + ') does not exist.';\r\n            }\r\n\r\n            var peer = connection.peers[remoteUserId].peer;\r\n\r\n            if (!!peer.getSenders && typeof peer.getSenders === 'function' && peer.getSenders().length) {\r\n                peer.getSenders().forEach(function(rtpSender) {\r\n                    if (isVideoTrack && rtpSender.track.kind === 'video') {\r\n                        connection.peers[remoteUserId].peer.lastVideoTrack = rtpSender.track;\r\n                        rtpSender.replaceTrack(track);\r\n                    }\r\n\r\n                    if (!isVideoTrack && rtpSender.track.kind === 'audio') {\r\n                        connection.peers[remoteUserId].peer.lastAudioTrack = rtpSender.track;\r\n                        rtpSender.replaceTrack(track);\r\n                    }\r\n                });\r\n                return;\r\n            }\r\n\r\n            console.warn('RTPSender.replaceTrack is NOT supported.');\r\n            this.renegotiatePeer(remoteUserId);\r\n        };\r\n\r\n        this.onNegotiationNeeded = function(message, remoteUserId) {};\r\n        this.addNegotiatedMessage = function(message, remoteUserId) {\r\n            if (message.type && message.sdp) {\r\n                if (message.type == 'answer') {\r\n                    if (connection.peers[remoteUserId]) {\r\n                        connection.peers[remoteUserId].addRemoteSdp(message);\r\n                    }\r\n                }\r\n\r\n                if (message.type == 'offer') {\r\n                    if (message.renegotiatingPeer) {\r\n                        this.renegotiatePeer(remoteUserId, null, message);\r\n                    } else {\r\n                        this.createAnsweringPeer(message, remoteUserId);\r\n                    }\r\n                }\r\n\r\n                if (connection.enableLogs) {\r\n                    console.log('Remote peer\\'s sdp:', message.sdp);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (message.candidate) {\r\n                if (connection.peers[remoteUserId]) {\r\n                    connection.peers[remoteUserId].addRemoteCandidate(message);\r\n                }\r\n\r\n                if (connection.enableLogs) {\r\n                    console.log('Remote peer\\'s candidate pairs:', message.candidate);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (message.enableMedia) {\r\n                connection.session = message.userPreferences.session || connection.session;\r\n\r\n                if (connection.session.oneway && connection.attachStreams.length) {\r\n                    connection.attachStreams = [];\r\n                }\r\n\r\n                if (message.userPreferences.isDataOnly && connection.attachStreams.length) {\r\n                    connection.attachStreams.length = [];\r\n                }\r\n\r\n                var streamsToShare = {};\r\n                connection.attachStreams.forEach(function(stream) {\r\n                    streamsToShare[stream.streamid] = {\r\n                        isAudio: !!stream.isAudio,\r\n                        isVideo: !!stream.isVideo,\r\n                        isScreen: !!stream.isScreen\r\n                    };\r\n                });\r\n                message.userPreferences.streamsToShare = streamsToShare;\r\n\r\n                self.onNegotiationNeeded({\r\n                    readyForOffer: true,\r\n                    userPreferences: message.userPreferences\r\n                }, remoteUserId);\r\n            }\r\n\r\n            if (message.readyForOffer) {\r\n                connection.onReadyForOffer(remoteUserId, message.userPreferences);\r\n            }\r\n\r\n            function cb(stream) {\r\n                gumCallback(stream, message, remoteUserId);\r\n            }\r\n        };\r\n\r\n        function gumCallback(stream, message, remoteUserId) {\r\n            var streamsToShare = {};\r\n            connection.attachStreams.forEach(function(stream) {\r\n                streamsToShare[stream.streamid] = {\r\n                    isAudio: !!stream.isAudio,\r\n                    isVideo: !!stream.isVideo,\r\n                    isScreen: !!stream.isScreen\r\n                };\r\n            });\r\n            message.userPreferences.streamsToShare = streamsToShare;\r\n\r\n            self.onNegotiationNeeded({\r\n                readyForOffer: true,\r\n                userPreferences: message.userPreferences\r\n            }, remoteUserId);\r\n        }\r\n\r\n        this.onGettingRemoteMedia = function(stream, remoteUserId) {};\r\n        this.onRemovingRemoteMedia = function(stream, remoteUserId) {};\r\n        this.onGettingLocalMedia = function(localStream) {};\r\n        this.onLocalMediaError = function(error, constraints) {\r\n            connection.onMediaError(error, constraints);\r\n        };\r\n\r\n        function initFileBufferReader() {\r\n            connection.fbr = new FileBufferReader();\r\n            connection.fbr.onProgress = function(chunk) {\r\n                connection.onFileProgress(chunk);\r\n            };\r\n            connection.fbr.onBegin = function(file) {\r\n                connection.onFileStart(file);\r\n            };\r\n            connection.fbr.onEnd = function(file) {\r\n                connection.onFileEnd(file);\r\n            };\r\n        }\r\n\r\n        this.shareFile = function(file, remoteUserId) {\r\n            initFileBufferReader();\r\n\r\n            connection.fbr.readAsArrayBuffer(file, function(uuid) {\r\n                var arrayOfUsers = connection.getAllParticipants();\r\n\r\n                if (remoteUserId) {\r\n                    arrayOfUsers = [remoteUserId];\r\n                }\r\n\r\n                arrayOfUsers.forEach(function(participant) {\r\n                    connection.fbr.getNextChunk(uuid, function(nextChunk) {\r\n                        connection.peers[participant].channels.forEach(function(channel) {\r\n                            channel.send(nextChunk);\r\n                        });\r\n                    }, participant);\r\n                });\r\n            }, {\r\n                userid: connection.userid,\r\n                // extra: connection.extra,\r\n                chunkSize: DetectRTC.browser.name === 'Firefox' ? 15 * 1000 : connection.chunkSize || 0\r\n            });\r\n        };\r\n\r\n        if (typeof 'TextReceiver' !== 'undefined') {\r\n            var textReceiver = new TextReceiver(connection);\r\n        }\r\n\r\n        this.onDataChannelMessage = function(message, remoteUserId) {\r\n            textReceiver.receive(JSON.parse(message), remoteUserId, connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {});\r\n        };\r\n\r\n        this.onDataChannelClosed = function(event, remoteUserId) {\r\n            event.userid = remoteUserId;\r\n            event.extra = connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {};\r\n            connection.onclose(event);\r\n        };\r\n\r\n        this.onDataChannelError = function(error, remoteUserId) {\r\n            error.userid = remoteUserId;\r\n            event.extra = connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {};\r\n            connection.onerror(error);\r\n        };\r\n\r\n        this.onDataChannelOpened = function(channel, remoteUserId) {\r\n            // keep last channel only; we are not expecting parallel/channels channels\r\n            if (connection.peers[remoteUserId].channels.length) {\r\n                connection.peers[remoteUserId].channels = [channel];\r\n                return;\r\n            }\r\n\r\n            connection.peers[remoteUserId].channels.push(channel);\r\n            connection.onopen({\r\n                userid: remoteUserId,\r\n                extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {},\r\n                channel: channel\r\n            });\r\n        };\r\n\r\n        this.onPeerStateChanged = function(state) {\r\n            connection.onPeerStateChanged(state);\r\n        };\r\n\r\n        this.onNegotiationStarted = function(remoteUserId, states) {};\r\n        this.onNegotiationCompleted = function(remoteUserId, states) {};\r\n\r\n        this.getRemoteStreams = function(remoteUserId) {\r\n            remoteUserId = remoteUserId || connection.peers.getAllParticipants()[0];\r\n            return connection.peers[remoteUserId] ? connection.peers[remoteUserId].streams : [];\r\n        };\r\n    }\r\n\r\n    'use strict';\r\n\r\n    // Last Updated On: 2019-01-10 5:32:55 AM UTC\r\n\r\n    // ________________\r\n    // DetectRTC v1.3.9\r\n\r\n    // Open-Sourced: https://github.com/muaz-khan/DetectRTC\r\n\r\n    // --------------------------------------------------\r\n    // Muaz Khan     - www.MuazKhan.com\r\n    // MIT License   - www.WebRTC-Experiment.com/licence\r\n    // --------------------------------------------------\r\n\r\n    (function() {\r\n\r\n        var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n        var isNodejs = typeof process === 'object' && typeof process.versions === 'object' && process.versions.node && /*node-process*/ !process.browser;\r\n        if (isNodejs) {\r\n            var version = process.versions.node.toString().replace('v', '');\r\n            browserFakeUserAgent = 'Nodejs/' + version + ' (NodeOS) AppleWebKit/' + version + ' (KHTML, like Gecko) Nodejs/' + version + ' Nodejs/' + version\r\n        }\r\n\r\n        (function(that) {\r\n            if (typeof window !== 'undefined') {\r\n                return;\r\n            }\r\n\r\n            if (typeof window === 'undefined' && typeof global !== 'undefined') {\r\n                global.navigator = {\r\n                    userAgent: browserFakeUserAgent,\r\n                    getUserMedia: function() {}\r\n                };\r\n\r\n                /*global window:true */\r\n                that.window = global;\r\n            } else if (typeof window === 'undefined') {\r\n                // window = this;\r\n            }\r\n\r\n            if (typeof location === 'undefined') {\r\n                /*global location:true */\r\n                that.location = {\r\n                    protocol: 'file:',\r\n                    href: '',\r\n                    hash: ''\r\n                };\r\n            }\r\n\r\n            if (typeof screen === 'undefined') {\r\n                /*global screen:true */\r\n                that.screen = {\r\n                    width: 0,\r\n                    height: 0\r\n                };\r\n            }\r\n        })(typeof global !== 'undefined' ? global : window);\r\n\r\n        /*global navigator:true */\r\n        var navigator = window.navigator;\r\n\r\n        if (typeof navigator !== 'undefined') {\r\n            if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n                navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n            }\r\n\r\n            if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n                navigator.getUserMedia = navigator.mozGetUserMedia;\r\n            }\r\n        } else {\r\n            navigator = {\r\n                getUserMedia: function() {},\r\n                userAgent: browserFakeUserAgent\r\n            };\r\n        }\r\n\r\n        var isMobileDevice = !!(/Android|webOS|iPhone|iPad|iPod|BB10|BlackBerry|IEMobile|Opera Mini|Mobile|mobile/i.test(navigator.userAgent || ''));\r\n\r\n        var isEdge = navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveOrOpenBlob || !!navigator.msSaveBlob);\r\n\r\n        var isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\r\n        var isFirefox = typeof window.InstallTrigger !== 'undefined';\r\n        var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n        var isChrome = !!window.chrome && !isOpera;\r\n        var isIE = typeof document !== 'undefined' && !!document.documentMode && !isEdge;\r\n\r\n        // this one can also be used:\r\n        // https://www.websocket.org/js/stuff.js (DetectBrowser.js)\r\n\r\n        function getBrowserInfo() {\r\n            var nVer = navigator.appVersion;\r\n            var nAgt = navigator.userAgent;\r\n            var browserName = navigator.appName;\r\n            var fullVersion = '' + parseFloat(navigator.appVersion);\r\n            var majorVersion = parseInt(navigator.appVersion, 10);\r\n            var nameOffset, verOffset, ix;\r\n\r\n            // both and safri and chrome has same userAgent\r\n            if (isSafari && !isChrome && nAgt.indexOf('CriOS') !== -1) {\r\n                isSafari = false;\r\n                isChrome = true;\r\n            }\r\n\r\n            // In Opera, the true version is after 'Opera' or after 'Version'\r\n            if (isOpera) {\r\n                browserName = 'Opera';\r\n                try {\r\n                    fullVersion = navigator.userAgent.split('OPR/')[1].split(' ')[0];\r\n                    majorVersion = fullVersion.split('.')[0];\r\n                } catch (e) {\r\n                    fullVersion = '0.0.0.0';\r\n                    majorVersion = 0;\r\n                }\r\n            }\r\n            // In MSIE version <=10, the true version is after 'MSIE' in userAgent\r\n            // In IE 11, look for the string after 'rv:'\r\n            else if (isIE) {\r\n                verOffset = nAgt.indexOf('rv:');\r\n                if (verOffset > 0) { //IE 11\r\n                    fullVersion = nAgt.substring(verOffset + 3);\r\n                } else { //IE 10 or earlier\r\n                    verOffset = nAgt.indexOf('MSIE');\r\n                    fullVersion = nAgt.substring(verOffset + 5);\r\n                }\r\n                browserName = 'IE';\r\n            }\r\n            // In Chrome, the true version is after 'Chrome' \r\n            else if (isChrome) {\r\n                verOffset = nAgt.indexOf('Chrome');\r\n                browserName = 'Chrome';\r\n                fullVersion = nAgt.substring(verOffset + 7);\r\n            }\r\n            // In Safari, the true version is after 'Safari' or after 'Version' \r\n            else if (isSafari) {\r\n                verOffset = nAgt.indexOf('Safari');\r\n\r\n                browserName = 'Safari';\r\n                fullVersion = nAgt.substring(verOffset + 7);\r\n\r\n                if ((verOffset = nAgt.indexOf('Version')) !== -1) {\r\n                    fullVersion = nAgt.substring(verOffset + 8);\r\n                }\r\n\r\n                if (navigator.userAgent.indexOf('Version/') !== -1) {\r\n                    fullVersion = navigator.userAgent.split('Version/')[1].split(' ')[0];\r\n                }\r\n            }\r\n            // In Firefox, the true version is after 'Firefox' \r\n            else if (isFirefox) {\r\n                verOffset = nAgt.indexOf('Firefox');\r\n                browserName = 'Firefox';\r\n                fullVersion = nAgt.substring(verOffset + 8);\r\n            }\r\n\r\n            // In most other browsers, 'name/version' is at the end of userAgent \r\n            else if ((nameOffset = nAgt.lastIndexOf(' ') + 1) < (verOffset = nAgt.lastIndexOf('/'))) {\r\n                browserName = nAgt.substring(nameOffset, verOffset);\r\n                fullVersion = nAgt.substring(verOffset + 1);\r\n\r\n                if (browserName.toLowerCase() === browserName.toUpperCase()) {\r\n                    browserName = navigator.appName;\r\n                }\r\n            }\r\n\r\n            if (isEdge) {\r\n                browserName = 'Edge';\r\n                fullVersion = navigator.userAgent.split('Edge/')[1];\r\n                // fullVersion = parseInt(navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)[2], 10).toString();\r\n            }\r\n\r\n            // trim the fullVersion string at semicolon/space/bracket if present\r\n            if ((ix = fullVersion.search(/[; \\)]/)) !== -1) {\r\n                fullVersion = fullVersion.substring(0, ix);\r\n            }\r\n\r\n            majorVersion = parseInt('' + fullVersion, 10);\r\n\r\n            if (isNaN(majorVersion)) {\r\n                fullVersion = '' + parseFloat(navigator.appVersion);\r\n                majorVersion = parseInt(navigator.appVersion, 10);\r\n            }\r\n\r\n            return {\r\n                fullVersion: fullVersion,\r\n                version: majorVersion,\r\n                name: browserName,\r\n                isPrivateBrowsing: false\r\n            };\r\n        }\r\n\r\n        // via: https://gist.github.com/cou929/7973956\r\n\r\n        function retry(isDone, next) {\r\n            var currentTrial = 0,\r\n                maxRetry = 50,\r\n                interval = 10,\r\n                isTimeout = false;\r\n            var id = window.setInterval(\r\n                function() {\r\n                    if (isDone()) {\r\n                        window.clearInterval(id);\r\n                        next(isTimeout);\r\n                    }\r\n                    if (currentTrial++ > maxRetry) {\r\n                        window.clearInterval(id);\r\n                        isTimeout = true;\r\n                        next(isTimeout);\r\n                    }\r\n                },\r\n                10\r\n            );\r\n        }\r\n\r\n        function isIE10OrLater(userAgent) {\r\n            var ua = userAgent.toLowerCase();\r\n            if (ua.indexOf('msie') === 0 && ua.indexOf('trident') === 0) {\r\n                return false;\r\n            }\r\n            var match = /(?:msie|rv:)\\s?([\\d\\.]+)/.exec(ua);\r\n            if (match && parseInt(match[1], 10) >= 10) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        function detectPrivateMode(callback) {\r\n            var isPrivate;\r\n\r\n            try {\r\n\r\n                if (window.webkitRequestFileSystem) {\r\n                    window.webkitRequestFileSystem(\r\n                        window.TEMPORARY, 1,\r\n                        function() {\r\n                            isPrivate = false;\r\n                        },\r\n                        function(e) {\r\n                            isPrivate = true;\r\n                        }\r\n                    );\r\n                } else if (window.indexedDB && /Firefox/.test(window.navigator.userAgent)) {\r\n                    var db;\r\n                    try {\r\n                        db = window.indexedDB.open('test');\r\n                        db.onerror = function() {\r\n                            return true;\r\n                        };\r\n                    } catch (e) {\r\n                        isPrivate = true;\r\n                    }\r\n\r\n                    if (typeof isPrivate === 'undefined') {\r\n                        retry(\r\n                            function isDone() {\r\n                                return db.readyState === 'done' ? true : false;\r\n                            },\r\n                            function next(isTimeout) {\r\n                                if (!isTimeout) {\r\n                                    isPrivate = db.result ? false : true;\r\n                                }\r\n                            }\r\n                        );\r\n                    }\r\n                } else if (isIE10OrLater(window.navigator.userAgent)) {\r\n                    isPrivate = false;\r\n                    try {\r\n                        if (!window.indexedDB) {\r\n                            isPrivate = true;\r\n                        }\r\n                    } catch (e) {\r\n                        isPrivate = true;\r\n                    }\r\n                } else if (window.localStorage && /Safari/.test(window.navigator.userAgent)) {\r\n                    try {\r\n                        window.localStorage.setItem('test', 1);\r\n                    } catch (e) {\r\n                        isPrivate = true;\r\n                    }\r\n\r\n                    if (typeof isPrivate === 'undefined') {\r\n                        isPrivate = false;\r\n                        window.localStorage.removeItem('test');\r\n                    }\r\n                }\r\n\r\n            } catch (e) {\r\n                isPrivate = false;\r\n            }\r\n\r\n            retry(\r\n                function isDone() {\r\n                    return typeof isPrivate !== 'undefined' ? true : false;\r\n                },\r\n                function next(isTimeout) {\r\n                    callback(isPrivate);\r\n                }\r\n            );\r\n        }\r\n\r\n        var isMobile = {\r\n            Android: function() {\r\n                return navigator.userAgent.match(/Android/i);\r\n            },\r\n            BlackBerry: function() {\r\n                return navigator.userAgent.match(/BlackBerry|BB10/i);\r\n            },\r\n            iOS: function() {\r\n                return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n            },\r\n            Opera: function() {\r\n                return navigator.userAgent.match(/Opera Mini/i);\r\n            },\r\n            Windows: function() {\r\n                return navigator.userAgent.match(/IEMobile/i);\r\n            },\r\n            any: function() {\r\n                return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\r\n            },\r\n            getOsName: function() {\r\n                var osName = 'Unknown OS';\r\n                if (isMobile.Android()) {\r\n                    osName = 'Android';\r\n                }\r\n\r\n                if (isMobile.BlackBerry()) {\r\n                    osName = 'BlackBerry';\r\n                }\r\n\r\n                if (isMobile.iOS()) {\r\n                    osName = 'iOS';\r\n                }\r\n\r\n                if (isMobile.Opera()) {\r\n                    osName = 'Opera Mini';\r\n                }\r\n\r\n                if (isMobile.Windows()) {\r\n                    osName = 'Windows';\r\n                }\r\n\r\n                return osName;\r\n            }\r\n        };\r\n\r\n        // via: http://jsfiddle.net/ChristianL/AVyND/\r\n        function detectDesktopOS() {\r\n            var unknown = '-';\r\n\r\n            var nVer = navigator.appVersion;\r\n            var nAgt = navigator.userAgent;\r\n\r\n            var os = unknown;\r\n            var clientStrings = [{\r\n                s: 'Windows 10',\r\n                r: /(Windows 10.0|Windows NT 10.0)/\r\n            }, {\r\n                s: 'Windows 8.1',\r\n                r: /(Windows 8.1|Windows NT 6.3)/\r\n            }, {\r\n                s: 'Windows 8',\r\n                r: /(Windows 8|Windows NT 6.2)/\r\n            }, {\r\n                s: 'Windows 7',\r\n                r: /(Windows 7|Windows NT 6.1)/\r\n            }, {\r\n                s: 'Windows Vista',\r\n                r: /Windows NT 6.0/\r\n            }, {\r\n                s: 'Windows Server 2003',\r\n                r: /Windows NT 5.2/\r\n            }, {\r\n                s: 'Windows XP',\r\n                r: /(Windows NT 5.1|Windows XP)/\r\n            }, {\r\n                s: 'Windows 2000',\r\n                r: /(Windows NT 5.0|Windows 2000)/\r\n            }, {\r\n                s: 'Windows ME',\r\n                r: /(Win 9x 4.90|Windows ME)/\r\n            }, {\r\n                s: 'Windows 98',\r\n                r: /(Windows 98|Win98)/\r\n            }, {\r\n                s: 'Windows 95',\r\n                r: /(Windows 95|Win95|Windows_95)/\r\n            }, {\r\n                s: 'Windows NT 4.0',\r\n                r: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/\r\n            }, {\r\n                s: 'Windows CE',\r\n                r: /Windows CE/\r\n            }, {\r\n                s: 'Windows 3.11',\r\n                r: /Win16/\r\n            }, {\r\n                s: 'Android',\r\n                r: /Android/\r\n            }, {\r\n                s: 'Open BSD',\r\n                r: /OpenBSD/\r\n            }, {\r\n                s: 'Sun OS',\r\n                r: /SunOS/\r\n            }, {\r\n                s: 'Linux',\r\n                r: /(Linux|X11)/\r\n            }, {\r\n                s: 'iOS',\r\n                r: /(iPhone|iPad|iPod)/\r\n            }, {\r\n                s: 'Mac OS X',\r\n                r: /Mac OS X/\r\n            }, {\r\n                s: 'Mac OS',\r\n                r: /(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/\r\n            }, {\r\n                s: 'QNX',\r\n                r: /QNX/\r\n            }, {\r\n                s: 'UNIX',\r\n                r: /UNIX/\r\n            }, {\r\n                s: 'BeOS',\r\n                r: /BeOS/\r\n            }, {\r\n                s: 'OS/2',\r\n                r: /OS\\/2/\r\n            }, {\r\n                s: 'Search Bot',\r\n                r: /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\\/Teoma|ia_archiver)/\r\n            }];\r\n            for (var i = 0, cs; cs = clientStrings[i]; i++) {\r\n                if (cs.r.test(nAgt)) {\r\n                    os = cs.s;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            var osVersion = unknown;\r\n\r\n            if (/Windows/.test(os)) {\r\n                if (/Windows (.*)/.test(os)) {\r\n                    osVersion = /Windows (.*)/.exec(os)[1];\r\n                }\r\n                os = 'Windows';\r\n            }\r\n\r\n            switch (os) {\r\n                case 'Mac OS X':\r\n                    if (/Mac OS X (10[\\.\\_\\d]+)/.test(nAgt)) {\r\n                        osVersion = /Mac OS X (10[\\.\\_\\d]+)/.exec(nAgt)[1];\r\n                    }\r\n                    break;\r\n                case 'Android':\r\n                    if (/Android ([\\.\\_\\d]+)/.test(nAgt)) {\r\n                        osVersion = /Android ([\\.\\_\\d]+)/.exec(nAgt)[1];\r\n                    }\r\n                    break;\r\n                case 'iOS':\r\n                    if (/OS (\\d+)_(\\d+)_?(\\d+)?/.test(nAgt)) {\r\n                        osVersion = /OS (\\d+)_(\\d+)_?(\\d+)?/.exec(nVer);\r\n                        osVersion = osVersion[1] + '.' + osVersion[2] + '.' + (osVersion[3] | 0);\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            return {\r\n                osName: os,\r\n                osVersion: osVersion\r\n            };\r\n        }\r\n\r\n        var osName = 'Unknown OS';\r\n        var osVersion = 'Unknown OS Version';\r\n\r\n        function getAndroidVersion(ua) {\r\n            ua = (ua || navigator.userAgent).toLowerCase();\r\n            var match = ua.match(/android\\s([0-9\\.]*)/);\r\n            return match ? match[1] : false;\r\n        }\r\n\r\n        var osInfo = detectDesktopOS();\r\n\r\n        if (osInfo && osInfo.osName && osInfo.osName != '-') {\r\n            osName = osInfo.osName;\r\n            osVersion = osInfo.osVersion;\r\n        } else if (isMobile.any()) {\r\n            osName = isMobile.getOsName();\r\n\r\n            if (osName == 'Android') {\r\n                osVersion = getAndroidVersion();\r\n            }\r\n        }\r\n\r\n        var isNodejs = typeof process === 'object' && typeof process.versions === 'object' && process.versions.node;\r\n\r\n        if (osName === 'Unknown OS' && isNodejs) {\r\n            osName = 'Nodejs';\r\n            osVersion = process.versions.node.toString().replace('v', '');\r\n        }\r\n\r\n        var isCanvasSupportsStreamCapturing = false;\r\n        var isVideoSupportsStreamCapturing = false;\r\n        ['captureStream', 'mozCaptureStream', 'webkitCaptureStream'].forEach(function(item) {\r\n            if (typeof document === 'undefined' || typeof document.createElement !== 'function') {\r\n                return;\r\n            }\r\n\r\n            if (!isCanvasSupportsStreamCapturing && item in document.createElement('canvas')) {\r\n                isCanvasSupportsStreamCapturing = true;\r\n            }\r\n\r\n            if (!isVideoSupportsStreamCapturing && item in document.createElement('video')) {\r\n                isVideoSupportsStreamCapturing = true;\r\n            }\r\n        });\r\n\r\n        var regexIpv4Local = /^(192\\.168\\.|169\\.254\\.|10\\.|172\\.(1[6-9]|2\\d|3[01]))/,\r\n            regexIpv4 = /([0-9]{1,3}(\\.[0-9]{1,3}){3})/,\r\n            regexIpv6 = /[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7}/;\r\n\r\n        // via: https://github.com/diafygi/webrtc-ips\r\n        function DetectLocalIPAddress(callback, stream) {\r\n            if (!DetectRTC.isWebRTCSupported) {\r\n                return;\r\n            }\r\n\r\n            var isPublic = true,\r\n                isIpv4 = true;\r\n            getIPs(function(ip) {\r\n                if (!ip) {\r\n                    callback(); // Pass nothing to tell that ICE-gathering-ended\r\n                } else if (ip.match(regexIpv4Local)) {\r\n                    isPublic = false;\r\n                    callback('Local: ' + ip, isPublic, isIpv4);\r\n                } else if (ip.match(regexIpv6)) { //via https://ourcodeworld.com/articles/read/257/how-to-get-the-client-ip-address-with-javascript-only\r\n                    isIpv4 = false;\r\n                    callback('Public: ' + ip, isPublic, isIpv4);\r\n                } else {\r\n                    callback('Public: ' + ip, isPublic, isIpv4);\r\n                }\r\n            }, stream);\r\n        }\r\n\r\n        function getIPs(callback, stream) {\r\n            if (typeof document === 'undefined' || typeof document.getElementById !== 'function') {\r\n                return;\r\n            }\r\n\r\n            var ipDuplicates = {};\r\n\r\n            var RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\n\r\n            if (!RTCPeerConnection) {\r\n                var iframe = document.getElementById('iframe');\r\n                if (!iframe) {\r\n                    return;\r\n                }\r\n                var win = iframe.contentWindow;\r\n                RTCPeerConnection = win.RTCPeerConnection || win.mozRTCPeerConnection || win.webkitRTCPeerConnection;\r\n            }\r\n\r\n            if (!RTCPeerConnection) {\r\n                return;\r\n            }\r\n\r\n            var peerConfig = null;\r\n\r\n            if (DetectRTC.browser === 'Chrome' && DetectRTC.browser.version < 58) {\r\n                // todo: add support for older Opera\r\n                peerConfig = {\r\n                    optional: [{\r\n                        RtpDataChannels: true\r\n                    }]\r\n                };\r\n            }\r\n\r\n            var servers = {\r\n                iceServers: [{\r\n                    urls: 'stun:stun.l.google.com:19302'\r\n                }]\r\n            };\r\n\r\n            var pc = new RTCPeerConnection(servers, peerConfig);\r\n\r\n            if (stream) {\r\n                if (pc.addStream) {\r\n                    pc.addStream(stream);\r\n                } else if (pc.addTrack && stream.getTracks()[0]) {\r\n                    pc.addTrack(stream.getTracks()[0], stream);\r\n                }\r\n            }\r\n\r\n            function handleCandidate(candidate) {\r\n                if (!candidate) {\r\n                    callback(); // Pass nothing to tell that ICE-gathering-ended\r\n                    return;\r\n                }\r\n\r\n                var match = regexIpv4.exec(candidate);\r\n                if (!match) {\r\n                    return;\r\n                }\r\n                var ipAddress = match[1];\r\n                var isPublic = (candidate.match(regexIpv4Local)),\r\n                    isIpv4 = true;\r\n\r\n                if (ipDuplicates[ipAddress] === undefined) {\r\n                    callback(ipAddress, isPublic, isIpv4);\r\n                }\r\n\r\n                ipDuplicates[ipAddress] = true;\r\n            }\r\n\r\n            // listen for candidate events\r\n            pc.onicecandidate = function(event) {\r\n                if (event.candidate && event.candidate.candidate) {\r\n                    handleCandidate(event.candidate.candidate);\r\n                } else {\r\n                    handleCandidate(); // Pass nothing to tell that ICE-gathering-ended\r\n                }\r\n            };\r\n\r\n            // create data channel\r\n            if (!stream) {\r\n                try {\r\n                    pc.createDataChannel('sctp', {});\r\n                } catch (e) {}\r\n            }\r\n\r\n            // create an offer sdp\r\n            if (DetectRTC.isPromisesSupported) {\r\n                pc.createOffer().then(function(result) {\r\n                    pc.setLocalDescription(result).then(afterCreateOffer);\r\n                });\r\n            } else {\r\n                pc.createOffer(function(result) {\r\n                    pc.setLocalDescription(result, afterCreateOffer, function() {});\r\n                }, function() {});\r\n            }\r\n\r\n            function afterCreateOffer() {\r\n                var lines = pc.localDescription.sdp.split('\\n');\r\n\r\n                lines.forEach(function(line) {\r\n                    if (line && line.indexOf('a=candidate:') === 0) {\r\n                        handleCandidate(line);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        var MediaDevices = [];\r\n\r\n        var audioInputDevices = [];\r\n        var audioOutputDevices = [];\r\n        var videoInputDevices = [];\r\n\r\n        if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\r\n            // Firefox 38+ seems having support of enumerateDevices\r\n            // Thanks @xdumaine/enumerateDevices\r\n            navigator.enumerateDevices = function(callback) {\r\n                var enumerateDevices = navigator.mediaDevices.enumerateDevices();\r\n                if (enumerateDevices && enumerateDevices.then) {\r\n                    navigator.mediaDevices.enumerateDevices().then(callback).catch(function() {\r\n                        callback([]);\r\n                    });\r\n                } else {\r\n                    callback([]);\r\n                }\r\n            };\r\n        }\r\n\r\n        // Media Devices detection\r\n        var canEnumerate = false;\r\n\r\n        /*global MediaStreamTrack:true */\r\n        if (typeof MediaStreamTrack !== 'undefined' && 'getSources' in MediaStreamTrack) {\r\n            canEnumerate = true;\r\n        } else if (navigator.mediaDevices && !!navigator.mediaDevices.enumerateDevices) {\r\n            canEnumerate = true;\r\n        }\r\n\r\n        var hasMicrophone = false;\r\n        var hasSpeakers = false;\r\n        var hasWebcam = false;\r\n\r\n        var isWebsiteHasMicrophonePermissions = false;\r\n        var isWebsiteHasWebcamPermissions = false;\r\n\r\n        // http://dev.w3.org/2011/webrtc/editor/getusermedia.html#mediadevices\r\n        function checkDeviceSupport(callback) {\r\n            if (!canEnumerate) {\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (!navigator.enumerateDevices && window.MediaStreamTrack && window.MediaStreamTrack.getSources) {\r\n                navigator.enumerateDevices = window.MediaStreamTrack.getSources.bind(window.MediaStreamTrack);\r\n            }\r\n\r\n            if (!navigator.enumerateDevices && navigator.enumerateDevices) {\r\n                navigator.enumerateDevices = navigator.enumerateDevices.bind(navigator);\r\n            }\r\n\r\n            if (!navigator.enumerateDevices) {\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n                return;\r\n            }\r\n\r\n            MediaDevices = [];\r\n\r\n            audioInputDevices = [];\r\n            audioOutputDevices = [];\r\n            videoInputDevices = [];\r\n\r\n            hasMicrophone = false;\r\n            hasSpeakers = false;\r\n            hasWebcam = false;\r\n\r\n            isWebsiteHasMicrophonePermissions = false;\r\n            isWebsiteHasWebcamPermissions = false;\r\n\r\n            // to prevent duplication\r\n            var alreadyUsedDevices = {};\r\n\r\n            navigator.enumerateDevices(function(devices) {\r\n                devices.forEach(function(_device) {\r\n                    var device = {};\r\n                    for (var d in _device) {\r\n                        try {\r\n                            if (typeof _device[d] !== 'function') {\r\n                                device[d] = _device[d];\r\n                            }\r\n                        } catch (e) {}\r\n                    }\r\n\r\n                    if (alreadyUsedDevices[device.deviceId + device.label + device.kind]) {\r\n                        return;\r\n                    }\r\n\r\n                    // if it is MediaStreamTrack.getSources\r\n                    if (device.kind === 'audio') {\r\n                        device.kind = 'audioinput';\r\n                    }\r\n\r\n                    if (device.kind === 'video') {\r\n                        device.kind = 'videoinput';\r\n                    }\r\n\r\n                    if (!device.deviceId) {\r\n                        device.deviceId = device.id;\r\n                    }\r\n\r\n                    if (!device.id) {\r\n                        device.id = device.deviceId;\r\n                    }\r\n\r\n                    if (!device.label) {\r\n                        device.isCustomLabel = true;\r\n\r\n                        if (device.kind === 'videoinput') {\r\n                            device.label = 'Camera ' + (videoInputDevices.length + 1);\r\n                        } else if (device.kind === 'audioinput') {\r\n                            device.label = 'Microphone ' + (audioInputDevices.length + 1);\r\n                        } else if (device.kind === 'audiooutput') {\r\n                            device.label = 'Speaker ' + (audioOutputDevices.length + 1);\r\n                        } else {\r\n                            device.label = 'Please invoke getUserMedia once.';\r\n                        }\r\n\r\n                        if (typeof DetectRTC !== 'undefined' && DetectRTC.browser.isChrome && DetectRTC.browser.version >= 46 && !/^(https:|chrome-extension:)$/g.test(location.protocol || '')) {\r\n                            if (typeof document !== 'undefined' && typeof document.domain === 'string' && document.domain.search && document.domain.search(/localhost|127.0./g) === -1) {\r\n                                device.label = 'HTTPs is required to get label of this ' + device.kind + ' device.';\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // Firefox on Android still returns empty label\r\n                        if (device.kind === 'videoinput' && !isWebsiteHasWebcamPermissions) {\r\n                            isWebsiteHasWebcamPermissions = true;\r\n                        }\r\n\r\n                        if (device.kind === 'audioinput' && !isWebsiteHasMicrophonePermissions) {\r\n                            isWebsiteHasMicrophonePermissions = true;\r\n                        }\r\n                    }\r\n\r\n                    if (device.kind === 'audioinput') {\r\n                        hasMicrophone = true;\r\n\r\n                        if (audioInputDevices.indexOf(device) === -1) {\r\n                            audioInputDevices.push(device);\r\n                        }\r\n                    }\r\n\r\n                    if (device.kind === 'audiooutput') {\r\n                        hasSpeakers = true;\r\n\r\n                        if (audioOutputDevices.indexOf(device) === -1) {\r\n                            audioOutputDevices.push(device);\r\n                        }\r\n                    }\r\n\r\n                    if (device.kind === 'videoinput') {\r\n                        hasWebcam = true;\r\n\r\n                        if (videoInputDevices.indexOf(device) === -1) {\r\n                            videoInputDevices.push(device);\r\n                        }\r\n                    }\r\n\r\n                    // there is no 'videoouput' in the spec.\r\n                    MediaDevices.push(device);\r\n\r\n                    alreadyUsedDevices[device.deviceId + device.label + device.kind] = device;\r\n                });\r\n\r\n                if (typeof DetectRTC !== 'undefined') {\r\n                    // to sync latest outputs\r\n                    DetectRTC.MediaDevices = MediaDevices;\r\n                    DetectRTC.hasMicrophone = hasMicrophone;\r\n                    DetectRTC.hasSpeakers = hasSpeakers;\r\n                    DetectRTC.hasWebcam = hasWebcam;\r\n\r\n                    DetectRTC.isWebsiteHasWebcamPermissions = isWebsiteHasWebcamPermissions;\r\n                    DetectRTC.isWebsiteHasMicrophonePermissions = isWebsiteHasMicrophonePermissions;\r\n\r\n                    DetectRTC.audioInputDevices = audioInputDevices;\r\n                    DetectRTC.audioOutputDevices = audioOutputDevices;\r\n                    DetectRTC.videoInputDevices = videoInputDevices;\r\n                }\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            });\r\n        }\r\n\r\n        var DetectRTC = window.DetectRTC || {};\r\n\r\n        // ----------\r\n        // DetectRTC.browser.name || DetectRTC.browser.version || DetectRTC.browser.fullVersion\r\n        DetectRTC.browser = getBrowserInfo();\r\n\r\n        detectPrivateMode(function(isPrivateBrowsing) {\r\n            DetectRTC.browser.isPrivateBrowsing = !!isPrivateBrowsing;\r\n        });\r\n\r\n        // DetectRTC.isChrome || DetectRTC.isFirefox || DetectRTC.isEdge\r\n        DetectRTC.browser['is' + DetectRTC.browser.name] = true;\r\n\r\n        // -----------\r\n        DetectRTC.osName = osName;\r\n        DetectRTC.osVersion = osVersion;\r\n\r\n        var isNodeWebkit = typeof process === 'object' && typeof process.versions === 'object' && process.versions['node-webkit'];\r\n\r\n        // --------- Detect if system supports WebRTC 1.0 or WebRTC 1.1.\r\n        var isWebRTCSupported = false;\r\n        ['RTCPeerConnection', 'webkitRTCPeerConnection', 'mozRTCPeerConnection', 'RTCIceGatherer'].forEach(function(item) {\r\n            if (isWebRTCSupported) {\r\n                return;\r\n            }\r\n\r\n            if (item in window) {\r\n                isWebRTCSupported = true;\r\n            }\r\n        });\r\n        DetectRTC.isWebRTCSupported = isWebRTCSupported;\r\n\r\n        //-------\r\n        DetectRTC.isORTCSupported = typeof RTCIceGatherer !== 'undefined';\r\n\r\n        // --------- Detect if system supports screen capturing API\r\n        var isScreenCapturingSupported = false;\r\n        if (DetectRTC.browser.isChrome && DetectRTC.browser.version >= 35) {\r\n            isScreenCapturingSupported = true;\r\n        } else if (DetectRTC.browser.isFirefox && DetectRTC.browser.version >= 34) {\r\n            isScreenCapturingSupported = true;\r\n        } else if (DetectRTC.browser.isEdge && DetectRTC.browser.version >= 17) {\r\n            isScreenCapturingSupported = true; // navigator.getDisplayMedia\r\n        } else if (DetectRTC.osName === 'Android' && DetectRTC.browser.isChrome) {\r\n            isScreenCapturingSupported = true;\r\n        }\r\n\r\n        if (!/^(https:|chrome-extension:)$/g.test(location.protocol || '')) {\r\n            var isNonLocalHost = typeof document !== 'undefined' && typeof document.domain === 'string' && document.domain.search && document.domain.search(/localhost|127.0./g) === -1;\r\n            if (isNonLocalHost && (DetectRTC.browser.isChrome || DetectRTC.browser.isEdge || DetectRTC.browser.isOpera)) {\r\n                isScreenCapturingSupported = false;\r\n            } else if (DetectRTC.browser.isFirefox) {\r\n                isScreenCapturingSupported = false;\r\n            }\r\n        }\r\n        DetectRTC.isScreenCapturingSupported = isScreenCapturingSupported;\r\n\r\n        // --------- Detect if WebAudio API are supported\r\n        var webAudio = {\r\n            isSupported: false,\r\n            isCreateMediaStreamSourceSupported: false\r\n        };\r\n\r\n        ['AudioContext', 'webkitAudioContext', 'mozAudioContext', 'msAudioContext'].forEach(function(item) {\r\n            if (webAudio.isSupported) {\r\n                return;\r\n            }\r\n\r\n            if (item in window) {\r\n                webAudio.isSupported = true;\r\n\r\n                if (window[item] && 'createMediaStreamSource' in window[item].prototype) {\r\n                    webAudio.isCreateMediaStreamSourceSupported = true;\r\n                }\r\n            }\r\n        });\r\n        DetectRTC.isAudioContextSupported = webAudio.isSupported;\r\n        DetectRTC.isCreateMediaStreamSourceSupported = webAudio.isCreateMediaStreamSourceSupported;\r\n\r\n        // ---------- Detect if SCTP/RTP channels are supported.\r\n\r\n        var isRtpDataChannelsSupported = false;\r\n        if (DetectRTC.browser.isChrome && DetectRTC.browser.version > 31) {\r\n            isRtpDataChannelsSupported = true;\r\n        }\r\n        DetectRTC.isRtpDataChannelsSupported = isRtpDataChannelsSupported;\r\n\r\n        var isSCTPSupportd = false;\r\n        if (DetectRTC.browser.isFirefox && DetectRTC.browser.version > 28) {\r\n            isSCTPSupportd = true;\r\n        } else if (DetectRTC.browser.isChrome && DetectRTC.browser.version > 25) {\r\n            isSCTPSupportd = true;\r\n        } else if (DetectRTC.browser.isOpera && DetectRTC.browser.version >= 11) {\r\n            isSCTPSupportd = true;\r\n        }\r\n        DetectRTC.isSctpDataChannelsSupported = isSCTPSupportd;\r\n\r\n        // ---------\r\n\r\n        DetectRTC.isMobileDevice = isMobileDevice; // \"isMobileDevice\" boolean is defined in \"getBrowserInfo.js\"\r\n\r\n        // ------\r\n        var isGetUserMediaSupported = false;\r\n        if (navigator.getUserMedia) {\r\n            isGetUserMediaSupported = true;\r\n        } else if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n            isGetUserMediaSupported = true;\r\n        }\r\n\r\n        if (DetectRTC.browser.isChrome && DetectRTC.browser.version >= 46 && !/^(https:|chrome-extension:)$/g.test(location.protocol || '')) {\r\n            if (typeof document !== 'undefined' && typeof document.domain === 'string' && document.domain.search && document.domain.search(/localhost|127.0./g) === -1) {\r\n                isGetUserMediaSupported = 'Requires HTTPs';\r\n            }\r\n        }\r\n\r\n        if (DetectRTC.osName === 'Nodejs') {\r\n            isGetUserMediaSupported = false;\r\n        }\r\n        DetectRTC.isGetUserMediaSupported = isGetUserMediaSupported;\r\n\r\n        var displayResolution = '';\r\n        if (screen.width) {\r\n            var width = (screen.width) ? screen.width : '';\r\n            var height = (screen.height) ? screen.height : '';\r\n            displayResolution += '' + width + ' x ' + height;\r\n        }\r\n        DetectRTC.displayResolution = displayResolution;\r\n\r\n        function getAspectRatio(w, h) {\r\n            function gcd(a, b) {\r\n                return (b == 0) ? a : gcd(b, a % b);\r\n            }\r\n            var r = gcd(w, h);\r\n            return (w / r) / (h / r);\r\n        }\r\n\r\n        DetectRTC.displayAspectRatio = getAspectRatio(screen.width, screen.height).toFixed(2);\r\n\r\n        // ----------\r\n        DetectRTC.isCanvasSupportsStreamCapturing = isCanvasSupportsStreamCapturing;\r\n        DetectRTC.isVideoSupportsStreamCapturing = isVideoSupportsStreamCapturing;\r\n\r\n        if (DetectRTC.browser.name == 'Chrome' && DetectRTC.browser.version >= 53) {\r\n            if (!DetectRTC.isCanvasSupportsStreamCapturing) {\r\n                DetectRTC.isCanvasSupportsStreamCapturing = 'Requires chrome flag: enable-experimental-web-platform-features';\r\n            }\r\n\r\n            if (!DetectRTC.isVideoSupportsStreamCapturing) {\r\n                DetectRTC.isVideoSupportsStreamCapturing = 'Requires chrome flag: enable-experimental-web-platform-features';\r\n            }\r\n        }\r\n\r\n        // ------\r\n        DetectRTC.DetectLocalIPAddress = DetectLocalIPAddress;\r\n\r\n        DetectRTC.isWebSocketsSupported = 'WebSocket' in window && 2 === window.WebSocket.CLOSING;\r\n        DetectRTC.isWebSocketsBlocked = !DetectRTC.isWebSocketsSupported;\r\n\r\n        if (DetectRTC.osName === 'Nodejs') {\r\n            DetectRTC.isWebSocketsSupported = true;\r\n            DetectRTC.isWebSocketsBlocked = false;\r\n        }\r\n\r\n        DetectRTC.checkWebSocketsSupport = function(callback) {\r\n            callback = callback || function() {};\r\n            try {\r\n                var starttime;\r\n                var websocket = new WebSocket('wss://echo.websocket.org:443/');\r\n                websocket.onopen = function() {\r\n                    DetectRTC.isWebSocketsBlocked = false;\r\n                    starttime = (new Date).getTime();\r\n                    websocket.send('ping');\r\n                };\r\n                websocket.onmessage = function() {\r\n                    DetectRTC.WebsocketLatency = (new Date).getTime() - starttime + 'ms';\r\n                    callback();\r\n                    websocket.close();\r\n                    websocket = null;\r\n                };\r\n                websocket.onerror = function() {\r\n                    DetectRTC.isWebSocketsBlocked = true;\r\n                    callback();\r\n                };\r\n            } catch (e) {\r\n                DetectRTC.isWebSocketsBlocked = true;\r\n                callback();\r\n            }\r\n        };\r\n\r\n        // -------\r\n        DetectRTC.load = function(callback) {\r\n            callback = callback || function() {};\r\n            checkDeviceSupport(callback);\r\n        };\r\n\r\n        // check for microphone/camera support!\r\n        if (typeof checkDeviceSupport === 'function') {\r\n            // checkDeviceSupport();\r\n        }\r\n\r\n        if (typeof MediaDevices !== 'undefined') {\r\n            DetectRTC.MediaDevices = MediaDevices;\r\n        } else {\r\n            DetectRTC.MediaDevices = [];\r\n        }\r\n\r\n        DetectRTC.hasMicrophone = hasMicrophone;\r\n        DetectRTC.hasSpeakers = hasSpeakers;\r\n        DetectRTC.hasWebcam = hasWebcam;\r\n\r\n        DetectRTC.isWebsiteHasWebcamPermissions = isWebsiteHasWebcamPermissions;\r\n        DetectRTC.isWebsiteHasMicrophonePermissions = isWebsiteHasMicrophonePermissions;\r\n\r\n        DetectRTC.audioInputDevices = audioInputDevices;\r\n        DetectRTC.audioOutputDevices = audioOutputDevices;\r\n        DetectRTC.videoInputDevices = videoInputDevices;\r\n\r\n        // ------\r\n        var isSetSinkIdSupported = false;\r\n        if (typeof document !== 'undefined' && typeof document.createElement === 'function' && 'setSinkId' in document.createElement('video')) {\r\n            isSetSinkIdSupported = true;\r\n        }\r\n        DetectRTC.isSetSinkIdSupported = isSetSinkIdSupported;\r\n\r\n        // -----\r\n        var isRTPSenderReplaceTracksSupported = false;\r\n        if (DetectRTC.browser.isFirefox && typeof mozRTCPeerConnection !== 'undefined' /*&& DetectRTC.browser.version > 39*/ ) {\r\n            /*global mozRTCPeerConnection:true */\r\n            if ('getSenders' in mozRTCPeerConnection.prototype) {\r\n                isRTPSenderReplaceTracksSupported = true;\r\n            }\r\n        } else if (DetectRTC.browser.isChrome && typeof webkitRTCPeerConnection !== 'undefined') {\r\n            /*global webkitRTCPeerConnection:true */\r\n            if ('getSenders' in webkitRTCPeerConnection.prototype) {\r\n                isRTPSenderReplaceTracksSupported = true;\r\n            }\r\n        }\r\n        DetectRTC.isRTPSenderReplaceTracksSupported = isRTPSenderReplaceTracksSupported;\r\n\r\n        //------\r\n        var isRemoteStreamProcessingSupported = false;\r\n        if (DetectRTC.browser.isFirefox && DetectRTC.browser.version > 38) {\r\n            isRemoteStreamProcessingSupported = true;\r\n        }\r\n        DetectRTC.isRemoteStreamProcessingSupported = isRemoteStreamProcessingSupported;\r\n\r\n        //-------\r\n        var isApplyConstraintsSupported = false;\r\n\r\n        /*global MediaStreamTrack:true */\r\n        if (typeof MediaStreamTrack !== 'undefined' && 'applyConstraints' in MediaStreamTrack.prototype) {\r\n            isApplyConstraintsSupported = true;\r\n        }\r\n        DetectRTC.isApplyConstraintsSupported = isApplyConstraintsSupported;\r\n\r\n        //-------\r\n        var isMultiMonitorScreenCapturingSupported = false;\r\n        if (DetectRTC.browser.isFirefox && DetectRTC.browser.version >= 43) {\r\n            // version 43 merely supports platforms for multi-monitors\r\n            // version 44 will support exact multi-monitor selection i.e. you can select any monitor for screen capturing.\r\n            isMultiMonitorScreenCapturingSupported = true;\r\n        }\r\n        DetectRTC.isMultiMonitorScreenCapturingSupported = isMultiMonitorScreenCapturingSupported;\r\n\r\n        DetectRTC.isPromisesSupported = !!('Promise' in window);\r\n\r\n        // version is generated by \"grunt\"\r\n        DetectRTC.version = '1.3.9';\r\n\r\n        if (typeof DetectRTC === 'undefined') {\r\n            window.DetectRTC = {};\r\n        }\r\n\r\n        var MediaStream = window.MediaStream;\r\n\r\n        if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n            MediaStream = webkitMediaStream;\r\n        }\r\n\r\n        if (typeof MediaStream !== 'undefined' && typeof MediaStream === 'function') {\r\n            DetectRTC.MediaStream = Object.keys(MediaStream.prototype);\r\n        } else DetectRTC.MediaStream = false;\r\n\r\n        if (typeof MediaStreamTrack !== 'undefined') {\r\n            DetectRTC.MediaStreamTrack = Object.keys(MediaStreamTrack.prototype);\r\n        } else DetectRTC.MediaStreamTrack = false;\r\n\r\n        var RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\n\r\n        if (typeof RTCPeerConnection !== 'undefined') {\r\n            DetectRTC.RTCPeerConnection = Object.keys(RTCPeerConnection.prototype);\r\n        } else DetectRTC.RTCPeerConnection = false;\r\n\r\n        window.DetectRTC = DetectRTC;\r\n\r\n        if (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n            module.exports = DetectRTC;\r\n        }\r\n\r\n        if (typeof define === 'function' && define.amd) {\r\n            define('DetectRTC', [], function() {\r\n                return DetectRTC;\r\n            });\r\n        }\r\n    })();\r\n\r\n    // globals.js\r\n\r\n    if (typeof cordova !== 'undefined') {\r\n        DetectRTC.isMobileDevice = true;\r\n        DetectRTC.browser.name = 'Chrome';\r\n    }\r\n\r\n    if (navigator && navigator.userAgent && navigator.userAgent.indexOf('Crosswalk') !== -1) {\r\n        DetectRTC.isMobileDevice = true;\r\n        DetectRTC.browser.name = 'Chrome';\r\n    }\r\n\r\n    function fireEvent(obj, eventName, args) {\r\n        if (typeof CustomEvent === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        var eventDetail = {\r\n            arguments: args,\r\n            __exposedProps__: args\r\n        };\r\n\r\n        var event = new CustomEvent(eventName, eventDetail);\r\n        obj.dispatchEvent(event);\r\n    }\r\n\r\n    function setHarkEvents(connection, streamEvent) {\r\n        if (!streamEvent.stream || !getTracks(streamEvent.stream, 'audio').length) return;\r\n\r\n        if (!connection || !streamEvent) {\r\n            throw 'Both arguments are required.';\r\n        }\r\n\r\n        if (!connection.onspeaking || !connection.onsilence) {\r\n            return;\r\n        }\r\n\r\n        if (typeof hark === 'undefined') {\r\n            throw 'hark.js not found.';\r\n        }\r\n\r\n        hark(streamEvent.stream, {\r\n            onspeaking: function() {\r\n                connection.onspeaking(streamEvent);\r\n            },\r\n            onsilence: function() {\r\n                connection.onsilence(streamEvent);\r\n            },\r\n            onvolumechange: function(volume, threshold) {\r\n                if (!connection.onvolumechange) {\r\n                    return;\r\n                }\r\n                connection.onvolumechange(merge({\r\n                    volume: volume,\r\n                    threshold: threshold\r\n                }, streamEvent));\r\n            }\r\n        });\r\n    }\r\n\r\n    function setMuteHandlers(connection, streamEvent) {\r\n        if (!streamEvent.stream || !streamEvent.stream || !streamEvent.stream.addEventListener) return;\r\n\r\n        streamEvent.stream.addEventListener('mute', function(event) {\r\n            event = connection.streamEvents[streamEvent.streamid];\r\n\r\n            event.session = {\r\n                audio: event.muteType === 'audio',\r\n                video: event.muteType === 'video'\r\n            };\r\n\r\n            connection.onmute(event);\r\n        }, false);\r\n\r\n        streamEvent.stream.addEventListener('unmute', function(event) {\r\n            event = connection.streamEvents[streamEvent.streamid];\r\n\r\n            event.session = {\r\n                audio: event.unmuteType === 'audio',\r\n                video: event.unmuteType === 'video'\r\n            };\r\n\r\n            connection.onunmute(event);\r\n        }, false);\r\n    }\r\n\r\n    function getRandomString() {\r\n        if (window.crypto && window.crypto.getRandomValues && navigator.userAgent.indexOf('Safari') === -1) {\r\n            var a = window.crypto.getRandomValues(new Uint32Array(3)),\r\n                token = '';\r\n            for (var i = 0, l = a.length; i < l; i++) {\r\n                token += a[i].toString(36);\r\n            }\r\n            return token;\r\n        } else {\r\n            return (Math.random() * new Date().getTime()).toString(36).replace(/\\./g, '');\r\n        }\r\n    }\r\n\r\n    // Get HTMLAudioElement/HTMLVideoElement accordingly\r\n    // todo: add API documentation for connection.autoCreateMediaElement\r\n\r\n    function getRMCMediaElement(stream, callback, connection) {\r\n        if (!connection.autoCreateMediaElement) {\r\n            callback({});\r\n            return;\r\n        }\r\n\r\n        var isAudioOnly = false;\r\n        if (!getTracks(stream, 'video').length && !stream.isVideo && !stream.isScreen) {\r\n            isAudioOnly = true;\r\n        }\r\n\r\n        if (DetectRTC.browser.name === 'Firefox') {\r\n            if (connection.session.video || connection.session.screen) {\r\n                isAudioOnly = false;\r\n            }\r\n        }\r\n\r\n        var mediaElement = document.createElement(isAudioOnly ? 'audio' : 'video');\r\n\r\n        mediaElement.srcObject = stream;\r\n\r\n        mediaElement.setAttribute('autoplay', true);\r\n        mediaElement.setAttribute('playsinline', true);\r\n        mediaElement.setAttribute('controls', true);\r\n        mediaElement.setAttribute('muted', false);\r\n        mediaElement.setAttribute('volume', 1);\r\n\r\n        // http://goo.gl/WZ5nFl\r\n        // Firefox don't yet support onended for any stream (remote/local)\r\n        if (DetectRTC.browser.name === 'Firefox') {\r\n            var streamEndedEvent = 'ended';\r\n\r\n            if ('oninactive' in mediaElement) {\r\n                streamEndedEvent = 'inactive';\r\n            }\r\n\r\n            mediaElement.addEventListener(streamEndedEvent, function() {\r\n                // fireEvent(stream, streamEndedEvent, stream);\r\n                currentUserMediaRequest.remove(stream.idInstance);\r\n\r\n                if (stream.type === 'local') {\r\n                    streamEndedEvent = 'ended';\r\n\r\n                    if ('oninactive' in stream) {\r\n                        streamEndedEvent = 'inactive';\r\n                    }\r\n\r\n                    StreamsHandler.onSyncNeeded(stream.streamid, streamEndedEvent);\r\n\r\n                    connection.attachStreams.forEach(function(aStream, idx) {\r\n                        if (stream.streamid === aStream.streamid) {\r\n                            delete connection.attachStreams[idx];\r\n                        }\r\n                    });\r\n\r\n                    var newStreamsArray = [];\r\n                    connection.attachStreams.forEach(function(aStream) {\r\n                        if (aStream) {\r\n                            newStreamsArray.push(aStream);\r\n                        }\r\n                    });\r\n                    connection.attachStreams = newStreamsArray;\r\n\r\n                    var streamEvent = connection.streamEvents[stream.streamid];\r\n\r\n                    if (streamEvent) {\r\n                        connection.onstreamended(streamEvent);\r\n                        return;\r\n                    }\r\n                    if (this.parentNode) {\r\n                        this.parentNode.removeChild(this);\r\n                    }\r\n                }\r\n            }, false);\r\n        }\r\n\r\n        var played = mediaElement.play();\r\n        if (typeof played !== 'undefined') {\r\n            var cbFired = false;\r\n            setTimeout(function() {\r\n                if (!cbFired) {\r\n                    cbFired = true;\r\n                    callback(mediaElement);\r\n                }\r\n            }, 1000);\r\n            played.then(function() {\r\n                if (cbFired) return;\r\n                cbFired = true;\r\n                callback(mediaElement);\r\n            }).catch(function(error) {\r\n                if (cbFired) return;\r\n                cbFired = true;\r\n                callback(mediaElement);\r\n            });\r\n        } else {\r\n            callback(mediaElement);\r\n        }\r\n    }\r\n\r\n    // if IE\r\n    if (!window.addEventListener) {\r\n        window.addEventListener = function(el, eventName, eventHandler) {\r\n            if (!el.attachEvent) {\r\n                return;\r\n            }\r\n            el.attachEvent('on' + eventName, eventHandler);\r\n        };\r\n    }\r\n\r\n    function listenEventHandler(eventName, eventHandler) {\r\n        window.removeEventListener(eventName, eventHandler);\r\n        window.addEventListener(eventName, eventHandler, false);\r\n    }\r\n\r\n    window.attachEventListener = function(video, type, listener, useCapture) {\r\n        video.addEventListener(type, listener, useCapture);\r\n    };\r\n\r\n    function removeNullEntries(array) {\r\n        var newArray = [];\r\n        array.forEach(function(item) {\r\n            if (item) {\r\n                newArray.push(item);\r\n            }\r\n        });\r\n        return newArray;\r\n    }\r\n\r\n\r\n    function isData(session) {\r\n        return !session.audio && !session.video && !session.screen && session.data;\r\n    }\r\n\r\n    function isNull(obj) {\r\n        return typeof obj === 'undefined';\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    var MediaStream = window.MediaStream;\r\n\r\n    if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n        MediaStream = webkitMediaStream;\r\n    }\r\n\r\n    /*global MediaStream:true */\r\n    if (typeof MediaStream !== 'undefined') {\r\n        if (!('stop' in MediaStream.prototype)) {\r\n            MediaStream.prototype.stop = function() {\r\n                this.getTracks().forEach(function(track) {\r\n                    track.stop();\r\n                });\r\n            };\r\n        }\r\n    }\r\n\r\n    function isAudioPlusTab(connection, audioPlusTab) {\r\n        if (connection.session.audio && connection.session.audio === 'two-way') {\r\n            return false;\r\n        }\r\n\r\n        if (DetectRTC.browser.name === 'Firefox' && audioPlusTab !== false) {\r\n            return true;\r\n        }\r\n\r\n        if (DetectRTC.browser.name !== 'Chrome' || DetectRTC.browser.version < 50) return false;\r\n\r\n        if (typeof audioPlusTab === true) {\r\n            return true;\r\n        }\r\n\r\n        if (typeof audioPlusTab === 'undefined' && connection.session.audio && connection.session.screen && !connection.session.video) {\r\n            audioPlusTab = true;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function getAudioScreenConstraints(screen_constraints) {\r\n        if (DetectRTC.browser.name === 'Firefox') {\r\n            return true;\r\n        }\r\n\r\n        if (DetectRTC.browser.name !== 'Chrome') return false;\r\n\r\n        return {\r\n            mandatory: {\r\n                chromeMediaSource: screen_constraints.mandatory.chromeMediaSource,\r\n                chromeMediaSourceId: screen_constraints.mandatory.chromeMediaSourceId\r\n            }\r\n        };\r\n    }\r\n\r\n    window.iOSDefaultAudioOutputDevice = window.iOSDefaultAudioOutputDevice || 'speaker'; // earpiece or speaker\r\n\r\n    function getTracks(stream, kind) {\r\n        if (!stream || !stream.getTracks) {\r\n            return [];\r\n        }\r\n\r\n        return stream.getTracks().filter(function(t) {\r\n            return t.kind === (kind || 'audio');\r\n        });\r\n    }\r\n\r\n    function isUnifiedPlanSupportedDefault() {\r\n        var canAddTransceiver = false;\r\n\r\n        try {\r\n            if (typeof RTCRtpTransceiver === 'undefined') return false;\r\n            if (!('currentDirection' in RTCRtpTransceiver.prototype)) return false;\r\n\r\n            var tempPc = new RTCPeerConnection();\r\n\r\n            try {\r\n                tempPc.addTransceiver('audio');\r\n                canAddTransceiver = true;\r\n            } catch (e) {}\r\n\r\n            tempPc.close();\r\n        } catch (e) {\r\n            canAddTransceiver = false;\r\n        }\r\n\r\n        return canAddTransceiver && isUnifiedPlanSuppored();\r\n    }\r\n\r\n    function isUnifiedPlanSuppored() {\r\n        var isUnifiedPlanSupported = false;\r\n\r\n        try {\r\n            var pc = new RTCPeerConnection({\r\n                sdpSemantics: 'unified-plan'\r\n            });\r\n\r\n            try {\r\n                var config = pc.getConfiguration();\r\n                if (config.sdpSemantics == 'unified-plan')\r\n                    isUnifiedPlanSupported = true;\r\n                else if (config.sdpSemantics == 'plan-b')\r\n                    isUnifiedPlanSupported = false;\r\n                else\r\n                    isUnifiedPlanSupported = false;\r\n            } catch (e) {\r\n                isUnifiedPlanSupported = false;\r\n            }\r\n        } catch (e) {\r\n            isUnifiedPlanSupported = false;\r\n        }\r\n\r\n        return isUnifiedPlanSupported;\r\n    }\r\n\r\n    // ios-hacks.js\r\n\r\n    function setCordovaAPIs() {\r\n        // if (DetectRTC.osName !== 'iOS') return;\r\n        if (typeof cordova === 'undefined' || typeof cordova.plugins === 'undefined' || typeof cordova.plugins.iosrtc === 'undefined') return;\r\n\r\n        var iosrtc = cordova.plugins.iosrtc;\r\n        window.webkitRTCPeerConnection = iosrtc.RTCPeerConnection;\r\n        window.RTCSessionDescription = iosrtc.RTCSessionDescription;\r\n        window.RTCIceCandidate = iosrtc.RTCIceCandidate;\r\n        window.MediaStream = iosrtc.MediaStream;\r\n        window.MediaStreamTrack = iosrtc.MediaStreamTrack;\r\n        navigator.getUserMedia = navigator.webkitGetUserMedia = iosrtc.getUserMedia;\r\n\r\n        iosrtc.debug.enable('iosrtc*');\r\n        if (typeof iosrtc.selectAudioOutput == 'function') {\r\n            iosrtc.selectAudioOutput(window.iOSDefaultAudioOutputDevice || 'speaker'); // earpiece or speaker\r\n        }\r\n        iosrtc.registerGlobals();\r\n    }\r\n\r\n    document.addEventListener('deviceready', setCordovaAPIs, false);\r\n    setCordovaAPIs();\r\n\r\n    // RTCPeerConnection.js\r\n\r\n    var defaults = {};\r\n\r\n    function setSdpConstraints(config) {\r\n        var sdpConstraints = {\r\n            OfferToReceiveAudio: !!config.OfferToReceiveAudio,\r\n            OfferToReceiveVideo: !!config.OfferToReceiveVideo\r\n        };\r\n\r\n        return sdpConstraints;\r\n    }\r\n\r\n    var RTCPeerConnection;\r\n    if (typeof window.RTCPeerConnection !== 'undefined') {\r\n        RTCPeerConnection = window.RTCPeerConnection;\r\n    } else if (typeof mozRTCPeerConnection !== 'undefined') {\r\n        RTCPeerConnection = mozRTCPeerConnection;\r\n    } else if (typeof webkitRTCPeerConnection !== 'undefined') {\r\n        RTCPeerConnection = webkitRTCPeerConnection;\r\n    }\r\n\r\n    var RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription;\r\n    var RTCIceCandidate = window.RTCIceCandidate || window.mozRTCIceCandidate;\r\n    var MediaStreamTrack = window.MediaStreamTrack;\r\n\r\n    function PeerInitiator(config) {\r\n        if (typeof window.RTCPeerConnection !== 'undefined') {\r\n            RTCPeerConnection = window.RTCPeerConnection;\r\n        } else if (typeof mozRTCPeerConnection !== 'undefined') {\r\n            RTCPeerConnection = mozRTCPeerConnection;\r\n        } else if (typeof webkitRTCPeerConnection !== 'undefined') {\r\n            RTCPeerConnection = webkitRTCPeerConnection;\r\n        }\r\n\r\n        RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription;\r\n        RTCIceCandidate = window.RTCIceCandidate || window.mozRTCIceCandidate;\r\n        MediaStreamTrack = window.MediaStreamTrack;\r\n\r\n        if (!RTCPeerConnection) {\r\n            throw 'WebRTC 1.0 (RTCPeerConnection) API are NOT available in this browser.';\r\n        }\r\n\r\n        var connection = config.rtcMultiConnection;\r\n\r\n        this.extra = config.remoteSdp ? config.remoteSdp.extra : connection.extra;\r\n        this.userid = config.userid;\r\n        this.streams = [];\r\n        this.channels = config.channels || [];\r\n        this.connectionDescription = config.connectionDescription;\r\n\r\n        this.addStream = function(session) {\r\n            connection.addStream(session, self.userid);\r\n        };\r\n\r\n        this.removeStream = function(streamid) {\r\n            connection.removeStream(streamid, self.userid);\r\n        };\r\n\r\n        var self = this;\r\n\r\n        if (config.remoteSdp) {\r\n            this.connectionDescription = config.remoteSdp.connectionDescription;\r\n        }\r\n\r\n        var allRemoteStreams = {};\r\n\r\n        defaults.sdpConstraints = setSdpConstraints({\r\n            OfferToReceiveAudio: true,\r\n            OfferToReceiveVideo: true\r\n        });\r\n\r\n        var peer;\r\n\r\n        var renegotiatingPeer = !!config.renegotiatingPeer;\r\n        if (config.remoteSdp) {\r\n            renegotiatingPeer = !!config.remoteSdp.renegotiatingPeer;\r\n        }\r\n\r\n        var localStreams = [];\r\n        connection.attachStreams.forEach(function(stream) {\r\n            if (!!stream) {\r\n                localStreams.push(stream);\r\n            }\r\n        });\r\n\r\n        if (!renegotiatingPeer) {\r\n            var iceTransports = 'all';\r\n            if (connection.candidates.turn || connection.candidates.relay) {\r\n                if (!connection.candidates.stun && !connection.candidates.reflexive && !connection.candidates.host) {\r\n                    iceTransports = 'relay';\r\n                }\r\n            }\r\n\r\n            try {\r\n                // ref: developer.mozilla.org/en-US/docs/Web/API/RTCConfiguration\r\n                var params = {\r\n                    iceServers: connection.iceServers,\r\n                    iceTransportPolicy: connection.iceTransportPolicy || iceTransports\r\n                };\r\n\r\n                if (typeof connection.iceCandidatePoolSize !== 'undefined') {\r\n                    params.iceCandidatePoolSize = connection.iceCandidatePoolSize;\r\n                }\r\n\r\n                if (typeof connection.bundlePolicy !== 'undefined') {\r\n                    params.bundlePolicy = connection.bundlePolicy;\r\n                }\r\n\r\n                if (typeof connection.rtcpMuxPolicy !== 'undefined') {\r\n                    params.rtcpMuxPolicy = connection.rtcpMuxPolicy;\r\n                }\r\n\r\n                if (!!connection.sdpSemantics) {\r\n                    params.sdpSemantics = connection.sdpSemantics || 'unified-plan';\r\n                }\r\n\r\n                if (!connection.iceServers || !connection.iceServers.length) {\r\n                    params = null;\r\n                    connection.optionalArgument = null;\r\n                }\r\n\r\n                peer = new RTCPeerConnection(params, connection.optionalArgument);\r\n            } catch (e) {\r\n                try {\r\n                    var params = {\r\n                        iceServers: connection.iceServers\r\n                    };\r\n\r\n                    peer = new RTCPeerConnection(params);\r\n                } catch (e) {\r\n                    peer = new RTCPeerConnection();\r\n                }\r\n            }\r\n        } else {\r\n            peer = config.peerRef;\r\n        }\r\n\r\n        if (!peer.getRemoteStreams && peer.getReceivers) {\r\n            peer.getRemoteStreams = function() {\r\n                var stream = new MediaStream();\r\n                peer.getReceivers().forEach(function(receiver) {\r\n                    stream.addTrack(receiver.track);\r\n                });\r\n                return [stream];\r\n            };\r\n        }\r\n\r\n        if (!peer.getLocalStreams && peer.getSenders) {\r\n            peer.getLocalStreams = function() {\r\n                var stream = new MediaStream();\r\n                peer.getSenders().forEach(function(sender) {\r\n                    stream.addTrack(sender.track);\r\n                });\r\n                return [stream];\r\n            };\r\n        }\r\n\r\n        peer.onicecandidate = function(event) {\r\n            if (!event.candidate) {\r\n                if (!connection.trickleIce) {\r\n                    var localSdp = peer.localDescription;\r\n                    config.onLocalSdp({\r\n                        type: localSdp.type,\r\n                        sdp: localSdp.sdp,\r\n                        remotePeerSdpConstraints: config.remotePeerSdpConstraints || false,\r\n                        renegotiatingPeer: !!config.renegotiatingPeer || false,\r\n                        connectionDescription: self.connectionDescription,\r\n                        dontGetRemoteStream: !!config.dontGetRemoteStream,\r\n                        extra: connection ? connection.extra : {},\r\n                        streamsToShare: streamsToShare\r\n                    });\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (!connection.trickleIce) return;\r\n            config.onLocalCandidate({\r\n                candidate: event.candidate.candidate,\r\n                sdpMid: event.candidate.sdpMid,\r\n                sdpMLineIndex: event.candidate.sdpMLineIndex\r\n            });\r\n        };\r\n\r\n        localStreams.forEach(function(localStream) {\r\n            if (config.remoteSdp && config.remoteSdp.remotePeerSdpConstraints && config.remoteSdp.remotePeerSdpConstraints.dontGetRemoteStream) {\r\n                return;\r\n            }\r\n\r\n            if (config.dontAttachLocalStream) {\r\n                return;\r\n            }\r\n\r\n            localStream = connection.beforeAddingStream(localStream, self);\r\n\r\n            if (!localStream) return;\r\n\r\n            peer.getLocalStreams().forEach(function(stream) {\r\n                if (localStream && stream.id == localStream.id) {\r\n                    localStream = null;\r\n                }\r\n            });\r\n\r\n            if (localStream && localStream.getTracks) {\r\n                localStream.getTracks().forEach(function(track) {\r\n                    try {\r\n                        // last parameter is redundant for unified-plan\r\n                        // starting from chrome version 72\r\n                        peer.addTrack(track, localStream);\r\n                    } catch (e) {}\r\n                });\r\n            }\r\n        });\r\n\r\n        peer.oniceconnectionstatechange = peer.onsignalingstatechange = function() {\r\n            var extra = self.extra;\r\n            if (connection.peers[self.userid]) {\r\n                extra = connection.peers[self.userid].extra || extra;\r\n            }\r\n\r\n            if (!peer) {\r\n                return;\r\n            }\r\n\r\n            config.onPeerStateChanged({\r\n                iceConnectionState: peer.iceConnectionState,\r\n                iceGatheringState: peer.iceGatheringState,\r\n                signalingState: peer.signalingState,\r\n                extra: extra,\r\n                userid: self.userid\r\n            });\r\n\r\n            if (peer && peer.iceConnectionState && peer.iceConnectionState.search(/closed|failed/gi) !== -1 && self.streams instanceof Array) {\r\n                self.streams.forEach(function(stream) {\r\n                    var streamEvent = connection.streamEvents[stream.id] || {\r\n                        streamid: stream.id,\r\n                        stream: stream,\r\n                        type: 'remote'\r\n                    };\r\n\r\n                    connection.onstreamended(streamEvent);\r\n                });\r\n            }\r\n        };\r\n\r\n        var sdpConstraints = {\r\n            OfferToReceiveAudio: !!localStreams.length,\r\n            OfferToReceiveVideo: !!localStreams.length\r\n        };\r\n\r\n        if (config.localPeerSdpConstraints) sdpConstraints = config.localPeerSdpConstraints;\r\n\r\n        defaults.sdpConstraints = setSdpConstraints(sdpConstraints);\r\n\r\n        var streamObject;\r\n        var dontDuplicate = {};\r\n\r\n        peer.ontrack = function(event) {\r\n            if (!event || event.type !== 'track') return;\r\n\r\n            event.stream = event.streams[event.streams.length - 1];\r\n\r\n            if (!event.stream.id) {\r\n                event.stream.id = event.track.id;\r\n            }\r\n\r\n            if (dontDuplicate[event.stream.id] && DetectRTC.browser.name !== 'Safari') {\r\n                if (event.track) {\r\n                    event.track.onended = function() { // event.track.onmute = \r\n                        peer && peer.onremovestream(event);\r\n                    };\r\n                }\r\n                return;\r\n            }\r\n\r\n            dontDuplicate[event.stream.id] = event.stream.id;\r\n\r\n            var streamsToShare = {};\r\n            if (config.remoteSdp && config.remoteSdp.streamsToShare) {\r\n                streamsToShare = config.remoteSdp.streamsToShare;\r\n            } else if (config.streamsToShare) {\r\n                streamsToShare = config.streamsToShare;\r\n            }\r\n\r\n            var streamToShare = streamsToShare[event.stream.id];\r\n            if (streamToShare) {\r\n                event.stream.isAudio = streamToShare.isAudio;\r\n                event.stream.isVideo = streamToShare.isVideo;\r\n                event.stream.isScreen = streamToShare.isScreen;\r\n            } else {\r\n                event.stream.isVideo = !!getTracks(event.stream, 'video').length;\r\n                event.stream.isAudio = !event.stream.isVideo;\r\n                event.stream.isScreen = false;\r\n            }\r\n\r\n            event.stream.streamid = event.stream.id;\r\n\r\n            allRemoteStreams[event.stream.id] = event.stream;\r\n            config.onRemoteStream(event.stream);\r\n\r\n            event.stream.getTracks().forEach(function(track) {\r\n                track.onended = function() { // track.onmute = \r\n                    peer && peer.onremovestream(event);\r\n                };\r\n            });\r\n\r\n            event.stream.onremovetrack = function() {\r\n                peer && peer.onremovestream(event);\r\n            };\r\n        };\r\n\r\n        peer.onremovestream = function(event) {\r\n            // this event doesn't works anymore\r\n            event.stream.streamid = event.stream.id;\r\n\r\n            if (allRemoteStreams[event.stream.id]) {\r\n                delete allRemoteStreams[event.stream.id];\r\n            }\r\n\r\n            config.onRemoteStreamRemoved(event.stream);\r\n        };\r\n\r\n        if (typeof peer.removeStream !== 'function') {\r\n            // removeStream backward compatibility\r\n            peer.removeStream = function(stream) {\r\n                stream.getTracks().forEach(function(track) {\r\n                    peer.removeTrack(track, stream);\r\n                });\r\n            };\r\n        }\r\n\r\n        this.addRemoteCandidate = function(remoteCandidate) {\r\n            peer.addIceCandidate(new RTCIceCandidate(remoteCandidate));\r\n        };\r\n\r\n        function oldAddRemoteSdp(remoteSdp, cb) {\r\n            cb = cb || function() {};\r\n\r\n            if (DetectRTC.browser.name !== 'Safari') {\r\n                remoteSdp.sdp = connection.processSdp(remoteSdp.sdp);\r\n            }\r\n            peer.setRemoteDescription(new RTCSessionDescription(remoteSdp), cb, function(error) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('setRemoteDescription failed', '\\n', error, '\\n', remoteSdp.sdp);\r\n                }\r\n\r\n                cb();\r\n            });\r\n        }\r\n\r\n        this.addRemoteSdp = function(remoteSdp, cb) {\r\n            cb = cb || function() {};\r\n\r\n            if (DetectRTC.browser.name !== 'Safari') {\r\n                remoteSdp.sdp = connection.processSdp(remoteSdp.sdp);\r\n            }\r\n\r\n            peer.setRemoteDescription(new RTCSessionDescription(remoteSdp)).then(cb, function(error) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('setRemoteDescription failed', '\\n', error, '\\n', remoteSdp.sdp);\r\n                }\r\n\r\n                cb();\r\n            }).catch(function(error) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('setRemoteDescription failed', '\\n', error, '\\n', remoteSdp.sdp);\r\n                }\r\n\r\n                cb();\r\n            });\r\n        };\r\n\r\n        var isOfferer = true;\r\n\r\n        if (config.remoteSdp) {\r\n            isOfferer = false;\r\n        }\r\n\r\n        this.createDataChannel = function() {\r\n            var channel = peer.createDataChannel('sctp', {});\r\n            setChannelEvents(channel);\r\n        };\r\n\r\n        if (connection.session.data === true && !renegotiatingPeer) {\r\n            if (!isOfferer) {\r\n                peer.ondatachannel = function(event) {\r\n                    var channel = event.channel;\r\n                    setChannelEvents(channel);\r\n                };\r\n            } else {\r\n                this.createDataChannel();\r\n            }\r\n        }\r\n\r\n        this.enableDisableVideoEncoding = function(enable) {\r\n            var rtcp;\r\n            peer.getSenders().forEach(function(sender) {\r\n                if (!rtcp && sender.track.kind === 'video') {\r\n                    rtcp = sender;\r\n                }\r\n            });\r\n\r\n            if (!rtcp || !rtcp.getParameters) return;\r\n\r\n            var parameters = rtcp.getParameters();\r\n            parameters.encodings[1] && (parameters.encodings[1].active = !!enable);\r\n            parameters.encodings[2] && (parameters.encodings[2].active = !!enable);\r\n            rtcp.setParameters(parameters);\r\n        };\r\n\r\n        if (config.remoteSdp) {\r\n            if (config.remoteSdp.remotePeerSdpConstraints) {\r\n                sdpConstraints = config.remoteSdp.remotePeerSdpConstraints;\r\n            }\r\n            defaults.sdpConstraints = setSdpConstraints(sdpConstraints);\r\n            this.addRemoteSdp(config.remoteSdp, function() {\r\n                createOfferOrAnswer('createAnswer');\r\n            });\r\n        }\r\n\r\n        function setChannelEvents(channel) {\r\n            // force ArrayBuffer in Firefox; which uses \"Blob\" by default.\r\n            channel.binaryType = 'arraybuffer';\r\n\r\n            channel.onmessage = function(event) {\r\n                config.onDataChannelMessage(event.data);\r\n            };\r\n\r\n            channel.onopen = function() {\r\n                config.onDataChannelOpened(channel);\r\n            };\r\n\r\n            channel.onerror = function(error) {\r\n                config.onDataChannelError(error);\r\n            };\r\n\r\n            channel.onclose = function(event) {\r\n                config.onDataChannelClosed(event);\r\n            };\r\n\r\n            channel.internalSend = channel.send;\r\n            channel.send = function(data) {\r\n                if (channel.readyState !== 'open') {\r\n                    return;\r\n                }\r\n\r\n                channel.internalSend(data);\r\n            };\r\n\r\n            peer.channel = channel;\r\n        }\r\n\r\n        if (connection.session.audio == 'two-way' || connection.session.video == 'two-way' || connection.session.screen == 'two-way') {\r\n            defaults.sdpConstraints = setSdpConstraints({\r\n                OfferToReceiveAudio: connection.session.audio == 'two-way' || (config.remoteSdp && config.remoteSdp.remotePeerSdpConstraints && config.remoteSdp.remotePeerSdpConstraints.OfferToReceiveAudio),\r\n                OfferToReceiveVideo: connection.session.video == 'two-way' || connection.session.screen == 'two-way' || (config.remoteSdp && config.remoteSdp.remotePeerSdpConstraints && config.remoteSdp.remotePeerSdpConstraints.OfferToReceiveAudio)\r\n            });\r\n        }\r\n\r\n        var streamsToShare = {};\r\n        peer.getLocalStreams().forEach(function(stream) {\r\n            streamsToShare[stream.streamid] = {\r\n                isAudio: !!stream.isAudio,\r\n                isVideo: !!stream.isVideo,\r\n                isScreen: !!stream.isScreen\r\n            };\r\n        });\r\n\r\n        function oldCreateOfferOrAnswer(_method) {\r\n            peer[_method](function(localSdp) {\r\n                if (DetectRTC.browser.name !== 'Safari') {\r\n                    localSdp.sdp = connection.processSdp(localSdp.sdp);\r\n                }\r\n                peer.setLocalDescription(localSdp, function() {\r\n                    if (!connection.trickleIce) return;\r\n\r\n                    config.onLocalSdp({\r\n                        type: localSdp.type,\r\n                        sdp: localSdp.sdp,\r\n                        remotePeerSdpConstraints: config.remotePeerSdpConstraints || false,\r\n                        renegotiatingPeer: !!config.renegotiatingPeer || false,\r\n                        connectionDescription: self.connectionDescription,\r\n                        dontGetRemoteStream: !!config.dontGetRemoteStream,\r\n                        extra: connection ? connection.extra : {},\r\n                        streamsToShare: streamsToShare\r\n                    });\r\n\r\n                    connection.onSettingLocalDescription(self);\r\n                }, function(error) {\r\n                    if (!!connection.enableLogs) {\r\n                        console.error('setLocalDescription-error', error);\r\n                    }\r\n                });\r\n            }, function(error) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('sdp-' + _method + '-error', error);\r\n                }\r\n            }, defaults.sdpConstraints);\r\n        }\r\n\r\n        function createOfferOrAnswer(_method) {\r\n            peer[_method](defaults.sdpConstraints).then(function(localSdp) {\r\n                if (DetectRTC.browser.name !== 'Safari') {\r\n                    localSdp.sdp = connection.processSdp(localSdp.sdp);\r\n                }\r\n                peer.setLocalDescription(localSdp).then(function() {\r\n                    if (!connection.trickleIce) return;\r\n\r\n                    config.onLocalSdp({\r\n                        type: localSdp.type,\r\n                        sdp: localSdp.sdp,\r\n                        remotePeerSdpConstraints: config.remotePeerSdpConstraints || false,\r\n                        renegotiatingPeer: !!config.renegotiatingPeer || false,\r\n                        connectionDescription: self.connectionDescription,\r\n                        dontGetRemoteStream: !!config.dontGetRemoteStream,\r\n                        extra: connection ? connection.extra : {},\r\n                        streamsToShare: streamsToShare\r\n                    });\r\n\r\n                    connection.onSettingLocalDescription(self);\r\n                }, function(error) {\r\n                    if (!connection.enableLogs) return;\r\n                    console.error('setLocalDescription error', error);\r\n                });\r\n            }, function(error) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('sdp-error', error);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (isOfferer) {\r\n            createOfferOrAnswer('createOffer');\r\n        }\r\n\r\n        peer.nativeClose = peer.close;\r\n        peer.close = function() {\r\n            if (!peer) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                if (peer.nativeClose !== peer.close) {\r\n                    peer.nativeClose();\r\n                }\r\n            } catch (e) {}\r\n\r\n            peer = null;\r\n            self.peer = null;\r\n        };\r\n\r\n        this.peer = peer;\r\n    }\r\n\r\n    // CodecsHandler.js\r\n\r\n    var CodecsHandler = (function() {\r\n        function preferCodec(sdp, codecName) {\r\n            var info = splitLines(sdp);\r\n\r\n            if (!info.videoCodecNumbers) {\r\n                return sdp;\r\n            }\r\n\r\n            if (codecName === 'vp8' && info.vp8LineNumber === info.videoCodecNumbers[0]) {\r\n                return sdp;\r\n            }\r\n\r\n            if (codecName === 'vp9' && info.vp9LineNumber === info.videoCodecNumbers[0]) {\r\n                return sdp;\r\n            }\r\n\r\n            if (codecName === 'h264' && info.h264LineNumber === info.videoCodecNumbers[0]) {\r\n                return sdp;\r\n            }\r\n\r\n            sdp = preferCodecHelper(sdp, codecName, info);\r\n\r\n            return sdp;\r\n        }\r\n\r\n        function preferCodecHelper(sdp, codec, info, ignore) {\r\n            var preferCodecNumber = '';\r\n\r\n            if (codec === 'vp8') {\r\n                if (!info.vp8LineNumber) {\r\n                    return sdp;\r\n                }\r\n                preferCodecNumber = info.vp8LineNumber;\r\n            }\r\n\r\n            if (codec === 'vp9') {\r\n                if (!info.vp9LineNumber) {\r\n                    return sdp;\r\n                }\r\n                preferCodecNumber = info.vp9LineNumber;\r\n            }\r\n\r\n            if (codec === 'h264') {\r\n                if (!info.h264LineNumber) {\r\n                    return sdp;\r\n                }\r\n\r\n                preferCodecNumber = info.h264LineNumber;\r\n            }\r\n\r\n            var newLine = info.videoCodecNumbersOriginal.split('SAVPF')[0] + 'SAVPF ';\r\n\r\n            var newOrder = [preferCodecNumber];\r\n\r\n            if (ignore) {\r\n                newOrder = [];\r\n            }\r\n\r\n            info.videoCodecNumbers.forEach(function(codecNumber) {\r\n                if (codecNumber === preferCodecNumber) return;\r\n                newOrder.push(codecNumber);\r\n            });\r\n\r\n            newLine += newOrder.join(' ');\r\n\r\n            sdp = sdp.replace(info.videoCodecNumbersOriginal, newLine);\r\n            return sdp;\r\n        }\r\n\r\n        function splitLines(sdp) {\r\n            var info = {};\r\n            sdp.split('\\n').forEach(function(line) {\r\n                if (line.indexOf('m=video') === 0) {\r\n                    info.videoCodecNumbers = [];\r\n                    line.split('SAVPF')[1].split(' ').forEach(function(codecNumber) {\r\n                        codecNumber = codecNumber.trim();\r\n                        if (!codecNumber || !codecNumber.length) return;\r\n                        info.videoCodecNumbers.push(codecNumber);\r\n                        info.videoCodecNumbersOriginal = line;\r\n                    });\r\n                }\r\n\r\n                if (line.indexOf('VP8/90000') !== -1 && !info.vp8LineNumber) {\r\n                    info.vp8LineNumber = line.replace('a=rtpmap:', '').split(' ')[0];\r\n                }\r\n\r\n                if (line.indexOf('VP9/90000') !== -1 && !info.vp9LineNumber) {\r\n                    info.vp9LineNumber = line.replace('a=rtpmap:', '').split(' ')[0];\r\n                }\r\n\r\n                if (line.indexOf('H264/90000') !== -1 && !info.h264LineNumber) {\r\n                    info.h264LineNumber = line.replace('a=rtpmap:', '').split(' ')[0];\r\n                }\r\n            });\r\n\r\n            return info;\r\n        }\r\n\r\n        function removeVPX(sdp) {\r\n            var info = splitLines(sdp);\r\n\r\n            // last parameter below means: ignore these codecs\r\n            sdp = preferCodecHelper(sdp, 'vp9', info, true);\r\n            sdp = preferCodecHelper(sdp, 'vp8', info, true);\r\n\r\n            return sdp;\r\n        }\r\n\r\n        function disableNACK(sdp) {\r\n            if (!sdp || typeof sdp !== 'string') {\r\n                throw 'Invalid arguments.';\r\n            }\r\n\r\n            sdp = sdp.replace('a=rtcp-fb:126 nack\\r\\n', '');\r\n            sdp = sdp.replace('a=rtcp-fb:126 nack pli\\r\\n', 'a=rtcp-fb:126 pli\\r\\n');\r\n            sdp = sdp.replace('a=rtcp-fb:97 nack\\r\\n', '');\r\n            sdp = sdp.replace('a=rtcp-fb:97 nack pli\\r\\n', 'a=rtcp-fb:97 pli\\r\\n');\r\n\r\n            return sdp;\r\n        }\r\n\r\n        function prioritize(codecMimeType, peer) {\r\n            if (!peer || !peer.getSenders || !peer.getSenders().length) {\r\n                return;\r\n            }\r\n\r\n            if (!codecMimeType || typeof codecMimeType !== 'string') {\r\n                throw 'Invalid arguments.';\r\n            }\r\n\r\n            peer.getSenders().forEach(function(sender) {\r\n                var params = sender.getParameters();\r\n                for (var i = 0; i < params.codecs.length; i++) {\r\n                    if (params.codecs[i].mimeType == codecMimeType) {\r\n                        params.codecs.unshift(params.codecs.splice(i, 1));\r\n                        break;\r\n                    }\r\n                }\r\n                sender.setParameters(params);\r\n            });\r\n        }\r\n\r\n        function removeNonG722(sdp) {\r\n            return sdp.replace(/m=audio ([0-9]+) RTP\\/SAVPF ([0-9 ]*)/g, 'm=audio $1 RTP\\/SAVPF 9');\r\n        }\r\n\r\n        function setBAS(sdp, bandwidth, isScreen) {\r\n            if (!bandwidth) {\r\n                return sdp;\r\n            }\r\n\r\n            if (typeof isFirefox !== 'undefined' && isFirefox) {\r\n                return sdp;\r\n            }\r\n\r\n            if (isScreen) {\r\n                if (!bandwidth.screen) {\r\n                    console.warn('It seems that you are not using bandwidth for screen. Screen sharing is expected to fail.');\r\n                } else if (bandwidth.screen < 300) {\r\n                    console.warn('It seems that you are using wrong bandwidth value for screen. Screen sharing is expected to fail.');\r\n                }\r\n            }\r\n\r\n            // if screen; must use at least 300kbs\r\n            if (bandwidth.screen && isScreen) {\r\n                sdp = sdp.replace(/b=AS([^\\r\\n]+\\r\\n)/g, '');\r\n                sdp = sdp.replace(/a=mid:video\\r\\n/g, 'a=mid:video\\r\\nb=AS:' + bandwidth.screen + '\\r\\n');\r\n            }\r\n\r\n            // remove existing bandwidth lines\r\n            if (bandwidth.audio || bandwidth.video) {\r\n                sdp = sdp.replace(/b=AS([^\\r\\n]+\\r\\n)/g, '');\r\n            }\r\n\r\n            if (bandwidth.audio) {\r\n                sdp = sdp.replace(/a=mid:audio\\r\\n/g, 'a=mid:audio\\r\\nb=AS:' + bandwidth.audio + '\\r\\n');\r\n            }\r\n\r\n            if (bandwidth.screen) {\r\n                sdp = sdp.replace(/a=mid:video\\r\\n/g, 'a=mid:video\\r\\nb=AS:' + bandwidth.screen + '\\r\\n');\r\n            } else if (bandwidth.video) {\r\n                sdp = sdp.replace(/a=mid:video\\r\\n/g, 'a=mid:video\\r\\nb=AS:' + bandwidth.video + '\\r\\n');\r\n            }\r\n\r\n            return sdp;\r\n        }\r\n\r\n        // Find the line in sdpLines that starts with |prefix|, and, if specified,\r\n        // contains |substr| (case-insensitive search).\r\n        function findLine(sdpLines, prefix, substr) {\r\n            return findLineInRange(sdpLines, 0, -1, prefix, substr);\r\n        }\r\n\r\n        // Find the line in sdpLines[startLine...endLine - 1] that starts with |prefix|\r\n        // and, if specified, contains |substr| (case-insensitive search).\r\n        function findLineInRange(sdpLines, startLine, endLine, prefix, substr) {\r\n            var realEndLine = endLine !== -1 ? endLine : sdpLines.length;\r\n            for (var i = startLine; i < realEndLine; ++i) {\r\n                if (sdpLines[i].indexOf(prefix) === 0) {\r\n                    if (!substr ||\r\n                        sdpLines[i].toLowerCase().indexOf(substr.toLowerCase()) !== -1) {\r\n                        return i;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        // Gets the codec payload type from an a=rtpmap:X line.\r\n        function getCodecPayloadType(sdpLine) {\r\n            var pattern = new RegExp('a=rtpmap:(\\\\d+) \\\\w+\\\\/\\\\d+');\r\n            var result = sdpLine.match(pattern);\r\n            return (result && result.length === 2) ? result[1] : null;\r\n        }\r\n\r\n        function setVideoBitrates(sdp, params) {\r\n            params = params || {};\r\n            var xgoogle_min_bitrate = params.min;\r\n            var xgoogle_max_bitrate = params.max;\r\n\r\n            var sdpLines = sdp.split('\\r\\n');\r\n\r\n            // VP8\r\n            var vp8Index = findLine(sdpLines, 'a=rtpmap', 'VP8/90000');\r\n            var vp8Payload;\r\n            if (vp8Index) {\r\n                vp8Payload = getCodecPayloadType(sdpLines[vp8Index]);\r\n            }\r\n\r\n            if (!vp8Payload) {\r\n                return sdp;\r\n            }\r\n\r\n            var rtxIndex = findLine(sdpLines, 'a=rtpmap', 'rtx/90000');\r\n            var rtxPayload;\r\n            if (rtxIndex) {\r\n                rtxPayload = getCodecPayloadType(sdpLines[rtxIndex]);\r\n            }\r\n\r\n            if (!rtxIndex) {\r\n                return sdp;\r\n            }\r\n\r\n            var rtxFmtpLineIndex = findLine(sdpLines, 'a=fmtp:' + rtxPayload.toString());\r\n            if (rtxFmtpLineIndex !== null) {\r\n                var appendrtxNext = '\\r\\n';\r\n                appendrtxNext += 'a=fmtp:' + vp8Payload + ' x-google-min-bitrate=' + (xgoogle_min_bitrate || '228') + '; x-google-max-bitrate=' + (xgoogle_max_bitrate || '228');\r\n                sdpLines[rtxFmtpLineIndex] = sdpLines[rtxFmtpLineIndex].concat(appendrtxNext);\r\n                sdp = sdpLines.join('\\r\\n');\r\n            }\r\n\r\n            return sdp;\r\n        }\r\n\r\n        function setOpusAttributes(sdp, params) {\r\n            params = params || {};\r\n\r\n            var sdpLines = sdp.split('\\r\\n');\r\n\r\n            // Opus\r\n            var opusIndex = findLine(sdpLines, 'a=rtpmap', 'opus/48000');\r\n            var opusPayload;\r\n            if (opusIndex) {\r\n                opusPayload = getCodecPayloadType(sdpLines[opusIndex]);\r\n            }\r\n\r\n            if (!opusPayload) {\r\n                return sdp;\r\n            }\r\n\r\n            var opusFmtpLineIndex = findLine(sdpLines, 'a=fmtp:' + opusPayload.toString());\r\n            if (opusFmtpLineIndex === null) {\r\n                return sdp;\r\n            }\r\n\r\n            var appendOpusNext = '';\r\n            appendOpusNext += '; stereo=' + (typeof params.stereo != 'undefined' ? params.stereo : '1');\r\n            appendOpusNext += '; sprop-stereo=' + (typeof params['sprop-stereo'] != 'undefined' ? params['sprop-stereo'] : '1');\r\n\r\n            if (typeof params.maxaveragebitrate != 'undefined') {\r\n                appendOpusNext += '; maxaveragebitrate=' + (params.maxaveragebitrate || 128 * 1024 * 8);\r\n            }\r\n\r\n            if (typeof params.maxplaybackrate != 'undefined') {\r\n                appendOpusNext += '; maxplaybackrate=' + (params.maxplaybackrate || 128 * 1024 * 8);\r\n            }\r\n\r\n            if (typeof params.cbr != 'undefined') {\r\n                appendOpusNext += '; cbr=' + (typeof params.cbr != 'undefined' ? params.cbr : '1');\r\n            }\r\n\r\n            if (typeof params.useinbandfec != 'undefined') {\r\n                appendOpusNext += '; useinbandfec=' + params.useinbandfec;\r\n            }\r\n\r\n            if (typeof params.usedtx != 'undefined') {\r\n                appendOpusNext += '; usedtx=' + params.usedtx;\r\n            }\r\n\r\n            if (typeof params.maxptime != 'undefined') {\r\n                appendOpusNext += '\\r\\na=maxptime:' + params.maxptime;\r\n            }\r\n\r\n            sdpLines[opusFmtpLineIndex] = sdpLines[opusFmtpLineIndex].concat(appendOpusNext);\r\n\r\n            sdp = sdpLines.join('\\r\\n');\r\n            return sdp;\r\n        }\r\n\r\n        // forceStereoAudio => via webrtcexample.com\r\n        // requires getUserMedia => echoCancellation:false\r\n        function forceStereoAudio(sdp) {\r\n            var sdpLines = sdp.split('\\r\\n');\r\n            var fmtpLineIndex = null;\r\n            for (var i = 0; i < sdpLines.length; i++) {\r\n                if (sdpLines[i].search('opus/48000') !== -1) {\r\n                    var opusPayload = extractSdp(sdpLines[i], /:(\\d+) opus\\/48000/i);\r\n                    break;\r\n                }\r\n            }\r\n            for (var i = 0; i < sdpLines.length; i++) {\r\n                if (sdpLines[i].search('a=fmtp') !== -1) {\r\n                    var payload = extractSdp(sdpLines[i], /a=fmtp:(\\d+)/);\r\n                    if (payload === opusPayload) {\r\n                        fmtpLineIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (fmtpLineIndex === null) return sdp;\r\n            sdpLines[fmtpLineIndex] = sdpLines[fmtpLineIndex].concat('; stereo=1; sprop-stereo=1');\r\n            sdp = sdpLines.join('\\r\\n');\r\n            return sdp;\r\n        }\r\n\r\n        return {\r\n            removeVPX: removeVPX,\r\n            disableNACK: disableNACK,\r\n            prioritize: prioritize,\r\n            removeNonG722: removeNonG722,\r\n            setApplicationSpecificBandwidth: function(sdp, bandwidth, isScreen) {\r\n                return setBAS(sdp, bandwidth, isScreen);\r\n            },\r\n            setVideoBitrates: function(sdp, params) {\r\n                return setVideoBitrates(sdp, params);\r\n            },\r\n            setOpusAttributes: function(sdp, params) {\r\n                return setOpusAttributes(sdp, params);\r\n            },\r\n            preferVP9: function(sdp) {\r\n                return preferCodec(sdp, 'vp9');\r\n            },\r\n            preferCodec: preferCodec,\r\n            forceStereoAudio: forceStereoAudio\r\n        };\r\n    })();\r\n\r\n    // backward compatibility\r\n    window.BandwidthHandler = CodecsHandler;\r\n\r\n    // OnIceCandidateHandler.js\r\n\r\n    var OnIceCandidateHandler = (function() {\r\n        function processCandidates(connection, icePair) {\r\n            var candidate = icePair.candidate;\r\n\r\n            var iceRestrictions = connection.candidates;\r\n            var stun = iceRestrictions.stun;\r\n            var turn = iceRestrictions.turn;\r\n\r\n            if (!isNull(iceRestrictions.reflexive)) {\r\n                stun = iceRestrictions.reflexive;\r\n            }\r\n\r\n            if (!isNull(iceRestrictions.relay)) {\r\n                turn = iceRestrictions.relay;\r\n            }\r\n\r\n            if (!iceRestrictions.host && !!candidate.match(/typ host/g)) {\r\n                return;\r\n            }\r\n\r\n            if (!turn && !!candidate.match(/typ relay/g)) {\r\n                return;\r\n            }\r\n\r\n            if (!stun && !!candidate.match(/typ srflx/g)) {\r\n                return;\r\n            }\r\n\r\n            var protocol = connection.iceProtocols;\r\n\r\n            if (!protocol.udp && !!candidate.match(/ udp /g)) {\r\n                return;\r\n            }\r\n\r\n            if (!protocol.tcp && !!candidate.match(/ tcp /g)) {\r\n                return;\r\n            }\r\n\r\n            if (connection.enableLogs) {\r\n                console.debug('Your candidate pairs:', candidate);\r\n            }\r\n\r\n            return {\r\n                candidate: candidate,\r\n                sdpMid: icePair.sdpMid,\r\n                sdpMLineIndex: icePair.sdpMLineIndex\r\n            };\r\n        }\r\n\r\n        return {\r\n            processCandidates: processCandidates\r\n        };\r\n    })();\r\n\r\n    // IceServersHandler.js\r\n\r\n    var IceServersHandler = (function() {\r\n        function getIceServers(connection) {\r\n            // resiprocate: 3344+4433\r\n            // pions: 7575\r\n            var iceServers = [{\r\n                'urls': [\r\n                    'stun:stun.l.google.com:19302',\r\n                    'stun:stun1.l.google.com:19302',\r\n                    'stun:stun2.l.google.com:19302',\r\n                    'stun:stun.l.google.com:19302?transport=udp',\r\n                ]\r\n            }];\r\n\r\n            return iceServers;\r\n        }\r\n\r\n        return {\r\n            getIceServers: getIceServers\r\n        };\r\n    })();\r\n\r\n    // getUserMediaHandler.js\r\n\r\n    function setStreamType(constraints, stream) {\r\n        if (constraints.mandatory && constraints.mandatory.chromeMediaSource) {\r\n            stream.isScreen = true;\r\n        } else if (constraints.mozMediaSource || constraints.mediaSource) {\r\n            stream.isScreen = true;\r\n        } else if (constraints.video) {\r\n            stream.isVideo = true;\r\n        } else if (constraints.audio) {\r\n            stream.isAudio = true;\r\n        }\r\n    }\r\n\r\n    // allow users to manage this object (to support re-capturing of screen/etc.)\r\n    window.currentUserMediaRequest = {\r\n        streams: [],\r\n        mutex: false,\r\n        queueRequests: [],\r\n        remove: function(idInstance) {\r\n            this.mutex = false;\r\n\r\n            var stream = this.streams[idInstance];\r\n            if (!stream) {\r\n                return;\r\n            }\r\n\r\n            stream = stream.stream;\r\n\r\n            var options = stream.currentUserMediaRequestOptions;\r\n\r\n            if (this.queueRequests.indexOf(options)) {\r\n                delete this.queueRequests[this.queueRequests.indexOf(options)];\r\n                this.queueRequests = removeNullEntries(this.queueRequests);\r\n            }\r\n\r\n            this.streams[idInstance].stream = null;\r\n            delete this.streams[idInstance];\r\n        }\r\n    };\r\n\r\n    function getUserMediaHandler(options) {\r\n        if (currentUserMediaRequest.mutex === true) {\r\n            currentUserMediaRequest.queueRequests.push(options);\r\n            return;\r\n        }\r\n        currentUserMediaRequest.mutex = true;\r\n\r\n        // easy way to match\r\n        var idInstance = JSON.stringify(options.localMediaConstraints);\r\n\r\n        function streaming(stream, returnBack) {\r\n            setStreamType(options.localMediaConstraints, stream);\r\n\r\n            var streamEndedEvent = 'ended';\r\n\r\n            if ('oninactive' in stream) {\r\n                streamEndedEvent = 'inactive';\r\n            }\r\n            stream.addEventListener(streamEndedEvent, function() {\r\n                delete currentUserMediaRequest.streams[idInstance];\r\n\r\n                currentUserMediaRequest.mutex = false;\r\n                if (currentUserMediaRequest.queueRequests.indexOf(options)) {\r\n                    delete currentUserMediaRequest.queueRequests[currentUserMediaRequest.queueRequests.indexOf(options)];\r\n                    currentUserMediaRequest.queueRequests = removeNullEntries(currentUserMediaRequest.queueRequests);\r\n                }\r\n            }, false);\r\n\r\n            currentUserMediaRequest.streams[idInstance] = {\r\n                stream: stream\r\n            };\r\n            currentUserMediaRequest.mutex = false;\r\n\r\n            if (currentUserMediaRequest.queueRequests.length) {\r\n                getUserMediaHandler(currentUserMediaRequest.queueRequests.shift());\r\n            }\r\n\r\n            // callback\r\n            options.onGettingLocalMedia(stream, returnBack);\r\n        }\r\n\r\n        if (currentUserMediaRequest.streams[idInstance]) {\r\n            streaming(currentUserMediaRequest.streams[idInstance].stream, true);\r\n        } else {\r\n            var isBlackBerry = !!(/BB10|BlackBerry/i.test(navigator.userAgent || ''));\r\n            if (isBlackBerry || typeof navigator.mediaDevices === 'undefined' || typeof navigator.mediaDevices.getUserMedia !== 'function') {\r\n                navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n                navigator.getUserMedia(options.localMediaConstraints, function(stream) {\r\n                    stream.streamid = stream.streamid || stream.id || getRandomString();\r\n                    stream.idInstance = idInstance;\r\n                    streaming(stream);\r\n                }, function(error) {\r\n                    options.onLocalMediaError(error, options.localMediaConstraints);\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (typeof navigator.mediaDevices === 'undefined') {\r\n                navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n                var getUserMediaSuccess = function() {};\r\n                var getUserMediaFailure = function() {};\r\n\r\n                var getUserMediaStream, getUserMediaError;\r\n                navigator.mediaDevices = {\r\n                    getUserMedia: function(hints) {\r\n                        navigator.getUserMedia(hints, function(getUserMediaSuccess) {\r\n                            getUserMediaSuccess(stream);\r\n                            getUserMediaStream = stream;\r\n                        }, function(error) {\r\n                            getUserMediaFailure(error);\r\n                            getUserMediaError = error;\r\n                        });\r\n\r\n                        return {\r\n                            then: function(successCB) {\r\n                                if (getUserMediaStream) {\r\n                                    successCB(getUserMediaStream);\r\n                                    return;\r\n                                }\r\n\r\n                                getUserMediaSuccess = successCB;\r\n\r\n                                return {\r\n                                    then: function(failureCB) {\r\n                                        if (getUserMediaError) {\r\n                                            failureCB(getUserMediaError);\r\n                                            return;\r\n                                        }\r\n\r\n                                        getUserMediaFailure = failureCB;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            if (options.localMediaConstraints.isScreen === true) {\r\n                if (navigator.mediaDevices.getDisplayMedia) {\r\n                    navigator.mediaDevices.getDisplayMedia(options.localMediaConstraints).then(function(stream) {\r\n                        stream.streamid = stream.streamid || stream.id || getRandomString();\r\n                        stream.idInstance = idInstance;\r\n\r\n                        streaming(stream);\r\n                    }).catch(function(error) {\r\n                        options.onLocalMediaError(error, options.localMediaConstraints);\r\n                    });\r\n                } else if (navigator.getDisplayMedia) {\r\n                    navigator.getDisplayMedia(options.localMediaConstraints).then(function(stream) {\r\n                        stream.streamid = stream.streamid || stream.id || getRandomString();\r\n                        stream.idInstance = idInstance;\r\n\r\n                        streaming(stream);\r\n                    }).catch(function(error) {\r\n                        options.onLocalMediaError(error, options.localMediaConstraints);\r\n                    });\r\n                } else {\r\n                    throw new Error('getDisplayMedia API is not availabe in this browser.');\r\n                }\r\n                return;\r\n            }\r\n\r\n            navigator.mediaDevices.getUserMedia(options.localMediaConstraints).then(function(stream) {\r\n                stream.streamid = stream.streamid || stream.id || getRandomString();\r\n                stream.idInstance = idInstance;\r\n\r\n                streaming(stream);\r\n            }).catch(function(error) {\r\n                options.onLocalMediaError(error, options.localMediaConstraints);\r\n            });\r\n        }\r\n    }\r\n\r\n    // StreamsHandler.js\r\n\r\n    var StreamsHandler = (function() {\r\n        function handleType(type) {\r\n            if (!type) {\r\n                return;\r\n            }\r\n\r\n            if (typeof type === 'string' || typeof type === 'undefined') {\r\n                return type;\r\n            }\r\n\r\n            if (type.audio && type.video) {\r\n                return null;\r\n            }\r\n\r\n            if (type.audio) {\r\n                return 'audio';\r\n            }\r\n\r\n            if (type.video) {\r\n                return 'video';\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        function setHandlers(stream, syncAction, connection) {\r\n            if (!stream || !stream.addEventListener) return;\r\n\r\n            if (typeof syncAction == 'undefined' || syncAction == true) {\r\n                var streamEndedEvent = 'ended';\r\n\r\n                if ('oninactive' in stream) {\r\n                    streamEndedEvent = 'inactive';\r\n                }\r\n\r\n                stream.addEventListener(streamEndedEvent, function() {\r\n                    StreamsHandler.onSyncNeeded(this.streamid, streamEndedEvent);\r\n                }, false);\r\n            }\r\n\r\n            stream.mute = function(type, isSyncAction) {\r\n                type = handleType(type);\r\n\r\n                if (typeof isSyncAction !== 'undefined') {\r\n                    syncAction = isSyncAction;\r\n                }\r\n\r\n                if (typeof type == 'undefined' || type == 'audio') {\r\n                    getTracks(stream, 'audio').forEach(function(track) {\r\n                        track.enabled = false;\r\n                        connection.streamEvents[stream.streamid].isAudioMuted = true;\r\n                    });\r\n                }\r\n\r\n                if (typeof type == 'undefined' || type == 'video') {\r\n                    getTracks(stream, 'video').forEach(function(track) {\r\n                        track.enabled = false;\r\n                    });\r\n                }\r\n\r\n                if (typeof syncAction == 'undefined' || syncAction == true) {\r\n                    StreamsHandler.onSyncNeeded(stream.streamid, 'mute', type);\r\n                }\r\n\r\n                connection.streamEvents[stream.streamid].muteType = type || 'both';\r\n\r\n                fireEvent(stream, 'mute', type);\r\n            };\r\n\r\n            stream.unmute = function(type, isSyncAction) {\r\n                type = handleType(type);\r\n\r\n                if (typeof isSyncAction !== 'undefined') {\r\n                    syncAction = isSyncAction;\r\n                }\r\n\r\n                graduallyIncreaseVolume();\r\n\r\n                if (typeof type == 'undefined' || type == 'audio') {\r\n                    getTracks(stream, 'audio').forEach(function(track) {\r\n                        track.enabled = true;\r\n                        connection.streamEvents[stream.streamid].isAudioMuted = false;\r\n                    });\r\n                }\r\n\r\n                if (typeof type == 'undefined' || type == 'video') {\r\n                    getTracks(stream, 'video').forEach(function(track) {\r\n                        track.enabled = true;\r\n                    });\r\n\r\n                    // make sure that video unmute doesn't affects audio\r\n                    if (typeof type !== 'undefined' && type == 'video' && connection.streamEvents[stream.streamid].isAudioMuted) {\r\n                        (function looper(times) {\r\n                            if (!times) {\r\n                                times = 0;\r\n                            }\r\n\r\n                            times++;\r\n\r\n                            // check until five-seconds\r\n                            if (times < 100 && connection.streamEvents[stream.streamid].isAudioMuted) {\r\n                                stream.mute('audio');\r\n\r\n                                setTimeout(function() {\r\n                                    looper(times);\r\n                                }, 50);\r\n                            }\r\n                        })();\r\n                    }\r\n                }\r\n\r\n                if (typeof syncAction == 'undefined' || syncAction == true) {\r\n                    StreamsHandler.onSyncNeeded(stream.streamid, 'unmute', type);\r\n                }\r\n\r\n                connection.streamEvents[stream.streamid].unmuteType = type || 'both';\r\n\r\n                fireEvent(stream, 'unmute', type);\r\n            };\r\n\r\n            function graduallyIncreaseVolume() {\r\n                if (!connection.streamEvents[stream.streamid].mediaElement) {\r\n                    return;\r\n                }\r\n\r\n                var mediaElement = connection.streamEvents[stream.streamid].mediaElement;\r\n                mediaElement.volume = 0;\r\n                afterEach(200, 5, function() {\r\n                    try {\r\n                        mediaElement.volume += .20;\r\n                    } catch (e) {\r\n                        mediaElement.volume = 1;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        function afterEach(setTimeoutInteval, numberOfTimes, callback, startedTimes) {\r\n            startedTimes = (startedTimes || 0) + 1;\r\n            if (startedTimes >= numberOfTimes) return;\r\n\r\n            setTimeout(function() {\r\n                callback();\r\n                afterEach(setTimeoutInteval, numberOfTimes, callback, startedTimes);\r\n            }, setTimeoutInteval);\r\n        }\r\n\r\n        return {\r\n            setHandlers: setHandlers,\r\n            onSyncNeeded: function(streamid, action, type) {}\r\n        };\r\n    })();\r\n\r\n    // TextReceiver.js & TextSender.js\r\n\r\n    function TextReceiver(connection) {\r\n        var content = {};\r\n\r\n        function receive(data, userid, extra) {\r\n            // uuid is used to uniquely identify sending instance\r\n            var uuid = data.uuid;\r\n            if (!content[uuid]) {\r\n                content[uuid] = [];\r\n            }\r\n\r\n            content[uuid].push(data.message);\r\n\r\n            if (data.last) {\r\n                var message = content[uuid].join('');\r\n                if (data.isobject) {\r\n                    message = JSON.parse(message);\r\n                }\r\n\r\n                // latency detection\r\n                var receivingTime = new Date().getTime();\r\n                var latency = receivingTime - data.sendingTime;\r\n\r\n                var e = {\r\n                    data: message,\r\n                    userid: userid,\r\n                    extra: extra,\r\n                    latency: latency\r\n                };\r\n\r\n                if (connection.autoTranslateText) {\r\n                    e.original = e.data;\r\n                    connection.Translator.TranslateText(e.data, function(translatedText) {\r\n                        e.data = translatedText;\r\n                        connection.onmessage(e);\r\n                    });\r\n                } else {\r\n                    connection.onmessage(e);\r\n                }\r\n\r\n                delete content[uuid];\r\n            }\r\n        }\r\n\r\n        return {\r\n            receive: receive\r\n        };\r\n    }\r\n\r\n    // TextSender.js\r\n    var TextSender = {\r\n        send: function(config) {\r\n            var connection = config.connection;\r\n\r\n            var channel = config.channel,\r\n                remoteUserId = config.remoteUserId,\r\n                initialText = config.text,\r\n                packetSize = connection.chunkSize || 1000,\r\n                textToTransfer = '',\r\n                isobject = false;\r\n\r\n            if (!isString(initialText)) {\r\n                isobject = true;\r\n                initialText = JSON.stringify(initialText);\r\n            }\r\n\r\n            // uuid is used to uniquely identify sending instance\r\n            var uuid = getRandomString();\r\n            var sendingTime = new Date().getTime();\r\n\r\n            sendText(initialText);\r\n\r\n            function sendText(textMessage, text) {\r\n                var data = {\r\n                    type: 'text',\r\n                    uuid: uuid,\r\n                    sendingTime: sendingTime\r\n                };\r\n\r\n                if (textMessage) {\r\n                    text = textMessage;\r\n                    data.packets = parseInt(text.length / packetSize);\r\n                }\r\n\r\n                if (text.length > packetSize) {\r\n                    data.message = text.slice(0, packetSize);\r\n                } else {\r\n                    data.message = text;\r\n                    data.last = true;\r\n                    data.isobject = isobject;\r\n                }\r\n\r\n                channel.send(data, remoteUserId);\r\n\r\n                textToTransfer = text.slice(data.message.length);\r\n\r\n                if (textToTransfer.length) {\r\n                    setTimeout(function() {\r\n                        sendText(null, textToTransfer);\r\n                    }, connection.chunkInterval || 100);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // FileProgressBarHandler.js\r\n\r\n    var FileProgressBarHandler = (function() {\r\n        function handle(connection) {\r\n            var progressHelper = {};\r\n\r\n            // www.RTCMultiConnection.org/docs/onFileStart/\r\n            connection.onFileStart = function(file) {\r\n                var div = document.createElement('div');\r\n                div.title = file.name;\r\n                div.innerHTML = '<label>0%</label> <progress></progress>';\r\n\r\n                if (file.remoteUserId) {\r\n                    div.innerHTML += ' (Sharing with:' + file.remoteUserId + ')';\r\n                }\r\n\r\n                if (!connection.filesContainer) {\r\n                    connection.filesContainer = document.body || document.documentElement;\r\n                }\r\n\r\n                connection.filesContainer.insertBefore(div, connection.filesContainer.firstChild);\r\n\r\n                if (!file.remoteUserId) {\r\n                    progressHelper[file.uuid] = {\r\n                        div: div,\r\n                        progress: div.querySelector('progress'),\r\n                        label: div.querySelector('label')\r\n                    };\r\n                    progressHelper[file.uuid].progress.max = file.maxChunks;\r\n                    return;\r\n                }\r\n\r\n                if (!progressHelper[file.uuid]) {\r\n                    progressHelper[file.uuid] = {};\r\n                }\r\n\r\n                progressHelper[file.uuid][file.remoteUserId] = {\r\n                    div: div,\r\n                    progress: div.querySelector('progress'),\r\n                    label: div.querySelector('label')\r\n                };\r\n                progressHelper[file.uuid][file.remoteUserId].progress.max = file.maxChunks;\r\n            };\r\n\r\n            // www.RTCMultiConnection.org/docs/onFileProgress/\r\n            connection.onFileProgress = function(chunk) {\r\n                var helper = progressHelper[chunk.uuid];\r\n                if (!helper) {\r\n                    return;\r\n                }\r\n                if (chunk.remoteUserId) {\r\n                    helper = progressHelper[chunk.uuid][chunk.remoteUserId];\r\n                    if (!helper) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                helper.progress.value = chunk.currentPosition || chunk.maxChunks || helper.progress.max;\r\n                updateLabel(helper.progress, helper.label);\r\n            };\r\n\r\n            // www.RTCMultiConnection.org/docs/onFileEnd/\r\n            connection.onFileEnd = function(file) {\r\n                var helper = progressHelper[file.uuid];\r\n                if (!helper) {\r\n                    console.error('No such progress-helper element exist.', file);\r\n                    return;\r\n                }\r\n\r\n                if (file.remoteUserId) {\r\n                    helper = progressHelper[file.uuid][file.remoteUserId];\r\n                    if (!helper) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                var div = helper.div;\r\n                if (file.type.indexOf('image') != -1) {\r\n                    div.innerHTML = '<a href=\"' + file.url + '\" download=\"' + file.name + '\">Download <strong style=\"color:red;\">' + file.name + '</strong> </a><br /><img src=\"' + file.url + '\" title=\"' + file.name + '\" style=\"max-width: 80%;\">';\r\n                } else {\r\n                    div.innerHTML = '<a href=\"' + file.url + '\" download=\"' + file.name + '\">Download <strong style=\"color:red;\">' + file.name + '</strong> </a><br /><iframe src=\"' + file.url + '\" title=\"' + file.name + '\" style=\"width: 80%;border: 0;height: inherit;margin-top:1em;\"></iframe>';\r\n                }\r\n            };\r\n\r\n            function updateLabel(progress, label) {\r\n                if (progress.position === -1) {\r\n                    return;\r\n                }\r\n\r\n                var position = +progress.position.toFixed(2).split('.')[1] || 100;\r\n                label.innerHTML = position + '%';\r\n            }\r\n        }\r\n\r\n        return {\r\n            handle: handle\r\n        };\r\n    })();\r\n\r\n    // TranslationHandler.js\r\n\r\n    var TranslationHandler = (function() {\r\n        function handle(connection) {\r\n            connection.autoTranslateText = false;\r\n            connection.language = 'en';\r\n            connection.googKey = 'AIzaSyCgB5hmFY74WYB-EoWkhr9cAGr6TiTHrEE';\r\n\r\n            // www.RTCMultiConnection.org/docs/Translator/\r\n            connection.Translator = {\r\n                TranslateText: function(text, callback) {\r\n                    // if(location.protocol === 'https:') return callback(text);\r\n\r\n                    var newScript = document.createElement('script');\r\n                    newScript.type = 'text/javascript';\r\n\r\n                    var sourceText = encodeURIComponent(text); // escape\r\n\r\n                    var randomNumber = 'method' + connection.token();\r\n                    window[randomNumber] = function(response) {\r\n                        if (response.data && response.data.translations[0] && callback) {\r\n                            callback(response.data.translations[0].translatedText);\r\n                            return;\r\n                        }\r\n\r\n                        if (response.error && response.error.message === 'Daily Limit Exceeded') {\r\n                            console.error('Text translation failed. Error message: \"Daily Limit Exceeded.\"');\r\n                            return;\r\n                        }\r\n\r\n                        if (response.error) {\r\n                            console.error(response.error.message);\r\n                            return;\r\n                        }\r\n\r\n                        console.error(response);\r\n                    };\r\n\r\n                    var source = 'https://www.googleapis.com/language/translate/v2?key=' + connection.googKey + '&target=' + (connection.language || 'en-US') + '&callback=window.' + randomNumber + '&q=' + sourceText;\r\n                    newScript.src = source;\r\n                    document.getElementsByTagName('head')[0].appendChild(newScript);\r\n                },\r\n                getListOfLanguages: function(callback) {\r\n                    var xhr = new XMLHttpRequest();\r\n                    xhr.onreadystatechange = function() {\r\n                        if (xhr.readyState == XMLHttpRequest.DONE) {\r\n                            var response = JSON.parse(xhr.responseText);\r\n\r\n                            if (response && response.data && response.data.languages) {\r\n                                callback(response.data.languages);\r\n                                return;\r\n                            }\r\n\r\n                            if (response.error && response.error.message === 'Daily Limit Exceeded') {\r\n                                console.error('Text translation failed. Error message: \"Daily Limit Exceeded.\"');\r\n                                return;\r\n                            }\r\n\r\n                            if (response.error) {\r\n                                console.error(response.error.message);\r\n                                return;\r\n                            }\r\n\r\n                            console.error(response);\r\n                        }\r\n                    }\r\n                    var url = 'https://www.googleapis.com/language/translate/v2/languages?key=' + connection.googKey + '&target=en';\r\n                    xhr.open('GET', url, true);\r\n                    xhr.send(null);\r\n                }\r\n            };\r\n        }\r\n\r\n        return {\r\n            handle: handle\r\n        };\r\n    })();\r\n\r\n    // _____________________\r\n    // RTCMultiConnection.js\r\n\r\n    (function(connection) {\r\n        forceOptions = forceOptions || {\r\n            useDefaultDevices: true\r\n        };\r\n\r\n        connection.channel = connection.sessionid = (roomid || location.href.replace(/\\/|:|#|\\?|\\$|\\^|%|\\.|`|~|!|\\+|@|\\[|\\||]|\\|*. /g, '').split('\\n').join('').split('\\r').join('')) + '';\r\n\r\n        var mPeer = new MultiPeers(connection);\r\n\r\n        var preventDuplicateOnStreamEvents = {};\r\n        mPeer.onGettingLocalMedia = function(stream, callback) {\r\n            callback = callback || function() {};\r\n\r\n            if (preventDuplicateOnStreamEvents[stream.streamid]) {\r\n                callback();\r\n                return;\r\n            }\r\n            preventDuplicateOnStreamEvents[stream.streamid] = true;\r\n\r\n            try {\r\n                stream.type = 'local';\r\n            } catch (e) {}\r\n\r\n            connection.setStreamEndHandler(stream);\r\n\r\n            getRMCMediaElement(stream, function(mediaElement) {\r\n                mediaElement.id = stream.streamid;\r\n                mediaElement.muted = true;\r\n                mediaElement.volume = 0;\r\n\r\n                if (connection.attachStreams.indexOf(stream) === -1) {\r\n                    connection.attachStreams.push(stream);\r\n                }\r\n\r\n                if (typeof StreamsHandler !== 'undefined') {\r\n                    StreamsHandler.setHandlers(stream, true, connection);\r\n                }\r\n\r\n                connection.streamEvents[stream.streamid] = {\r\n                    stream: stream,\r\n                    type: 'local',\r\n                    mediaElement: mediaElement,\r\n                    userid: connection.userid,\r\n                    extra: connection.extra,\r\n                    streamid: stream.streamid,\r\n                    isAudioMuted: true\r\n                };\r\n\r\n                try {\r\n                    setHarkEvents(connection, connection.streamEvents[stream.streamid]);\r\n                    setMuteHandlers(connection, connection.streamEvents[stream.streamid]);\r\n\r\n                    connection.onstream(connection.streamEvents[stream.streamid]);\r\n                } catch (e) {\r\n                    //\r\n                }\r\n\r\n                callback();\r\n            }, connection);\r\n        };\r\n\r\n        mPeer.onGettingRemoteMedia = function(stream, remoteUserId) {\r\n            try {\r\n                stream.type = 'remote';\r\n            } catch (e) {}\r\n\r\n            connection.setStreamEndHandler(stream, 'remote-stream');\r\n\r\n            getRMCMediaElement(stream, function(mediaElement) {\r\n                mediaElement.id = stream.streamid;\r\n\r\n                if (typeof StreamsHandler !== 'undefined') {\r\n                    StreamsHandler.setHandlers(stream, false, connection);\r\n                }\r\n\r\n                connection.streamEvents[stream.streamid] = {\r\n                    stream: stream,\r\n                    type: 'remote',\r\n                    userid: remoteUserId,\r\n                    extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {},\r\n                    mediaElement: mediaElement,\r\n                    streamid: stream.streamid\r\n                };\r\n\r\n                setMuteHandlers(connection, connection.streamEvents[stream.streamid]);\r\n\r\n                connection.onstream(connection.streamEvents[stream.streamid]);\r\n            }, connection);\r\n        };\r\n\r\n        mPeer.onRemovingRemoteMedia = function(stream, remoteUserId) {\r\n            var streamEvent = connection.streamEvents[stream.streamid];\r\n            if (!streamEvent) {\r\n                streamEvent = {\r\n                    stream: stream,\r\n                    type: 'remote',\r\n                    userid: remoteUserId,\r\n                    extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {},\r\n                    streamid: stream.streamid,\r\n                    mediaElement: connection.streamEvents[stream.streamid] ? connection.streamEvents[stream.streamid].mediaElement : null\r\n                };\r\n            }\r\n\r\n            if (connection.peersBackup[streamEvent.userid]) {\r\n                streamEvent.extra = connection.peersBackup[streamEvent.userid].extra;\r\n            }\r\n\r\n            connection.onstreamended(streamEvent);\r\n\r\n            delete connection.streamEvents[stream.streamid];\r\n        };\r\n\r\n        mPeer.onNegotiationNeeded = function(message, remoteUserId, callback) {\r\n            callback = callback || function() {};\r\n\r\n            remoteUserId = remoteUserId || message.remoteUserId;\r\n            message = message || '';\r\n\r\n            // usually a message looks like this\r\n            var messageToDeliver = {\r\n                remoteUserId: remoteUserId,\r\n                message: message,\r\n                sender: connection.userid\r\n            };\r\n\r\n            if (message.remoteUserId && message.message && message.sender) {\r\n                // if a code is manually passing required data\r\n                messageToDeliver = message;\r\n            }\r\n\r\n            connectSocket(function() {\r\n                connection.socket.emit(connection.socketMessageEvent, messageToDeliver, callback);\r\n            });\r\n        };\r\n\r\n        function onUserLeft(remoteUserId) {\r\n            connection.deletePeer(remoteUserId);\r\n        }\r\n\r\n        mPeer.onUserLeft = onUserLeft;\r\n        mPeer.disconnectWith = function(remoteUserId, callback) {\r\n            if (connection.socket) {\r\n                connection.socket.emit('disconnect-with', remoteUserId, callback || function() {});\r\n            }\r\n\r\n            connection.deletePeer(remoteUserId);\r\n        };\r\n\r\n        connection.socketOptions = {\r\n            // 'force new connection': true, // For SocketIO version < 1.0\r\n            // 'forceNew': true, // For SocketIO version >= 1.0\r\n            'transport': 'polling' // fixing transport:unknown issues\r\n        };\r\n\r\n        function connectSocket(connectCallback) {\r\n            connection.socketAutoReConnect = true;\r\n\r\n            if (connection.socket) { // todo: check here readySate/etc. to make sure socket is still opened\r\n                if (connectCallback) {\r\n                    connectCallback(connection.socket);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (typeof SocketConnection === 'undefined') {\r\n                if (typeof FirebaseConnection !== 'undefined') {\r\n                    window.SocketConnection = FirebaseConnection;\r\n                } else if (typeof PubNubConnection !== 'undefined') {\r\n                    window.SocketConnection = PubNubConnection;\r\n                } else {\r\n                    throw 'SocketConnection.js seems missed.';\r\n                }\r\n            }\r\n\r\n            new SocketConnection(connection, function(s) {\r\n                if (connectCallback) {\r\n                    connectCallback(connection.socket);\r\n                }\r\n            });\r\n        }\r\n\r\n        // 1st paramter is roomid\r\n        // 2rd paramter is a callback function\r\n        connection.openOrJoin = function(roomid, callback) {\r\n            callback = callback || function() {};\r\n\r\n            connection.checkPresence(roomid, function(isRoomExist, roomid) {\r\n                if (isRoomExist) {\r\n                    connection.sessionid = roomid;\r\n\r\n                    var localPeerSdpConstraints = false;\r\n                    var remotePeerSdpConstraints = false;\r\n                    var isOneWay = !!connection.session.oneway;\r\n                    var isDataOnly = isData(connection.session);\r\n\r\n                    remotePeerSdpConstraints = {\r\n                        OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    }\r\n\r\n                    localPeerSdpConstraints = {\r\n                        OfferToReceiveAudio: isOneWay ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: isOneWay ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    }\r\n\r\n                    var connectionDescription = {\r\n                        remoteUserId: connection.sessionid,\r\n                        message: {\r\n                            newParticipationRequest: true,\r\n                            isOneWay: isOneWay,\r\n                            isDataOnly: isDataOnly,\r\n                            localPeerSdpConstraints: localPeerSdpConstraints,\r\n                            remotePeerSdpConstraints: remotePeerSdpConstraints\r\n                        },\r\n                        sender: connection.userid\r\n                    };\r\n\r\n                    beforeJoin(connectionDescription.message, function() {\r\n                        joinRoom(connectionDescription, callback);\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                connection.waitingForLocalMedia = true;\r\n                connection.isInitiator = true;\r\n\r\n                connection.sessionid = roomid || connection.sessionid;\r\n\r\n                if (isData(connection.session)) {\r\n                    openRoom(callback);\r\n                    return;\r\n                }\r\n\r\n                connection.captureUserMedia(function() {\r\n                    openRoom(callback);\r\n                });\r\n            });\r\n        };\r\n\r\n        // don't allow someone to join this person until he has the media\r\n        connection.waitingForLocalMedia = false;\r\n\r\n        connection.open = function(roomid, callback) {\r\n            callback = callback || function() {};\r\n\r\n            connection.waitingForLocalMedia = true;\r\n            connection.isInitiator = true;\r\n\r\n            connection.sessionid = roomid || connection.sessionid;\r\n\r\n            connectSocket(function() {\r\n                if (isData(connection.session)) {\r\n                    openRoom(callback);\r\n                    return;\r\n                }\r\n\r\n                connection.captureUserMedia(function() {\r\n                    openRoom(callback);\r\n                });\r\n            });\r\n        };\r\n\r\n        // this object keeps extra-data records for all connected users\r\n        // this object is never cleared so you can always access extra-data even if a user left\r\n        connection.peersBackup = {};\r\n\r\n        connection.deletePeer = function(remoteUserId) {\r\n            if (!remoteUserId || !connection.peers[remoteUserId]) {\r\n                return;\r\n            }\r\n\r\n            var eventObject = {\r\n                userid: remoteUserId,\r\n                extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {}\r\n            };\r\n\r\n            if (connection.peersBackup[eventObject.userid]) {\r\n                eventObject.extra = connection.peersBackup[eventObject.userid].extra;\r\n            }\r\n\r\n            connection.onleave(eventObject);\r\n\r\n            if (!!connection.peers[remoteUserId]) {\r\n                connection.peers[remoteUserId].streams.forEach(function(stream) {\r\n                    stream.stop();\r\n                });\r\n\r\n                var peer = connection.peers[remoteUserId].peer;\r\n                if (peer && peer.iceConnectionState !== 'closed') {\r\n                    try {\r\n                        peer.close();\r\n                    } catch (e) {}\r\n                }\r\n\r\n                if (connection.peers[remoteUserId]) {\r\n                    connection.peers[remoteUserId].peer = null;\r\n                    delete connection.peers[remoteUserId];\r\n                }\r\n            }\r\n        }\r\n\r\n        connection.rejoin = function(connectionDescription) {\r\n            if (connection.isInitiator || !connectionDescription || !Object.keys(connectionDescription).length) {\r\n                return;\r\n            }\r\n\r\n            var extra = {};\r\n\r\n            if (connection.peers[connectionDescription.remoteUserId]) {\r\n                extra = connection.peers[connectionDescription.remoteUserId].extra;\r\n                connection.deletePeer(connectionDescription.remoteUserId);\r\n            }\r\n\r\n            if (connectionDescription && connectionDescription.remoteUserId) {\r\n                connection.join(connectionDescription.remoteUserId);\r\n\r\n                connection.onReConnecting({\r\n                    userid: connectionDescription.remoteUserId,\r\n                    extra: extra\r\n                });\r\n            }\r\n        };\r\n\r\n        connection.join = function(remoteUserId, options) {\r\n            connection.sessionid = (remoteUserId ? remoteUserId.sessionid || remoteUserId.remoteUserId || remoteUserId : false) || connection.sessionid;\r\n            connection.sessionid += '';\r\n\r\n            var localPeerSdpConstraints = false;\r\n            var remotePeerSdpConstraints = false;\r\n            var isOneWay = false;\r\n            var isDataOnly = false;\r\n\r\n            if ((remoteUserId && remoteUserId.session) || !remoteUserId || typeof remoteUserId === 'string') {\r\n                var session = remoteUserId ? remoteUserId.session || connection.session : connection.session;\r\n\r\n                isOneWay = !!session.oneway;\r\n                isDataOnly = isData(session);\r\n\r\n                remotePeerSdpConstraints = {\r\n                    OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                    OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                };\r\n\r\n                localPeerSdpConstraints = {\r\n                    OfferToReceiveAudio: isOneWay ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                    OfferToReceiveVideo: isOneWay ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                };\r\n            }\r\n\r\n            options = options || {};\r\n\r\n            var cb = function() {};\r\n            if (typeof options === 'function') {\r\n                cb = options;\r\n                options = {};\r\n            }\r\n\r\n            if (typeof options.localPeerSdpConstraints !== 'undefined') {\r\n                localPeerSdpConstraints = options.localPeerSdpConstraints;\r\n            }\r\n\r\n            if (typeof options.remotePeerSdpConstraints !== 'undefined') {\r\n                remotePeerSdpConstraints = options.remotePeerSdpConstraints;\r\n            }\r\n\r\n            if (typeof options.isOneWay !== 'undefined') {\r\n                isOneWay = options.isOneWay;\r\n            }\r\n\r\n            if (typeof options.isDataOnly !== 'undefined') {\r\n                isDataOnly = options.isDataOnly;\r\n            }\r\n\r\n            var connectionDescription = {\r\n                remoteUserId: connection.sessionid,\r\n                message: {\r\n                    newParticipationRequest: true,\r\n                    isOneWay: isOneWay,\r\n                    isDataOnly: isDataOnly,\r\n                    localPeerSdpConstraints: localPeerSdpConstraints,\r\n                    remotePeerSdpConstraints: remotePeerSdpConstraints\r\n                },\r\n                sender: connection.userid\r\n            };\r\n\r\n            beforeJoin(connectionDescription.message, function() {\r\n                connectSocket(function() {\r\n                    joinRoom(connectionDescription, cb);\r\n                });\r\n            });\r\n            return connectionDescription;\r\n        };\r\n\r\n        function joinRoom(connectionDescription, cb) {\r\n            connection.socket.emit('join-room', {\r\n                sessionid: connection.sessionid,\r\n                session: connection.session,\r\n                mediaConstraints: connection.mediaConstraints,\r\n                sdpConstraints: connection.sdpConstraints,\r\n                streams: getStreamInfoForAdmin(),\r\n                extra: connection.extra,\r\n                password: typeof connection.password !== 'undefined' && typeof connection.password !== 'object' ? connection.password : ''\r\n            }, function(isRoomJoined, error) {\r\n                if (isRoomJoined === true) {\r\n                    if (connection.enableLogs) {\r\n                        console.log('isRoomJoined: ', isRoomJoined, ' roomid: ', connection.sessionid);\r\n                    }\r\n\r\n                    if (!!connection.peers[connection.sessionid]) {\r\n                        // on socket disconnect & reconnect\r\n                        return;\r\n                    }\r\n\r\n                    mPeer.onNegotiationNeeded(connectionDescription);\r\n                }\r\n\r\n                if (isRoomJoined === false) {\r\n                    if (connection.enableLogs) {\r\n                        console.warn('isRoomJoined: ', error, ' roomid: ', connection.sessionid);\r\n                    }\r\n\r\n                    // [disabled] retry after 3 seconds\r\n                    false && setTimeout(function() {\r\n                        joinRoom(connectionDescription, cb);\r\n                    }, 3000);\r\n                }\r\n\r\n                cb(isRoomJoined, connection.sessionid, error);\r\n            });\r\n        }\r\n\r\n        connection.publicRoomIdentifier = '';\r\n\r\n        function openRoom(callback) {\r\n            if (connection.enableLogs) {\r\n                console.log('Sending open-room signal to socket.io');\r\n            }\r\n\r\n            connection.waitingForLocalMedia = false;\r\n            connection.socket.emit('open-room', {\r\n                sessionid: connection.sessionid,\r\n                session: connection.session,\r\n                mediaConstraints: connection.mediaConstraints,\r\n                sdpConstraints: connection.sdpConstraints,\r\n                streams: getStreamInfoForAdmin(),\r\n                extra: connection.extra,\r\n                identifier: connection.publicRoomIdentifier,\r\n                password: typeof connection.password !== 'undefined' && typeof connection.password !== 'object' ? connection.password : ''\r\n            }, function(isRoomOpened, error) {\r\n                if (isRoomOpened === true) {\r\n                    if (connection.enableLogs) {\r\n                        console.log('isRoomOpened: ', isRoomOpened, ' roomid: ', connection.sessionid);\r\n                    }\r\n                    callback(isRoomOpened, connection.sessionid);\r\n                }\r\n\r\n                if (isRoomOpened === false) {\r\n                    if (connection.enableLogs) {\r\n                        console.warn('isRoomOpened: ', error, ' roomid: ', connection.sessionid);\r\n                    }\r\n\r\n                    callback(isRoomOpened, connection.sessionid, error);\r\n                }\r\n            });\r\n        }\r\n\r\n        function getStreamInfoForAdmin() {\r\n            try {\r\n                return connection.streamEvents.selectAll('local').map(function(event) {\r\n                    return {\r\n                        streamid: event.streamid,\r\n                        tracks: event.stream.getTracks().length\r\n                    };\r\n                });\r\n            } catch (e) {\r\n                return [];\r\n            }\r\n        }\r\n\r\n        function beforeJoin(userPreferences, callback) {\r\n            if (connection.dontCaptureUserMedia || userPreferences.isDataOnly) {\r\n                callback();\r\n                return;\r\n            }\r\n\r\n            var localMediaConstraints = {};\r\n\r\n            if (userPreferences.localPeerSdpConstraints.OfferToReceiveAudio) {\r\n                localMediaConstraints.audio = connection.mediaConstraints.audio;\r\n            }\r\n\r\n            if (userPreferences.localPeerSdpConstraints.OfferToReceiveVideo) {\r\n                localMediaConstraints.video = connection.mediaConstraints.video;\r\n            }\r\n\r\n            var session = userPreferences.session || connection.session;\r\n\r\n            if (session.oneway && session.audio !== 'two-way' && session.video !== 'two-way' && session.screen !== 'two-way') {\r\n                callback();\r\n                return;\r\n            }\r\n\r\n            if (session.oneway && session.audio && session.audio === 'two-way') {\r\n                session = {\r\n                    audio: true\r\n                };\r\n            }\r\n\r\n            if (session.audio || session.video || session.screen) {\r\n                if (session.screen) {\r\n                    if (DetectRTC.browser.name === 'Edge') {\r\n                        navigator.getDisplayMedia({\r\n                            video: true,\r\n                            audio: isAudioPlusTab(connection)\r\n                        }).then(function(screen) {\r\n                            screen.isScreen = true;\r\n                            mPeer.onGettingLocalMedia(screen);\r\n\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                connection.invokeGetUserMedia(null, callback);\r\n                            } else {\r\n                                callback(screen);\r\n                            }\r\n                        }, function(error) {\r\n                            console.error('Unable to capture screen on Edge. HTTPs and version 17+ is required.');\r\n                        });\r\n                    } else {\r\n                        connection.invokeGetUserMedia({\r\n                            audio: isAudioPlusTab(connection),\r\n                            video: true,\r\n                            isScreen: true\r\n                        }, (session.audio || session.video) && !isAudioPlusTab(connection) ? connection.invokeGetUserMedia(null, callback) : callback);\r\n                    }\r\n                } else if (session.audio || session.video) {\r\n                    connection.invokeGetUserMedia(null, callback, session);\r\n                }\r\n            }\r\n        }\r\n\r\n        connection.getUserMedia = connection.captureUserMedia = function(callback, sessionForced) {\r\n            callback = callback || function() {};\r\n            var session = sessionForced || connection.session;\r\n\r\n            if (connection.dontCaptureUserMedia || isData(session)) {\r\n                callback();\r\n                return;\r\n            }\r\n\r\n            if (session.audio || session.video || session.screen) {\r\n                if (session.screen) {\r\n                    if (DetectRTC.browser.name === 'Edge') {\r\n                        navigator.getDisplayMedia({\r\n                            video: true,\r\n                            audio: isAudioPlusTab(connection)\r\n                        }).then(function(screen) {\r\n                            screen.isScreen = true;\r\n                            mPeer.onGettingLocalMedia(screen);\r\n\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                var nonScreenSession = {};\r\n                                for (var s in session) {\r\n                                    if (s !== 'screen') {\r\n                                        nonScreenSession[s] = session[s];\r\n                                    }\r\n                                }\r\n                                connection.invokeGetUserMedia(sessionForced, callback, nonScreenSession);\r\n                                return;\r\n                            }\r\n                            callback(screen);\r\n                        }, function(error) {\r\n                            console.error('Unable to capture screen on Edge. HTTPs and version 17+ is required.');\r\n                        });\r\n                    } else {\r\n                        connection.invokeGetUserMedia({\r\n                            audio: isAudioPlusTab(connection),\r\n                            video: true,\r\n                            isScreen: true\r\n                        }, function(stream) {\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                var nonScreenSession = {};\r\n                                for (var s in session) {\r\n                                    if (s !== 'screen') {\r\n                                        nonScreenSession[s] = session[s];\r\n                                    }\r\n                                }\r\n                                connection.invokeGetUserMedia(sessionForced, callback, nonScreenSession);\r\n                                return;\r\n                            }\r\n                            callback(stream);\r\n                        });\r\n                    }\r\n                } else if (session.audio || session.video) {\r\n                    connection.invokeGetUserMedia(sessionForced, callback, session);\r\n                }\r\n            }\r\n        };\r\n\r\n        connection.onbeforeunload = function(arg1, dontCloseSocket) {\r\n            if (!connection.closeBeforeUnload) {\r\n                return;\r\n            }\r\n\r\n            connection.peers.getAllParticipants().forEach(function(participant) {\r\n                mPeer.onNegotiationNeeded({\r\n                    userLeft: true\r\n                }, participant);\r\n\r\n                if (connection.peers[participant] && connection.peers[participant].peer) {\r\n                    connection.peers[participant].peer.close();\r\n                }\r\n\r\n                delete connection.peers[participant];\r\n            });\r\n\r\n            if (!dontCloseSocket) {\r\n                connection.closeSocket();\r\n            }\r\n\r\n            connection.isInitiator = false;\r\n        };\r\n\r\n        if (!window.ignoreBeforeUnload) {\r\n            // user can implement its own version of window.onbeforeunload\r\n            connection.closeBeforeUnload = true;\r\n            window.addEventListener('beforeunload', connection.onbeforeunload, false);\r\n        } else {\r\n            connection.closeBeforeUnload = false;\r\n        }\r\n\r\n        connection.userid = getRandomString();\r\n        connection.changeUserId = function(newUserId, callback) {\r\n            callback = callback || function() {};\r\n            connection.userid = newUserId || getRandomString();\r\n            connection.socket.emit('changed-uuid', connection.userid, callback);\r\n        };\r\n\r\n        connection.extra = {};\r\n        connection.attachStreams = [];\r\n\r\n        connection.session = {\r\n            audio: true,\r\n            video: true\r\n        };\r\n\r\n        connection.enableFileSharing = false;\r\n\r\n        // all values in kbps\r\n        connection.bandwidth = {\r\n            screen: false,\r\n            audio: false,\r\n            video: false\r\n        };\r\n\r\n        connection.codecs = {\r\n            audio: 'opus',\r\n            video: 'VP9'\r\n        };\r\n\r\n        connection.processSdp = function(sdp) {\r\n            // ignore SDP modification if unified-pan is supported\r\n            if (isUnifiedPlanSupportedDefault()) {\r\n                return sdp;\r\n            }\r\n\r\n            if (DetectRTC.browser.name === 'Safari') {\r\n                return sdp;\r\n            }\r\n\r\n            if (connection.codecs.video.toUpperCase() === 'VP8') {\r\n                sdp = CodecsHandler.preferCodec(sdp, 'vp8');\r\n            }\r\n\r\n            if (connection.codecs.video.toUpperCase() === 'VP9') {\r\n                sdp = CodecsHandler.preferCodec(sdp, 'vp9');\r\n            }\r\n\r\n            if (connection.codecs.video.toUpperCase() === 'H264') {\r\n                sdp = CodecsHandler.preferCodec(sdp, 'h264');\r\n            }\r\n\r\n            if (connection.codecs.audio === 'G722') {\r\n                sdp = CodecsHandler.removeNonG722(sdp);\r\n            }\r\n\r\n            if (DetectRTC.browser.name === 'Firefox') {\r\n                return sdp;\r\n            }\r\n\r\n            if (connection.bandwidth.video || connection.bandwidth.screen) {\r\n                sdp = CodecsHandler.setApplicationSpecificBandwidth(sdp, connection.bandwidth, !!connection.session.screen);\r\n            }\r\n\r\n            if (connection.bandwidth.video) {\r\n                sdp = CodecsHandler.setVideoBitrates(sdp, {\r\n                    min: connection.bandwidth.video * 8 * 1024,\r\n                    max: connection.bandwidth.video * 8 * 1024\r\n                });\r\n            }\r\n\r\n            if (connection.bandwidth.audio) {\r\n                sdp = CodecsHandler.setOpusAttributes(sdp, {\r\n                    maxaveragebitrate: connection.bandwidth.audio * 8 * 1024,\r\n                    maxplaybackrate: connection.bandwidth.audio * 8 * 1024,\r\n                    stereo: 1,\r\n                    maxptime: 3\r\n                });\r\n            }\r\n\r\n            return sdp;\r\n        };\r\n\r\n        if (typeof CodecsHandler !== 'undefined') {\r\n            connection.BandwidthHandler = connection.CodecsHandler = CodecsHandler;\r\n        }\r\n\r\n        connection.mediaConstraints = {\r\n            audio: {\r\n                mandatory: {},\r\n                optional: connection.bandwidth.audio ? [{\r\n                    bandwidth: connection.bandwidth.audio * 8 * 1024 || 128 * 8 * 1024\r\n                }] : []\r\n            },\r\n            video: {\r\n                mandatory: {},\r\n                optional: connection.bandwidth.video ? [{\r\n                    bandwidth: connection.bandwidth.video * 8 * 1024 || 128 * 8 * 1024\r\n                }, {\r\n                    facingMode: 'user'\r\n                }] : [{\r\n                    facingMode: 'user'\r\n                }]\r\n            }\r\n        };\r\n\r\n        if (DetectRTC.browser.name === 'Firefox') {\r\n            connection.mediaConstraints = {\r\n                audio: true,\r\n                video: true\r\n            };\r\n        }\r\n\r\n        if (!forceOptions.useDefaultDevices && !DetectRTC.isMobileDevice) {\r\n            DetectRTC.load(function() {\r\n                var lastAudioDevice, lastVideoDevice;\r\n                // it will force RTCMultiConnection to capture last-devices\r\n                // i.e. if external microphone is attached to system, we should prefer it over built-in devices.\r\n                DetectRTC.MediaDevices.forEach(function(device) {\r\n                    if (device.kind === 'audioinput' && connection.mediaConstraints.audio !== false) {\r\n                        lastAudioDevice = device;\r\n                    }\r\n\r\n                    if (device.kind === 'videoinput' && connection.mediaConstraints.video !== false) {\r\n                        lastVideoDevice = device;\r\n                    }\r\n                });\r\n\r\n                if (lastAudioDevice) {\r\n                    if (DetectRTC.browser.name === 'Firefox') {\r\n                        if (connection.mediaConstraints.audio !== true) {\r\n                            connection.mediaConstraints.audio.deviceId = lastAudioDevice.id;\r\n                        } else {\r\n                            connection.mediaConstraints.audio = {\r\n                                deviceId: lastAudioDevice.id\r\n                            }\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    if (connection.mediaConstraints.audio == true) {\r\n                        connection.mediaConstraints.audio = {\r\n                            mandatory: {},\r\n                            optional: []\r\n                        }\r\n                    }\r\n\r\n                    if (!connection.mediaConstraints.audio.optional) {\r\n                        connection.mediaConstraints.audio.optional = [];\r\n                    }\r\n\r\n                    var optional = [{\r\n                        sourceId: lastAudioDevice.id\r\n                    }];\r\n\r\n                    connection.mediaConstraints.audio.optional = optional.concat(connection.mediaConstraints.audio.optional);\r\n                }\r\n\r\n                if (lastVideoDevice) {\r\n                    if (DetectRTC.browser.name === 'Firefox') {\r\n                        if (connection.mediaConstraints.video !== true) {\r\n                            connection.mediaConstraints.video.deviceId = lastVideoDevice.id;\r\n                        } else {\r\n                            connection.mediaConstraints.video = {\r\n                                deviceId: lastVideoDevice.id\r\n                            }\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    if (connection.mediaConstraints.video == true) {\r\n                        connection.mediaConstraints.video = {\r\n                            mandatory: {},\r\n                            optional: []\r\n                        }\r\n                    }\r\n\r\n                    if (!connection.mediaConstraints.video.optional) {\r\n                        connection.mediaConstraints.video.optional = [];\r\n                    }\r\n\r\n                    var optional = [{\r\n                        sourceId: lastVideoDevice.id\r\n                    }];\r\n\r\n                    connection.mediaConstraints.video.optional = optional.concat(connection.mediaConstraints.video.optional);\r\n                }\r\n            });\r\n        }\r\n\r\n        connection.sdpConstraints = {\r\n            mandatory: {\r\n                OfferToReceiveAudio: true,\r\n                OfferToReceiveVideo: true\r\n            },\r\n            optional: [{\r\n                VoiceActivityDetection: false\r\n            }]\r\n        };\r\n\r\n        connection.sdpSemantics = null; // \"unified-plan\" or \"plan-b\", ref: webrtc.org/web-apis/chrome/unified-plan/\r\n        connection.iceCandidatePoolSize = null; // 0\r\n        connection.bundlePolicy = null; // max-bundle\r\n        connection.rtcpMuxPolicy = null; // \"require\" or \"negotiate\"\r\n        connection.iceTransportPolicy = null; // \"relay\" or \"all\"\r\n        connection.optionalArgument = {\r\n            optional: [{\r\n                DtlsSrtpKeyAgreement: true\r\n            }, {\r\n                googImprovedWifiBwe: true\r\n            }, {\r\n                googScreencastMinBitrate: 300\r\n            }, {\r\n                googIPv6: true\r\n            }, {\r\n                googDscp: true\r\n            }, {\r\n                googCpuUnderuseThreshold: 55\r\n            }, {\r\n                googCpuOveruseThreshold: 85\r\n            }, {\r\n                googSuspendBelowMinBitrate: true\r\n            }, {\r\n                googCpuOveruseDetection: true\r\n            }],\r\n            mandatory: {}\r\n        };\r\n\r\n        connection.iceServers = IceServersHandler.getIceServers(connection);\r\n\r\n        connection.candidates = {\r\n            host: true,\r\n            stun: true,\r\n            turn: true\r\n        };\r\n\r\n        connection.iceProtocols = {\r\n            tcp: true,\r\n            udp: true\r\n        };\r\n\r\n        // EVENTs\r\n        connection.onopen = function(event) {\r\n            if (!!connection.enableLogs) {\r\n                console.info('Data connection has been opened between you & ', event.userid);\r\n            }\r\n        };\r\n\r\n        connection.onclose = function(event) {\r\n            if (!!connection.enableLogs) {\r\n                console.warn('Data connection has been closed between you & ', event.userid);\r\n            }\r\n        };\r\n\r\n        connection.onerror = function(error) {\r\n            if (!!connection.enableLogs) {\r\n                console.error(error.userid, 'data-error', error);\r\n            }\r\n        };\r\n\r\n        connection.onmessage = function(event) {\r\n            if (!!connection.enableLogs) {\r\n                console.debug('data-message', event.userid, event.data);\r\n            }\r\n        };\r\n\r\n        connection.send = function(data, remoteUserId) {\r\n            connection.peers.send(data, remoteUserId);\r\n        };\r\n\r\n        connection.close = connection.disconnect = connection.leave = function() {\r\n            connection.onbeforeunload(false, true);\r\n        };\r\n\r\n        connection.closeEntireSession = function(callback) {\r\n            callback = callback || function() {};\r\n            connection.socket.emit('close-entire-session', function looper() {\r\n                if (connection.getAllParticipants().length) {\r\n                    setTimeout(looper, 100);\r\n                    return;\r\n                }\r\n\r\n                connection.onEntireSessionClosed({\r\n                    sessionid: connection.sessionid,\r\n                    userid: connection.userid,\r\n                    extra: connection.extra\r\n                });\r\n\r\n                connection.changeUserId(null, function() {\r\n                    connection.close();\r\n                    callback();\r\n                });\r\n            });\r\n        };\r\n\r\n        connection.onEntireSessionClosed = function(event) {\r\n            if (!connection.enableLogs) return;\r\n            console.info('Entire session is closed: ', event.sessionid, event.extra);\r\n        };\r\n\r\n        connection.onstream = function(e) {\r\n            var parentNode = connection.videosContainer;\r\n            parentNode.insertBefore(e.mediaElement, parentNode.firstChild);\r\n            var played = e.mediaElement.play();\r\n\r\n            if (typeof played !== 'undefined') {\r\n                played.catch(function() {\r\n                    /*** iOS 11 doesn't allow automatic play and rejects ***/\r\n                }).then(function() {\r\n                    setTimeout(function() {\r\n                        e.mediaElement.play();\r\n                    }, 2000);\r\n                });\r\n                return;\r\n            }\r\n\r\n            setTimeout(function() {\r\n                e.mediaElement.play();\r\n            }, 2000);\r\n        };\r\n\r\n        connection.onstreamended = function(e) {\r\n            if (!e.mediaElement) {\r\n                e.mediaElement = document.getElementById(e.streamid);\r\n            }\r\n\r\n            if (!e.mediaElement || !e.mediaElement.parentNode) {\r\n                return;\r\n            }\r\n\r\n            e.mediaElement.parentNode.removeChild(e.mediaElement);\r\n        };\r\n\r\n        connection.direction = 'many-to-many';\r\n\r\n        connection.removeStream = function(streamid, remoteUserId) {\r\n            var stream;\r\n            connection.attachStreams.forEach(function(localStream) {\r\n                if (localStream.id === streamid) {\r\n                    stream = localStream;\r\n                }\r\n            });\r\n\r\n            if (!stream) {\r\n                console.warn('No such stream exist.', streamid);\r\n                return;\r\n            }\r\n\r\n            connection.peers.getAllParticipants().forEach(function(participant) {\r\n                if (remoteUserId && participant !== remoteUserId) {\r\n                    return;\r\n                }\r\n\r\n                var user = connection.peers[participant];\r\n                try {\r\n                    user.peer.removeStream(stream);\r\n                } catch (e) {}\r\n            });\r\n\r\n            connection.renegotiate();\r\n        };\r\n\r\n        connection.addStream = function(session, remoteUserId) {\r\n            if (!!session.getTracks) {\r\n                if (connection.attachStreams.indexOf(session) === -1) {\r\n                    if (!session.streamid) {\r\n                        session.streamid = session.id;\r\n                    }\r\n\r\n                    connection.attachStreams.push(session);\r\n                }\r\n                connection.renegotiate(remoteUserId);\r\n                return;\r\n            }\r\n\r\n            if (isData(session)) {\r\n                connection.renegotiate(remoteUserId);\r\n                return;\r\n            }\r\n\r\n            if (session.audio || session.video || session.screen) {\r\n                if (session.screen) {\r\n                    if (DetectRTC.browser.name === 'Edge') {\r\n                        navigator.getDisplayMedia({\r\n                            video: true,\r\n                            audio: isAudioPlusTab(connection)\r\n                        }).then(function(screen) {\r\n                            screen.isScreen = true;\r\n                            mPeer.onGettingLocalMedia(screen);\r\n\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                connection.invokeGetUserMedia(null, function(stream) {\r\n                                    gumCallback(stream);\r\n                                });\r\n                            } else {\r\n                                gumCallback(screen);\r\n                            }\r\n                        }, function(error) {\r\n                            console.error('Unable to capture screen on Edge. HTTPs and version 17+ is required.');\r\n                        });\r\n                    } else {\r\n                        connection.invokeGetUserMedia({\r\n                            audio: isAudioPlusTab(connection),\r\n                            video: true,\r\n                            isScreen: true\r\n                        }, function(stream) {\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                connection.invokeGetUserMedia(null, function(stream) {\r\n                                    gumCallback(stream);\r\n                                });\r\n                            } else {\r\n                                gumCallback(stream);\r\n                            }\r\n                        });\r\n                    }\r\n                } else if (session.audio || session.video) {\r\n                    connection.invokeGetUserMedia(null, gumCallback);\r\n                }\r\n            }\r\n\r\n            function gumCallback(stream) {\r\n                if (session.streamCallback) {\r\n                    session.streamCallback(stream);\r\n                }\r\n\r\n                connection.renegotiate(remoteUserId);\r\n            }\r\n        };\r\n\r\n        connection.invokeGetUserMedia = function(localMediaConstraints, callback, session) {\r\n            if (!session) {\r\n                session = connection.session;\r\n            }\r\n\r\n            if (!localMediaConstraints) {\r\n                localMediaConstraints = connection.mediaConstraints;\r\n            }\r\n\r\n            getUserMediaHandler({\r\n                onGettingLocalMedia: function(stream) {\r\n                    var videoConstraints = localMediaConstraints.video;\r\n                    if (videoConstraints) {\r\n                        if (videoConstraints.mediaSource || videoConstraints.mozMediaSource) {\r\n                            stream.isScreen = true;\r\n                        } else if (videoConstraints.mandatory && videoConstraints.mandatory.chromeMediaSource) {\r\n                            stream.isScreen = true;\r\n                        }\r\n                    }\r\n\r\n                    if (!stream.isScreen) {\r\n                        stream.isVideo = !!getTracks(stream, 'video').length;\r\n                        stream.isAudio = !stream.isVideo && getTracks(stream, 'audio').length;\r\n                    }\r\n\r\n                    mPeer.onGettingLocalMedia(stream, function() {\r\n                        if (typeof callback === 'function') {\r\n                            callback(stream);\r\n                        }\r\n                    });\r\n                },\r\n                onLocalMediaError: function(error, constraints) {\r\n                    mPeer.onLocalMediaError(error, constraints);\r\n                },\r\n                localMediaConstraints: localMediaConstraints || {\r\n                    audio: session.audio ? localMediaConstraints.audio : false,\r\n                    video: session.video ? localMediaConstraints.video : false\r\n                }\r\n            });\r\n        };\r\n\r\n        function applyConstraints(stream, mediaConstraints) {\r\n            if (!stream) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('No stream to applyConstraints.');\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (mediaConstraints.audio) {\r\n                getTracks(stream, 'audio').forEach(function(track) {\r\n                    track.applyConstraints(mediaConstraints.audio);\r\n                });\r\n            }\r\n\r\n            if (mediaConstraints.video) {\r\n                getTracks(stream, 'video').forEach(function(track) {\r\n                    track.applyConstraints(mediaConstraints.video);\r\n                });\r\n            }\r\n        }\r\n\r\n        connection.applyConstraints = function(mediaConstraints, streamid) {\r\n            if (!MediaStreamTrack || !MediaStreamTrack.prototype.applyConstraints) {\r\n                alert('track.applyConstraints is NOT supported in your browser.');\r\n                return;\r\n            }\r\n\r\n            if (streamid) {\r\n                var stream;\r\n                if (connection.streamEvents[streamid]) {\r\n                    stream = connection.streamEvents[streamid].stream;\r\n                }\r\n                applyConstraints(stream, mediaConstraints);\r\n                return;\r\n            }\r\n\r\n            connection.attachStreams.forEach(function(stream) {\r\n                applyConstraints(stream, mediaConstraints);\r\n            });\r\n        };\r\n\r\n        function replaceTrack(track, remoteUserId, isVideoTrack) {\r\n            if (remoteUserId) {\r\n                mPeer.replaceTrack(track, remoteUserId, isVideoTrack);\r\n                return;\r\n            }\r\n\r\n            connection.peers.getAllParticipants().forEach(function(participant) {\r\n                mPeer.replaceTrack(track, participant, isVideoTrack);\r\n            });\r\n        }\r\n\r\n        connection.replaceTrack = function(session, remoteUserId, isVideoTrack) {\r\n            session = session || {};\r\n\r\n            if (!RTCPeerConnection.prototype.getSenders) {\r\n                connection.addStream(session);\r\n                return;\r\n            }\r\n\r\n            if (session instanceof MediaStreamTrack) {\r\n                replaceTrack(session, remoteUserId, isVideoTrack);\r\n                return;\r\n            }\r\n\r\n            if (session instanceof MediaStream) {\r\n                if (getTracks(session, 'video').length) {\r\n                    replaceTrack(getTracks(session, 'video')[0], remoteUserId, true);\r\n                }\r\n\r\n                if (getTracks(session, 'audio').length) {\r\n                    replaceTrack(getTracks(session, 'audio')[0], remoteUserId, false);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (isData(session)) {\r\n                throw 'connection.replaceTrack requires audio and/or video and/or screen.';\r\n                return;\r\n            }\r\n\r\n            if (session.audio || session.video || session.screen) {\r\n                if (session.screen) {\r\n                    if (DetectRTC.browser.name === 'Edge') {\r\n                        navigator.getDisplayMedia({\r\n                            video: true,\r\n                            audio: isAudioPlusTab(connection)\r\n                        }).then(function(screen) {\r\n                            screen.isScreen = true;\r\n                            mPeer.onGettingLocalMedia(screen);\r\n\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                connection.invokeGetUserMedia(null, gumCallback);\r\n                            } else {\r\n                                gumCallback(screen);\r\n                            }\r\n                        }, function(error) {\r\n                            console.error('Unable to capture screen on Edge. HTTPs and version 17+ is required.');\r\n                        });\r\n                    } else {\r\n                        connection.invokeGetUserMedia({\r\n                            audio: isAudioPlusTab(connection),\r\n                            video: true,\r\n                            isScreen: true\r\n                        }, (session.audio || session.video) && !isAudioPlusTab(connection) ? connection.invokeGetUserMedia(null, gumCallback) : gumCallback);\r\n                    }\r\n                } else if (session.audio || session.video) {\r\n                    connection.invokeGetUserMedia(null, gumCallback);\r\n                }\r\n            }\r\n\r\n            function gumCallback(stream) {\r\n                connection.replaceTrack(stream, remoteUserId, isVideoTrack || session.video || session.screen);\r\n            }\r\n        };\r\n\r\n        connection.resetTrack = function(remoteUsersIds, isVideoTrack) {\r\n            if (!remoteUsersIds) {\r\n                remoteUsersIds = connection.getAllParticipants();\r\n            }\r\n\r\n            if (typeof remoteUsersIds == 'string') {\r\n                remoteUsersIds = [remoteUsersIds];\r\n            }\r\n\r\n            remoteUsersIds.forEach(function(participant) {\r\n                var peer = connection.peers[participant].peer;\r\n\r\n                if ((typeof isVideoTrack === 'undefined' || isVideoTrack === true) && peer.lastVideoTrack) {\r\n                    connection.replaceTrack(peer.lastVideoTrack, participant, true);\r\n                }\r\n\r\n                if ((typeof isVideoTrack === 'undefined' || isVideoTrack === false) && peer.lastAudioTrack) {\r\n                    connection.replaceTrack(peer.lastAudioTrack, participant, false);\r\n                }\r\n            });\r\n        };\r\n\r\n        connection.renegotiate = function(remoteUserId) {\r\n            if (remoteUserId) {\r\n                mPeer.renegotiatePeer(remoteUserId);\r\n                return;\r\n            }\r\n\r\n            connection.peers.getAllParticipants().forEach(function(participant) {\r\n                mPeer.renegotiatePeer(participant);\r\n            });\r\n        };\r\n\r\n        connection.setStreamEndHandler = function(stream, isRemote) {\r\n            if (!stream || !stream.addEventListener) return;\r\n\r\n            isRemote = !!isRemote;\r\n\r\n            if (stream.alreadySetEndHandler) {\r\n                return;\r\n            }\r\n            stream.alreadySetEndHandler = true;\r\n\r\n            var streamEndedEvent = 'ended';\r\n\r\n            if ('oninactive' in stream) {\r\n                streamEndedEvent = 'inactive';\r\n            }\r\n\r\n            stream.addEventListener(streamEndedEvent, function() {\r\n                if (stream.idInstance) {\r\n                    currentUserMediaRequest.remove(stream.idInstance);\r\n                }\r\n\r\n                if (!isRemote) {\r\n                    // reset attachStreams\r\n                    var streams = [];\r\n                    connection.attachStreams.forEach(function(s) {\r\n                        if (s.id != stream.id) {\r\n                            streams.push(s);\r\n                        }\r\n                    });\r\n                    connection.attachStreams = streams;\r\n                }\r\n\r\n                // connection.renegotiate();\r\n\r\n                var streamEvent = connection.streamEvents[stream.streamid];\r\n                if (!streamEvent) {\r\n                    streamEvent = {\r\n                        stream: stream,\r\n                        streamid: stream.streamid,\r\n                        type: isRemote ? 'remote' : 'local',\r\n                        userid: connection.userid,\r\n                        extra: connection.extra,\r\n                        mediaElement: connection.streamEvents[stream.streamid] ? connection.streamEvents[stream.streamid].mediaElement : null\r\n                    };\r\n                }\r\n\r\n                if (isRemote && connection.peers[streamEvent.userid]) {\r\n                    // reset remote \"streams\"\r\n                    var peer = connection.peers[streamEvent.userid].peer;\r\n                    var streams = [];\r\n                    peer.getRemoteStreams().forEach(function(s) {\r\n                        if (s.id != stream.id) {\r\n                            streams.push(s);\r\n                        }\r\n                    });\r\n                    connection.peers[streamEvent.userid].streams = streams;\r\n                }\r\n\r\n                if (streamEvent.userid === connection.userid && streamEvent.type === 'remote') {\r\n                    return;\r\n                }\r\n\r\n                if (connection.peersBackup[streamEvent.userid]) {\r\n                    streamEvent.extra = connection.peersBackup[streamEvent.userid].extra;\r\n                }\r\n\r\n                connection.onstreamended(streamEvent);\r\n\r\n                delete connection.streamEvents[stream.streamid];\r\n            }, false);\r\n        };\r\n\r\n        connection.onMediaError = function(error, constraints) {\r\n            if (!!connection.enableLogs) {\r\n                console.error(error, constraints);\r\n            }\r\n        };\r\n\r\n        connection.autoCloseEntireSession = false;\r\n\r\n        connection.filesContainer = connection.videosContainer = document.body || document.documentElement;\r\n        connection.isInitiator = false;\r\n\r\n        connection.shareFile = mPeer.shareFile;\r\n        if (typeof FileProgressBarHandler !== 'undefined') {\r\n            FileProgressBarHandler.handle(connection);\r\n        }\r\n\r\n        if (typeof TranslationHandler !== 'undefined') {\r\n            TranslationHandler.handle(connection);\r\n        }\r\n\r\n        connection.token = getRandomString;\r\n\r\n        connection.onNewParticipant = function(participantId, userPreferences) {\r\n            connection.acceptParticipationRequest(participantId, userPreferences);\r\n        };\r\n\r\n        connection.acceptParticipationRequest = function(participantId, userPreferences) {\r\n            if (userPreferences.successCallback) {\r\n                userPreferences.successCallback();\r\n                delete userPreferences.successCallback;\r\n            }\r\n\r\n            mPeer.createNewPeer(participantId, userPreferences);\r\n        };\r\n\r\n        if (typeof StreamsHandler !== 'undefined') {\r\n            connection.StreamsHandler = StreamsHandler;\r\n        }\r\n\r\n        connection.onleave = function(userid) {};\r\n\r\n        connection.invokeSelectFileDialog = function(callback) {\r\n            var selector = new FileSelector();\r\n            selector.accept = '*.*';\r\n            selector.selectSingleFile(callback);\r\n        };\r\n\r\n        connection.onmute = function(e) {\r\n            if (!e || !e.mediaElement) {\r\n                return;\r\n            }\r\n\r\n            if (e.muteType === 'both' || e.muteType === 'video') {\r\n                e.mediaElement.src = null;\r\n                var paused = e.mediaElement.pause();\r\n                if (typeof paused !== 'undefined') {\r\n                    paused.then(function() {\r\n                        e.mediaElement.poster = e.snapshot || 'https://cdn.webrtc-experiment.com/images/muted.png';\r\n                    });\r\n                } else {\r\n                    e.mediaElement.poster = e.snapshot || 'https://cdn.webrtc-experiment.com/images/muted.png';\r\n                }\r\n            } else if (e.muteType === 'audio') {\r\n                e.mediaElement.muted = true;\r\n            }\r\n        };\r\n\r\n        connection.onunmute = function(e) {\r\n            if (!e || !e.mediaElement || !e.stream) {\r\n                return;\r\n            }\r\n\r\n            if (e.unmuteType === 'both' || e.unmuteType === 'video') {\r\n                e.mediaElement.poster = null;\r\n                e.mediaElement.srcObject = e.stream;\r\n                e.mediaElement.play();\r\n            } else if (e.unmuteType === 'audio') {\r\n                e.mediaElement.muted = false;\r\n            }\r\n        };\r\n\r\n        connection.onExtraDataUpdated = function(event) {\r\n            event.status = 'online';\r\n            connection.onUserStatusChanged(event, true);\r\n        };\r\n\r\n        connection.getAllParticipants = function(sender) {\r\n            return connection.peers.getAllParticipants(sender);\r\n        };\r\n\r\n        if (typeof StreamsHandler !== 'undefined') {\r\n            StreamsHandler.onSyncNeeded = function(streamid, action, type) {\r\n                connection.peers.getAllParticipants().forEach(function(participant) {\r\n                    mPeer.onNegotiationNeeded({\r\n                        streamid: streamid,\r\n                        action: action,\r\n                        streamSyncNeeded: true,\r\n                        type: type || 'both'\r\n                    }, participant);\r\n                });\r\n            };\r\n        }\r\n\r\n        connection.connectSocket = function(callback) {\r\n            connectSocket(callback);\r\n        };\r\n\r\n        connection.closeSocket = function() {\r\n            try {\r\n                io.sockets = {};\r\n            } catch (e) {};\r\n\r\n            if (!connection.socket) return;\r\n\r\n            if (typeof connection.socket.disconnect === 'function') {\r\n                connection.socket.disconnect();\r\n            }\r\n\r\n            if (typeof connection.socket.resetProps === 'function') {\r\n                connection.socket.resetProps();\r\n            }\r\n\r\n            connection.socket = null;\r\n        };\r\n\r\n        connection.getSocket = function(callback) {\r\n            if (!callback && connection.enableLogs) {\r\n                console.warn('getSocket.callback paramter is required.');\r\n            }\r\n\r\n            callback = callback || function() {};\r\n\r\n            if (!connection.socket) {\r\n                connectSocket(function() {\r\n                    callback(connection.socket);\r\n                });\r\n            } else {\r\n                callback(connection.socket);\r\n            }\r\n\r\n            return connection.socket; // callback is preferred over return-statement\r\n        };\r\n\r\n        connection.getRemoteStreams = mPeer.getRemoteStreams;\r\n\r\n        var skipStreams = ['selectFirst', 'selectAll', 'forEach'];\r\n\r\n        connection.streamEvents = {\r\n            selectFirst: function(options) {\r\n                return connection.streamEvents.selectAll(options)[0];\r\n            },\r\n            selectAll: function(options) {\r\n                if (!options) {\r\n                    // default will always be all streams\r\n                    options = {\r\n                        local: true,\r\n                        remote: true,\r\n                        isScreen: true,\r\n                        isAudio: true,\r\n                        isVideo: true\r\n                    };\r\n                }\r\n\r\n                if (options == 'local') {\r\n                    options = {\r\n                        local: true\r\n                    };\r\n                }\r\n\r\n                if (options == 'remote') {\r\n                    options = {\r\n                        remote: true\r\n                    };\r\n                }\r\n\r\n                if (options == 'screen') {\r\n                    options = {\r\n                        isScreen: true\r\n                    };\r\n                }\r\n\r\n                if (options == 'audio') {\r\n                    options = {\r\n                        isAudio: true\r\n                    };\r\n                }\r\n\r\n                if (options == 'video') {\r\n                    options = {\r\n                        isVideo: true\r\n                    };\r\n                }\r\n\r\n                var streams = [];\r\n                Object.keys(connection.streamEvents).forEach(function(key) {\r\n                    var event = connection.streamEvents[key];\r\n\r\n                    if (skipStreams.indexOf(key) !== -1) return;\r\n                    var ignore = true;\r\n\r\n                    if (options.local && event.type === 'local') {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (options.remote && event.type === 'remote') {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (options.isScreen && event.stream.isScreen) {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (options.isVideo && event.stream.isVideo) {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (options.isAudio && event.stream.isAudio) {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (options.userid && event.userid === options.userid) {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (ignore === false) {\r\n                        streams.push(event);\r\n                    }\r\n                });\r\n\r\n                return streams;\r\n            }\r\n        };\r\n\r\n        connection.socketURL = '/'; // generated via config.json\r\n        connection.socketMessageEvent = 'RTCMultiConnection-Message'; // generated via config.json\r\n        connection.socketCustomEvent = 'RTCMultiConnection-Custom-Message'; // generated via config.json\r\n        connection.DetectRTC = DetectRTC;\r\n\r\n        connection.setCustomSocketEvent = function(customEvent) {\r\n            if (customEvent) {\r\n                connection.socketCustomEvent = customEvent;\r\n            }\r\n\r\n            if (!connection.socket) {\r\n                return;\r\n            }\r\n\r\n            connection.socket.emit('set-custom-socket-event-listener', connection.socketCustomEvent);\r\n        };\r\n\r\n        connection.getNumberOfBroadcastViewers = function(broadcastId, callback) {\r\n            if (!connection.socket || !broadcastId || !callback) return;\r\n\r\n            connection.socket.emit('get-number-of-users-in-specific-broadcast', broadcastId, callback);\r\n        };\r\n\r\n        connection.onNumberOfBroadcastViewersUpdated = function(event) {\r\n            if (!connection.enableLogs || !connection.isInitiator) return;\r\n            console.info('Number of broadcast (', event.broadcastId, ') viewers', event.numberOfBroadcastViewers);\r\n        };\r\n\r\n        connection.onUserStatusChanged = function(event, dontWriteLogs) {\r\n            if (!!connection.enableLogs && !dontWriteLogs) {\r\n                console.info(event.userid, event.status);\r\n            }\r\n        };\r\n\r\n        connection.getUserMediaHandler = getUserMediaHandler;\r\n        connection.multiPeersHandler = mPeer;\r\n        connection.enableLogs = true;\r\n        connection.setCustomSocketHandler = function(customSocketHandler) {\r\n            if (typeof SocketConnection !== 'undefined') {\r\n                SocketConnection = customSocketHandler;\r\n            }\r\n        };\r\n\r\n        // default value should be 15k because [old]Firefox's receiving limit is 16k!\r\n        // however 64k works chrome-to-chrome\r\n        connection.chunkSize = 40 * 1000;\r\n\r\n        connection.maxParticipantsAllowed = 1000;\r\n\r\n        // eject or leave single user\r\n        connection.disconnectWith = mPeer.disconnectWith;\r\n\r\n        // check if room exist on server\r\n        // we will pass roomid to the server and wait for callback (i.e. server's response)\r\n        connection.checkPresence = function(roomid, callback) {\r\n            roomid = roomid || connection.sessionid;\r\n\r\n            if (SocketConnection.name === 'SSEConnection') {\r\n                SSEConnection.checkPresence(roomid, function(isRoomExist, _roomid, extra) {\r\n                    if (!connection.socket) {\r\n                        if (!isRoomExist) {\r\n                            connection.userid = _roomid;\r\n                        }\r\n\r\n                        connection.connectSocket(function() {\r\n                            callback(isRoomExist, _roomid, extra);\r\n                        });\r\n                        return;\r\n                    }\r\n                    callback(isRoomExist, _roomid);\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (!connection.socket) {\r\n                connection.connectSocket(function() {\r\n                    connection.checkPresence(roomid, callback);\r\n                });\r\n                return;\r\n            }\r\n\r\n            connection.socket.emit('check-presence', roomid + '', function(isRoomExist, _roomid, extra) {\r\n                if (connection.enableLogs) {\r\n                    console.log('checkPresence.isRoomExist: ', isRoomExist, ' roomid: ', _roomid);\r\n                }\r\n                callback(isRoomExist, _roomid, extra);\r\n            });\r\n        };\r\n\r\n        connection.onReadyForOffer = function(remoteUserId, userPreferences) {\r\n            connection.multiPeersHandler.createNewPeer(remoteUserId, userPreferences);\r\n        };\r\n\r\n        connection.setUserPreferences = function(userPreferences) {\r\n            if (connection.dontAttachStream) {\r\n                userPreferences.dontAttachLocalStream = true;\r\n            }\r\n\r\n            if (connection.dontGetRemoteStream) {\r\n                userPreferences.dontGetRemoteStream = true;\r\n            }\r\n\r\n            return userPreferences;\r\n        };\r\n\r\n        connection.updateExtraData = function() {\r\n            connection.socket.emit('extra-data-updated', connection.extra);\r\n        };\r\n\r\n        connection.enableScalableBroadcast = false;\r\n        connection.maxRelayLimitPerUser = 3; // each broadcast should serve only 3 users\r\n\r\n        connection.dontCaptureUserMedia = false;\r\n        connection.dontAttachStream = false;\r\n        connection.dontGetRemoteStream = false;\r\n\r\n        connection.onReConnecting = function(event) {\r\n            if (connection.enableLogs) {\r\n                console.info('ReConnecting with', event.userid, '...');\r\n            }\r\n        };\r\n\r\n        connection.beforeAddingStream = function(stream) {\r\n            return stream;\r\n        };\r\n\r\n        connection.beforeRemovingStream = function(stream) {\r\n            return stream;\r\n        };\r\n\r\n        if (typeof isChromeExtensionAvailable !== 'undefined') {\r\n            connection.checkIfChromeExtensionAvailable = isChromeExtensionAvailable;\r\n        }\r\n\r\n        if (typeof isFirefoxExtensionAvailable !== 'undefined') {\r\n            connection.checkIfChromeExtensionAvailable = isFirefoxExtensionAvailable;\r\n        }\r\n\r\n        if (typeof getChromeExtensionStatus !== 'undefined') {\r\n            connection.getChromeExtensionStatus = getChromeExtensionStatus;\r\n        }\r\n\r\n        connection.modifyScreenConstraints = function(screen_constraints) {\r\n            return screen_constraints;\r\n        };\r\n\r\n        connection.onPeerStateChanged = function(state) {\r\n            if (connection.enableLogs) {\r\n                if (state.iceConnectionState.search(/closed|failed/gi) !== -1) {\r\n                    console.error('Peer connection is closed between you & ', state.userid, state.extra, 'state:', state.iceConnectionState);\r\n                }\r\n            }\r\n        };\r\n\r\n        connection.isOnline = true;\r\n\r\n        listenEventHandler('online', function() {\r\n            connection.isOnline = true;\r\n        });\r\n\r\n        listenEventHandler('offline', function() {\r\n            connection.isOnline = false;\r\n        });\r\n\r\n        connection.isLowBandwidth = false;\r\n        if (navigator && navigator.connection && navigator.connection.type) {\r\n            connection.isLowBandwidth = navigator.connection.type.toString().toLowerCase().search(/wifi|cell/g) !== -1;\r\n            if (connection.isLowBandwidth) {\r\n                connection.bandwidth = {\r\n                    audio: false,\r\n                    video: false,\r\n                    screen: false\r\n                };\r\n\r\n                if (connection.mediaConstraints.audio && connection.mediaConstraints.audio.optional && connection.mediaConstraints.audio.optional.length) {\r\n                    var newArray = [];\r\n                    connection.mediaConstraints.audio.optional.forEach(function(opt) {\r\n                        if (typeof opt.bandwidth === 'undefined') {\r\n                            newArray.push(opt);\r\n                        }\r\n                    });\r\n                    connection.mediaConstraints.audio.optional = newArray;\r\n                }\r\n\r\n                if (connection.mediaConstraints.video && connection.mediaConstraints.video.optional && connection.mediaConstraints.video.optional.length) {\r\n                    var newArray = [];\r\n                    connection.mediaConstraints.video.optional.forEach(function(opt) {\r\n                        if (typeof opt.bandwidth === 'undefined') {\r\n                            newArray.push(opt);\r\n                        }\r\n                    });\r\n                    connection.mediaConstraints.video.optional = newArray;\r\n                }\r\n            }\r\n        }\r\n\r\n        connection.getExtraData = function(remoteUserId, callback) {\r\n            if (!remoteUserId) throw 'remoteUserId is required.';\r\n\r\n            if (typeof callback === 'function') {\r\n                connection.socket.emit('get-remote-user-extra-data', remoteUserId, function(extra, remoteUserId, error) {\r\n                    callback(extra, remoteUserId, error);\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (!connection.peers[remoteUserId]) {\r\n                if (connection.peersBackup[remoteUserId]) {\r\n                    return connection.peersBackup[remoteUserId].extra;\r\n                }\r\n                return {};\r\n            }\r\n\r\n            return connection.peers[remoteUserId].extra;\r\n        };\r\n\r\n        if (!!forceOptions.autoOpenOrJoin) {\r\n            connection.openOrJoin(connection.sessionid);\r\n        }\r\n\r\n        connection.onUserIdAlreadyTaken = function(useridAlreadyTaken, yourNewUserId) {\r\n            // via #683\r\n            connection.close();\r\n            connection.closeSocket();\r\n\r\n            connection.isInitiator = false;\r\n            connection.userid = connection.token();\r\n\r\n            connection.join(connection.sessionid);\r\n\r\n            if (connection.enableLogs) {\r\n                console.warn('Userid already taken.', useridAlreadyTaken, 'Your new userid:', connection.userid);\r\n            }\r\n        };\r\n\r\n        connection.trickleIce = true;\r\n        connection.version = '3.6.9';\r\n\r\n        connection.onSettingLocalDescription = function(event) {\r\n            if (connection.enableLogs) {\r\n                console.info('Set local description for remote user', event.userid);\r\n            }\r\n        };\r\n\r\n        connection.resetScreen = function() {\r\n            sourceId = null;\r\n            if (DetectRTC && DetectRTC.screen) {\r\n                delete DetectRTC.screen.sourceId;\r\n            }\r\n\r\n            currentUserMediaRequest = {\r\n                streams: [],\r\n                mutex: false,\r\n                queueRequests: []\r\n            };\r\n        };\r\n\r\n        // if disabled, \"event.mediaElement\" for \"onstream\" will be NULL\r\n        connection.autoCreateMediaElement = true;\r\n\r\n        // set password\r\n        connection.password = null;\r\n\r\n        // set password\r\n        connection.setPassword = function(password, callback) {\r\n            callback = callback || function() {};\r\n            if (connection.socket) {\r\n                connection.socket.emit('set-password', password, callback);\r\n            } else {\r\n                connection.password = password;\r\n                callback(true, connection.sessionid, null);\r\n            }\r\n        };\r\n\r\n        connection.onSocketDisconnect = function(event) {\r\n            if (connection.enableLogs) {\r\n                console.warn('socket.io connection is closed');\r\n            }\r\n        };\r\n\r\n        connection.onSocketError = function(event) {\r\n            if (connection.enableLogs) {\r\n                console.warn('socket.io connection is failed');\r\n            }\r\n        };\r\n\r\n        // error messages\r\n        connection.errors = {\r\n            ROOM_NOT_AVAILABLE: 'Room not available',\r\n            INVALID_PASSWORD: 'Invalid password',\r\n            USERID_NOT_AVAILABLE: 'User ID does not exist',\r\n            ROOM_PERMISSION_DENIED: 'Room permission denied',\r\n            ROOM_FULL: 'Room full',\r\n            DID_NOT_JOIN_ANY_ROOM: 'Did not join any room yet',\r\n            INVALID_SOCKET: 'Invalid socket',\r\n            PUBLIC_IDENTIFIER_MISSING: 'publicRoomIdentifier is required',\r\n            INVALID_ADMIN_CREDENTIAL: 'Invalid username or password attempted'\r\n        };\r\n    })(this);\r\n\r\n};\r\n\r\nif (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n    module.exports = exports = RTCMultiConnection;\r\n}\r\n\r\nif (typeof define === 'function' && define.amd) {\r\n    define('RTCMultiConnection', [], function() {\r\n        return RTCMultiConnection;\r\n    });\r\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h1',[_vm._v(\"This is the title screen\")]),_c('a',{on:{\"click\":_vm.startBattleMode}},[_vm._v(\"Battle Mode\")]),_c('br'),_c('a',{on:{\"click\":_vm.startPartyMode}},[_vm._v(\"Party Mode\")]),_vm._m(0)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"overlay\"}),_c('button',{staticClass:\"btn-select-file\",attrs:{\"id\":\"btn-select-file\"}}),_c('iframe'),_c('header',[_c('div',{staticClass:\"ribbon\"},[_c('div',{staticClass:\"ribbon-stitches-top\"}),_c('strong',{staticClass:\"ribbon-content\"},[_c('h1',[_c('input',{attrs:{\"type\":\"text\",\"id\":\"room-id\",\"placeholder\":\"room-id\"}}),_c('button',{attrs:{\"id\":\"join-room\"}},[_vm._v(\"Join\")])])]),_c('div',{staticClass:\"ribbon-stitches-bottom\"})])]),_c('div',{attrs:{\"id\":\"number-of-users\",\"title\":\"Number of online users.\"}},[_vm._v(\"0\")]),_c('div',{attrs:{\"id\":\"logs\"}},[_c('p',[_vm._v(\"\\n        Peer-to-Peer (private) file sharing.\\n      \")]),_c('p',[_vm._v(\"\\n        You can share/receive files from any platform/device e.g. destkop operating systems, Android, iOS etc.\\n      \")]),_c('p',[_vm._v(\"\\n        Create or join a room & select file using \\\"+\\\" button.\\n      \")])]),_c('a',{staticClass:\"chrome-web-store-icon\",attrs:{\"href\":\"https://chrome.google.com/webstore/detail/webrtc-file-sharing/nbnncbdkhpmbnkfngmkdbepoemljbnfo\",\"target\":\"_blank\",\"title\":\"Install Chrome Desktop Extension\"}}),_c('a',{staticClass:\"android-app-icon\",attrs:{\"href\":\"https://play.google.com/store/apps/details?id=com.webrtc.experiment\",\"target\":\"_blank\",\"title\":\"Install Android App\"}})])}]\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <h1>This is the title screen</h1>\n\n    <a @click=\"startBattleMode\">Battle Mode</a>\n    <br>\n    <a @click=\"startPartyMode\">Party Mode</a>\n\n    <div>\n      <div class=\"overlay\"></div>\n      <button id=\"btn-select-file\" class=\"btn-select-file\"></button>\n\n      <iframe></iframe>\n\n      <header>\n          <div class=\"ribbon\"><div class=\"ribbon-stitches-top\"></div><strong class=\"ribbon-content\"><h1>\n            <input type=\"text\" id=\"room-id\" placeholder=\"room-id\"><button id=\"join-room\">Join</button>\n          </h1></strong><div class=\"ribbon-stitches-bottom\"></div></div>\n      </header>\n\n      <div id=\"number-of-users\" title=\"Number of online users.\">0</div>\n      <div id=\"logs\">\n        <p>\n          Peer-to-Peer (private) file sharing.\n        </p>\n        <p>\n          You can share/receive files from any platform/device e.g. destkop operating systems, Android, iOS etc.\n        </p>\n        <p>\n          Create or join a room & select file using \"+\" button.\n        </p>\n      </div>\n\n      <a class=\"chrome-web-store-icon\" href=\"https://chrome.google.com/webstore/detail/webrtc-file-sharing/nbnncbdkhpmbnkfngmkdbepoemljbnfo\" target=\"_blank\" title=\"Install Chrome Desktop Extension\"></a>\n\n      <a class=\"android-app-icon\" href=\"https://play.google.com/store/apps/details?id=com.webrtc.experiment\" target=\"_blank\" title=\"Install Android App\"></a>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport setGameMode, { GAME_MODE_BATTLE, GAME_MODE_PARTY, GameSettings } from \"../common/GameSettings\";\nimport router from '../router';\n\nexport default {\n  name: \"title-screen\",\n  mounted() {\n    \n    // // this line is VERY_important\n    // connection.socketURL = 'https://rtcmulticonnection.herokuapp.com:443/';\n    // // if you want audio+video conferencing\n    // connection.session = {\n    //     audio: true,\n    //     video: true\n    // };\n\n    // connection.openOrJoin('your-room-id');\n    window.getExternalIceServers = true;\n\n    window.onerror = console.error = function() {\n            var error = JSON.stringify(arguments);\n            if(error.indexOf('Blocked a frame with origin') !== -1) {\n                return;\n            }\n            alert('Error:\\n' + error);\n        };\n        // Muaz Khan     - https://github.com/muaz-khan\n        // MIT License   - https://www.WebRTC-Experiment.com/licence/\n        // Source Code   - https://github.com/muaz-khan/RTCMultiConnection\n        let btnSelectFile = document.getElementById(\"btn-select-file\")\n        window.addEventListener('load', function() {\n            if (window.localStorage.getItem('room-id')) {\n                document.getElementById('room-id').value = window.localStorage.getItem('room-id');\n            } else {\n                document.getElementById('room-id').value = (Math.random() * 100).toString().replace('.', '');\n            }\n            if(location.hash.length > 1) {\n               document.getElementById('room-id').value = location.hash.replace('#', '');\n            }\n            document.getElementById('join-room').onclick = btnSelectFile.onclick = function() {\n                document.getElementById('join-room').disabled = true;\n                document.getElementById('room-id').disabled = true;\n                var roomId = document.getElementById('room-id').value;\n                window.localStorage.setItem('room-id', roomId);\n                joinARoom(roomId);\n            };\n            if(location.hash.length > 1) {\n                document.getElementById('join-room').disabled = true;\n                document.getElementById('room-id').disabled = true;\n                joinARoom(location.hash.replace('#', ''));\n            }\n        });\n        \n        var connection;\n        function joinARoom(roomId) {\n            var iframe = document.querySelector('iframe');\n            btnSelectFile.onclick = function(file) {\n                if(file && (file instanceof File || file instanceof Blob) && file.size) {\n                  previewFile(file);\n                  onFileSelected(file);\n                  return;\n                }\n                var fileSelector = new FileSelector();\n                fileSelector.selectSingleFile(function(file) {\n                    previewFile(file);\n                    onFileSelected(file);\n                });\n            };\n            var lastSelectedFile;\n            var room_id = '';\n            // 60k -- assuming receiving client is chrome\n            var chunk_size = 60 * 1000;\n            function setupWebRTCConnection() {\n                if (connection) {\n                    return;\n                }\n                const RTCMultiConnection = require('rtcmulticonnection');\n                const fbr = require(\"fbr\");\n    \n                connection = new RTCMultiConnection();\n                // to make sure, \"connection-reconnect\" doesn't sends files again\n                connection.fileReceived = {};\n                // by default, socket.io server is assumed to be deployed on your own URL\n                //connection.socketURL = '/';\n                // comment-out below line if you do not have your own socket.io server\n                connection.socketURL = 'https://rtcmulticonnection.herokuapp.com:443/';\n                connection.socketMessageEvent = 'file-sharing-demo';\n                connection.chunkSize = chunk_size;\n                connection.sdpConstraints.mandatory = {\n                    OfferToReceiveAudio: false,\n                    OfferToReceiveVideo: false\n                };\n                connection.enableFileSharing = true;\n                if (room_id && room_id.length) {\n                    connection.userid = room_id;\n                }\n                connection.channel = connection.sessionid = roomId;\n                connection.session = {\n                    data: true,\n                    // oneway: true --- to make it one-to-many\n                };\n                // https://www.rtcmulticonnection.org/docs/iceServers/\n                // use your own TURN-server here!\n                connection.iceServers = [{\n                    'urls': [\n                        'stun:stun.l.google.com:19302',\n                        'stun:stun1.l.google.com:19302',\n                        'stun:stun2.l.google.com:19302',\n                        'stun:stun.l.google.com:19302?transport=udp',\n                    ]\n                }];\n                connection.filesContainer = logsDiv;\n                connection.connectedWith = {};\n                connection.onmessage = function(event) {\n                    if(event.data.doYouWannaReceiveThisFile) {\n                        if(!connection.fileReceived[event.data.fileName]) {\n                            connection.send({\n                                yesIWannaReceive:true,\n                                fileName: event.data.fileName\n                            });\n                        }\n                    }\n                    if(event.data.yesIWannaReceive && !!lastSelectedFile) {\n                        connection.shareFile(lastSelectedFile, event.userid);\n                    }\n                };\n                connection.onopen = function(e) {\n                    try {\n                        chrome.power.requestKeepAwake('display');\n                    }\n                    catch(e) {}\n                    if (connection.connectedWith[e.userid]) return;\n                    connection.connectedWith[e.userid] = true;\n                    var message = '<b>' + e.userid + '</b><br>is connected.';\n                    appendLog(message);\n                    if (!lastSelectedFile) return;\n                    // already shared the file\n                    var file = lastSelectedFile;\n                    setTimeout(function() {\n                        appendLog('Sharing file<br><b>' + file.name + '</b><br>Size: <b>' + bytesToSize(file.size) + '<b><br>With <b>' + connection.getAllParticipants().length + '</b> users');\n                        connection.send({\n                            doYouWannaReceiveThisFile: true,\n                            fileName: file.size + file.name\n                        });\n                    }, 500);\n                };\n                connection.onclose = function(e) {\n                    incrementOrDecrementUsers();\n                    if (connection.connectedWith[e.userid]) return;\n                    appendLog('Data connection has been closed between you and <b>' + e.userid + '</b>. Re-Connecting..');\n                    connection.join(roomId);\n                };\n                connection.onerror = function(e) {\n                    if (connection.connectedWith[e.userid]) return;\n                    appendLog('Data connection failed. between you and <b>' + e.userid + '</b>. Retrying..');\n                };\n                setFileProgressBarHandlers(connection);\n                connection.onUserStatusChanged = function(user) {\n                    incrementOrDecrementUsers();\n                };\n                connection.onleave = function(user) {\n                    user.status = 'offline';\n                    connection.onUserStatusChanged(user);\n                    incrementOrDecrementUsers();\n                };\n                var message = 'Connecting room:<br><b>' + connection.channel + '</b>';\n                appendLog(message);\n                connection.openOrJoin(connection.channel, function(isRoomExist, roomid) {\n                    var message = 'Successfully connected to room: <b>' + roomid + '</b><hr>Other users can join you on iPhone/Android using \"' + roomid + '\" or desktop (Windows/MacOSX/Ubuntu) users can join using this (secure/private) URL: <a href=\"./file-sharing.html#' + roomid + '\" target=\"_blank\">file-sharing.html#' + roomid + '</a>';\n                    // if (isRoomEists) { }\n                    appendLog(message);\n                    if(document.getElementById('room-id')) {\n                        if(innerWidth > 500) {\n                          document.getElementById('room-id').parentNode.innerHTML = 'Joined room: ' + roomid;\n                        }\n                        else {\n                          document.getElementById('room-id').parentNode.innerHTML = 'Joined room:<br>' + roomid;\n                        }\n                    }\n                    connection.getSocket(function(socket) {\n                      socket.on('disconnect', function() {\n                         appendLog('Seems disconnected.', 'red');\n                      });\n                      socket.on('connect', function() {\n                         location.reload();\n                      });\n                      socket.on('error', function() {\n                         location.reload();\n                      });\n                    });\n                    window.addEventListener('offline', function() {\n                      appendLog('Seems disconnected.', 'red');\n                    }, false);\n                });\n                window.connection = connection;\n            }\n            function setFileProgressBarHandlers(connection) {\n                var progressHelper = {};\n                // www.RTCMultiConnection.org/docs/onFileStart/\n                connection.onFileStart = function(file) {\n                    if (connection.fileReceived[file.size + file.name]) return;\n                    var div = document.createElement('div');\n                    div.style.borderBottom = '1px solid black';\n                    div.style.padding = '2px 4px';\n                    div.id = file.uuid;\n                    var message = '';\n                    if (file.userid == connection.userid) {\n                        message += 'Sharing with:' + file.remoteUserId;\n                    } else {\n                        message += 'Receiving from:' + file.userid;\n                    }\n                    message += '<br><b>' + file.name + '</b>.';\n                    message += '<br>Size: <b>' + bytesToSize(file.size) + '</b>';\n                    message += '<br><label>0%</label> <progress></progress>';\n                    if(file.userid !== connection.userid) {\n                        message += '<br><button id=\"resend\">Receive Again?</button>';\n                    }\n                    div.innerHTML = message;\n                    connection.filesContainer.insertBefore(div, connection.filesContainer.firstChild);\n                    if(file.userid !== connection.userid && div.querySelector('#resend')) {\n                        div.querySelector('#resend').onclick = function(e) {\n                            e.preventDefault();\n                            this.onclick = function() {};\n                            if(connection.fileReceived[file.size + file.name]) {\n                                delete connection.fileReceived[file.size + file.name];\n                            }\n                            connection.send({\n                                yesIWannaReceive: true,\n                                fileName: file.name\n                            }, file.userid);\n                            div.parentNode.removeChild(div);\n                        };\n                    }\n                    if (!file.remoteUserId) {\n                        progressHelper[file.uuid] = {\n                            div: div,\n                            progress: div.querySelector('progress'),\n                            label: div.querySelector('label')\n                        };\n                        progressHelper[file.uuid].progress.max = file.maxChunks;\n                        return;\n                    }\n                    if (!progressHelper[file.uuid]) {\n                        progressHelper[file.uuid] = {};\n                    }\n                    progressHelper[file.uuid][file.remoteUserId] = {\n                        div: div,\n                        progress: div.querySelector('progress'),\n                        label: div.querySelector('label')\n                    };\n                    progressHelper[file.uuid][file.remoteUserId].progress.max = file.maxChunks;\n                };\n                // www.RTCMultiConnection.org/docs/onFileProgress/\n                connection.onFileProgress = function(chunk) {\n                    if (connection.fileReceived[chunk.size + chunk.name]) return;\n                    var helper = progressHelper[chunk.uuid];\n                    if (!helper) {\n                        return;\n                    }\n                    if (chunk.remoteUserId) {\n                        helper = progressHelper[chunk.uuid][chunk.remoteUserId];\n                        if (!helper) {\n                            return;\n                        }\n                    }\n                    helper.progress.value = chunk.currentPosition || chunk.maxChunks || helper.progress.max;\n                    updateLabel(helper.progress, helper.label);\n                };\n                // www.RTCMultiConnection.org/docs/onFileEnd/\n                connection.onFileEnd = function(file) {\n                    if (connection.fileReceived[file.size + file.name]) return;\n                    var div = document.getElementById(file.uuid);\n                    if (div) {\n                        div.parentNode.removeChild(div);\n                    }\n                    if (file.remoteUserId === connection.userid) {\n                        previewFile(file);\n                        connection.fileReceived[file.size + file.name] = file;\n                        var message = 'Successfully received file';\n                        message += '<br><b>' + file.name + '</b>.';\n                        message += '<br>Size: <b>' + bytesToSize(file.size) + '</b>.';\n                        message += '<br><a href=\"' + file.url + '\" target=\"_blank\" download=\"' + file.name + '\">Download</a>';\n                        var div = appendLog(message);\n                        return;\n                    }\n                    var message = 'Successfully shared file';\n                    message += '<br><b>' + file.name + '</b>.';\n                    message += '<br>With: <b>' + file.remoteUserId + '</b>.';\n                    message += '<br>Size: <b>' + bytesToSize(file.size) + '</b>.';\n                    appendLog(message);\n                };\n                function updateLabel(progress, label) {\n                    if (progress.position === -1) {\n                        return;\n                    }\n                    var position = +progress.position.toFixed(2).split('.')[1] || 100;\n                    label.innerHTML = position + '%';\n                }\n            }\n            function bytesToSize(bytes) {\n                var k = 1000;\n                var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n                if (bytes === 0) {\n                    return '0 Bytes';\n                }\n                var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);\n                return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\n            }\n            function onFileSelected(file) {\n                var innerHTML = 'You selected:<br><b>' + file.name + '</b><br>Size: <b>' + bytesToSize(file.size) + '</b>';\n                appendLog(innerHTML);\n                lastSelectedFile = file;\n                if (connection) {\n                    connection.send({\n                        doYouWannaReceiveThisFile: true,\n                        fileName: file.size + file.name\n                    });\n                }\n            }\n            var numberOfUsers = document.getElementById('number-of-users');\n            function incrementOrDecrementUsers() {\n                numberOfUsers.innerHTML = connection ? connection.getAllParticipants().length : 0;\n            }\n            var logsDiv = document.getElementById('logs');\n            function appendLog(html, color) {\n                var div = document.createElement('div');\n                div.innerHTML = '<p>' + html + '</p>';\n                logsDiv.insertBefore(div, logsDiv.firstChild);\n                if(color) {\n                  div.style.color = color;\n                }\n                return div;\n            }\n            window.onerror = console.error = function() {\n                var error = JSON.stringify(arguments);\n                if(error.indexOf('Blocked a frame with origin') !== -1) {\n                  return;\n                }\n                appendLog('Error:<br>' + error, 'red')\n            };\n            function previewFile(file) {\n                btnSelectFile.style.left = '5px';\n                btnSelectFile.style.right = 'auto';\n                btnSelectFile.style.zIndex = 10;\n                btnSelectFile.style.top = '5px';\n                btnSelectFile.style.outline = 'none';\n                document.querySelector('.overlay').style.display = 'none';\n                iframe.style.display = 'block';\n                iframe.onload = function() {\n                    Array.prototype.slice.call(iframe.contentWindow.document.body.querySelectorAll('*')).forEach(function(element) {\n                        element.style.maxWidth = '100%';\n                    });\n                    if (!file.type || fileNameMatches || file.type.match(/image|video|audio|pdf/g) || iframe.src.indexOf('data:image/png') !== -1 || iframe.src.toLowerCase().search(/.png|.jpeg|.jpg|.gif/g) !== -1) {\n                        iframe.contentWindow.document.body.style.textAlign = 'center';\n                        iframe.contentWindow.document.body.style.background = 'black';\n                        iframe.contentWindow.document.body.style.color = 'white';\n                        return;\n                    }\n                    iframe.contentWindow.document.body.style.textAlign = 'left';\n                    iframe.contentWindow.document.body.style.background = 'white';\n                    iframe.contentWindow.document.body.style.color = 'black';\n                };\n                var fileNameMatches = (file.name || '').toLowerCase().match(/.webm|.wav|.pdf|.txt|.js|.css|.cs|.png|.jpg|.jpeg|.gif/g);\n                if (fileNameMatches) {\n                    iframe.src = URL.createObjectURL(file);\n                } else {\n                    iframe.src = 'https://www.webrtc-experiment.com/images/unknown-file.png';\n                }\n            }\n            setupWebRTCConnection();\n        }\n        window.addEventListener('online', function() {\n          location.reload();\n        }, false);\n        // drag-drop support\n        document.addEventListener('dragover', function(e) {\n          e.preventDefault();\n          e.stopPropagation();\n          e.dataTransfer.dropEffect = 'copy';\n        }, false);\n        document.addEventListener('drop', function(e) {\n          e.preventDefault();\n          e.stopPropagation();\n          if(!e.dataTransfer.files || !e.dataTransfer.files.length) {\n            return;\n          }\n          var file = e.dataTransfer.files[0];\n          if(!connection) {\n            document.getElementById('join-room').onclick();\n          }\n          btnSelectFile.onclick(file);\n        }, false);\n        function FileSelector() {\n          var selector = this;\n\n          var noFileSelectedCallback = function() {};\n\n          selector.selectSingleFile = function(callback, failure) {\n              if (failure) {\n                  noFileSelectedCallback = failure;\n              }\n\n              selectFile(callback, null, null);\n          };\n          selector.selectMultipleFiles = function(callback, failure) {\n              if (failure) {\n                  noFileSelectedCallback = failure;\n              }\n\n              selectFile(callback, true, null);\n          };\n          selector.selectDirectory = function(callback, failure) {\n              if (failure) {\n                  noFileSelectedCallback = failure;\n              }\n\n              selectFile(callback, true, true);\n          };\n\n          selector.accept = '*.*';\n\n          function selectFile(callback, multiple, directory) {\n              callback = callback || function() {};\n\n              let file = document.createElement('input');\n              file.type = 'file';\n\n              if (multiple) {\n                  file.multiple = true;\n              }\n\n              if (directory) {\n                  file.webkitdirectory = true;\n              }\n\n              file.accept = selector.accept;\n\n              file.onclick = function() {\n                  file.clickStarted = true;\n              };\n\n              document.body.onfocus = function() {\n                  setTimeout(function() {\n                      if (!file.clickStarted) return;\n                      file.clickStarted = false;\n\n                      if (!file.value) {\n                          noFileSelectedCallback();\n                      }\n                  }, 500);\n              };\n\n              file.onchange = function() {\n                  if (multiple) {\n                      if (!file.files.length) {\n                          console.error('No file selected.');\n                          return;\n                      }\n\n                      var arr = [];\n                      Array.from(file.files).forEach(function(file) {\n                          file.url = file.webkitRelativePath;\n                          arr.push(file);\n                      });\n                      callback(arr);\n                      return;\n                  }\n\n                  if (!file.files) {\n                      console.error('No file selected.');\n                      return;\n                  }\n\n                  if(file.files) callback(file.files[0]);\n\n                  file.parentNode.removeChild(file);\n              };\n              file.style.display = 'none';\n              (document.body || document.documentElement).appendChild(file);\n              fireClickEvent(file);\n          }\n\n          function getValidFileName(fileName) {\n              if (!fileName) {\n                  fileName = 'file' + (new Date).toISOString().replace(/:|\\.|-/g, '')\n              }\n\n              var a = fileName;\n              a = a.replace(/^.*[\\\\\\/]([^\\\\\\/]*)$/i, \"$1\");\n              a = a.replace(/\\s/g, \"_\");\n              a = a.replace(/,/g, '');\n              a = a.toLowerCase();\n              return a;\n          }\n\n          function fireClickEvent(element) {\n              if (typeof element.click === 'function') {\n                  element.click();\n                  return;\n              }\n\n              if (typeof element.change === 'function') {\n                  element.change();\n                  return;\n              }\n\n              if (typeof document.createEvent('Event') !== 'undefined') {\n                  var event = document.createEvent('Event');\n\n                  if (typeof event.initEvent === 'function' && typeof element.dispatchEvent === 'function') {\n                      event.initEvent('click', true, true);\n                      element.dispatchEvent(event);\n                      return;\n                  }\n              }\n\n              let mouseEvent = new MouseEvent('click', {\n                  view: window,\n                  bubbles: true,\n                  cancelable: true\n              });\n\n              element.dispatchEvent(mouseEvent);\n          }\n      }\n  },\n  methods: {\n    startBattleMode()\n    {\n      GameSettings.SetupBattleModeGame();\n      router.push(\"intro-screen\");\n    },\n    startPartyMode()\n    {\n      GameSettings.SetupPartyModeGame();\n      router.push(\"intro-screen\");\n    }\n  }\n}\n</script>\n\n\n\n<style>\n        * {\n          margin: 0;\n          padding: 0;\n        }\n        ::-webkit-scrollbar {\n          height: 0;\n          overflow: visible;\n          width: 10px;\n          border-left:1px solid rgb(229, 229, 229);\n        }\n        ::-webkit-scrollbar-thumb {\n          background-color: rgba(0, 0, 0, .2);\n          background-clip: padding-box;\n          min-height: 28px;\n          padding: 100px 0 0;\n          box-shadow: inset 1px 1px 0 rgba(0,0,0,.1),inset 0 -1px 0 rgba(0,0,0,.07);\n          border-width: 1px 1px 1px 6px;\n        }\n        ::-webkit-scrollbar-button {\n          height: 0;\n          width: 0;\n        }\n        ::-webkit-scrollbar-track {\n          background-clip: padding-box;\n          border: solid transparent;\n          border-width: 0 0 0 4px;\n        }\n        ::-webkit-scrollbar-corner {\n          background: transparent;\n        }\n        html, body {\n          background-color: black;\n          font-family: 'Open Sans', 'Segoe UI Light','Segoe UI',Verdana,Arial;\n          font-size: 1.1em;\n          overflow: hidden;\n        }\n        .overlay {\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background: black;\n          z-index: 1;\n        }\n        .btn-select-file {\n          position: absolute;\n          z-index: 2;\n          left: 40%;\n          top: 40%;\n          width: 100px;\n          height: 100px;\n          -webkit-user-select: none;\n          border-radius: 50%;\n          text-shadow: 2px 2px white;\n          border: 1px solid #1B1B1B;\n          background-color: #D5D8D8;\n          cursor: pointer;\n          background-image: url(https://www.webrtc-experiment.com/images/btn-select-file.png);\n          outline: none;\n        }\n        .btn-select-file:hover {\n          background-color: #BBBBBB;\n        }\n        .btn-select-file:active {\n          background-color: #7F7B7B;\n        }\n        iframe {\n          position: absolute;\n          width: 80%;\n          height: 96%;\n          top: 87px;\n          left: 0;\n          right: 20;\n          bottom: 0;\n          border: 0;\n          outline: 0;\n          z-index: 5;\n          display: none;\n        }\n        #logs {\n          position: absolute;\n          background: white;\n          border-left: 1px solid black;\n          width: 20%;\n          top: 87px;\n          right: 0;\n          bottom: 0;\n          z-index: 6;\n          font-size: medium;\n          overflow: auto;\n          height: 100%;\n          border-top-left-radius: 5px;\n          font-size: 22px;\n        }\n        #logs p {\n          padding: 2px 4px;\n          border-bottom: 1px solid black;\n        }\n        header {\n          position: absolute;\n          text-align: center;\n          width: 100%;\n          height: 61px;\n          top: 0;\n          right: 0;\n          left: 0;\n          z-index: 7;\n          padding-top: 8px;\n          background: #EFEBEB;\n          border-bottom: 1px solid white;\n        }\n        #number-of-users {\n          position: absolute;\n          right: 60px;\n          top: 16px;\n          width: 36px;\n          height: 30px;\n          -webkit-user-select: none;\n          border-radius: 5px;\n          border: 1px solid #FFFFFF;\n          background-color: #E83930;\n          z-index: 8;\n          text-align: center;\n          padding-top: 6px;\n          color: white;\n        }\n        #room-id {\n          outline: none;\n          border: 1px solid black;\n          padding: 1px 3px;\n          font-size: 100%;\n          background: rgba(255, 255, 255, 0.28);\n          border-top-left-radius: 5px;\n          border-bottom-left-radius: 5px;\n        }\n        #join-room {\n          border: 1px solid black;\n          background: rgba(255, 255, 255, 0.28);\n          padding: 1px 3px;\n          border-left: 0;\n          font-size: 100%;\n          border-top-right-radius: 5px;\n          border-bottom-right-radius: 5px;\n        }\n         .android-app-icon {\n           background-repeat: no-repeat;\n           background-position: center center;\n           background-size: 64px 64px;\n           background-image: url(https://www.webrtc-experiment.com/images/android-app-icon.png);\n           width: 64px;\n           height: 64px;\n           position: absolute;\n           bottom: 5px;\n           left: 15px;\n           z-index: 9999;\n         }\n         .chrome-web-store-icon {\n          background-repeat: no-repeat;\n           background-position: center center;\n           background-size: 64px 64px;\n           background-image: url(https://www.webrtc-experiment.com/images/chrome-web-store-icon.png);\n           width: 64px;\n           height: 64px;\n           position: absolute;\n           bottom: 5px;\n           left: 90px;\n           z-index: 9999;\n         }\n        @media all and (max-width: 500px) {\n          #logs {\n            position: fixed;\n            bottom: 0;\n            left: 0;\n            width: 100%;\n            top: auto;\n            height: 40%;\n            border-left: 0;\n            border-top: 1px solid black;\n            font-size: 18px;\n          }\n          .btn-select-file {\n            top: 20%;\n            left: 40%;\n          }\n          #room-id {\n            width: 40%;\n          }\n          .ribbon{\n            height: 150%;\n            width: 80%;\n          }\n          .ribbon h1 {\n            font-size: 20px!important;\n          }\n          #number-of-users {\n            right: 50px;\n          }\n          .android-app-icon, .chrome-web-store-icon {\n            display: none;\n          }\n        }\n        hr {border:0;}\n    </style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TitleScreen.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TitleScreen.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TitleScreen.vue?vue&type=template&id=403db28a&\"\nimport script from \"./TitleScreen.vue?vue&type=script&lang=js&\"\nexport * from \"./TitleScreen.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TitleScreen.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"sourceRoot":""}