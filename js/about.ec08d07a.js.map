{"version":3,"sources":["webpack:///./src/views/TitleScreen.vue?36c5","webpack:///./node_modules/core-js/modules/es6.array.from.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/core-js/modules/es6.string.iterator.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/fbr/FileBufferReader.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/rtcmulticonnection/dist/RTCMultiConnection.js","webpack:///./node_modules/isarray/index.js","webpack:///./src/views/TitleScreen.vue?9e7b","webpack:///src/views/TitleScreen.vue","webpack:///./src/views/TitleScreen.vue?08bd","webpack:///./src/views/TitleScreen.vue","webpack:///./node_modules/core-js/modules/_create-property.js","webpack:///./node_modules/process/browser.js"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TitleScreen_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TitleScreen_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","ctx","$export","toObject","call","isArrayIter","toLength","createProperty","getIterFn","S","F","iter","Array","from","arrayLike","length","result","step","iterator","O","C","this","aLen","arguments","mapfn","undefined","mapping","index","iterFn","next","done","value","exports","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","code","i","len","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","$at","String","iterated","_t","_i","point","dP","f","FProto","Function","prototype","nameRE","NAME","configurable","get","match","e","read","buffer","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","c","rt","abs","isNaN","floor","log","LN2","Buffer","FileBufferReader","fbr","fbrHelper","FileBufferReaderHelper","chunks","users","readAsArrayBuffer","file","callback","extra","options","earlyCallback","chunk","fbrClone","currentPosition","userid","Object","keys","forEach","key","getNextChunk","fileUUID","uuid","allFileChunks","nextChunk","convertToArrayBuffer","chunkMissing","remoteUserId","onBegin","onEnd","onProgress","maxChunks","fbReceiver","FileBufferReceiver","to","constructor","Date","RegExp","Number","Boolean","name","addChunk","receive","readyForNextChunk","chunksWaiters","convertToObject","FileConverter","ConvertToObject","ConvertToArrayBuffer","setMultipleUsers","fileReaderWrapper","postMessage","random","toString","replace","chunkSize","numOfChunksInSlice","sliceId","cacheSize","chunksPerSlice","min","sliceSize","ceil","size","type","lastModifiedDate","blob","reader","FileReader","addChunks","fileName","binarySlice","addChunkCallback","slice","onloadend","evt","target","readyState","DONE","url","URL","createObjectURL","processChunk","FileSelector","selector","noFileSelectedCallback","selectFile","multiple","directory","document","createElement","webkitdirectory","accept","onclick","clickStarted","body","onfocus","setTimeout","onchange","files","console","error","webkitRelativePath","parentNode","removeChild","style","display","documentElement","appendChild","fireClickEvent","element","click","change","createEvent","event","initEvent","dispatchEvent","MouseEvent","view","window","bubbles","cancelable","selectSingleFile","failure","selectMultipleFiles","selectDirectory","chunksObject","chunksArray","item","idx","Blob","merge","looper","object","binarize","pack","dataView","unpack","mergein","mergeto","debug","BIG_ENDIAN","LITTLE_ENDIAN","TYPE_LENGTH","BYTES_PER_ELEMENT","LENGTH_LENGTH","Uint16Array","BYTES_LENGTH","Uint32Array","Types","NULL","UNDEFINED","STRING","NUMBER","BOOLEAN","ARRAY","OBJECT","INT8ARRAY","INT16ARRAY","INT32ARRAY","UINT8ARRAY","UINT16ARRAY","UINT32ARRAY","FLOAT32ARRAY","FLOAT64ARRAY","ARRAYBUFFER","BLOB","FILE","BUFFER","TypeNames","Length","binary_dump","table","endianness","ROW_LENGTH","getUint8","find_type","obj","const_name","const_name_reflection","toUpperCase","Int8Array","Int16Array","Int32Array","Float32Array","Float64Array","ArrayBuffer","serialized","cursor","j","ab","byte_length","header_size","DataView","type_name","unit","setUint8","info","setUint16","setUint32","_view","set","elem","getUint16","getUint32","string","fromCharCode","getFloat64","mime","val","deferredSerialize","array","results","count","serialize","concat","subarray","deferred","hasOwnProperty","mime_type","onload","onerror","deserialize","Test","global","base64","ieee754","isArray","typedArraySupport","__proto__","foo","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","TypeError","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","encoding","checked","isEncoding","actual","fromArrayLike","byteOffset","isBuffer","copy","isnan","data","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","buf","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","decodeCodePointsArray","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","defineProperty","allocUnsafeSlow","_isBuffer","compare","a","x","y","list","pos","swap16","swap32","swap64","apply","equals","inspect","str","max","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","MAX_ARGUMENTS_LENGTH","codePoints","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","base64clean","stringtrim","trim","units","leadSurrogate","byteArray","hi","lo","src","dst","process","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","RTCMultiConnection","roomid","forceOptions","browserFakeUserAgent","SocketConnection","connection","connectCallback","isData","session","audio","video","screen","parameters","sessionid","socketMessageEvent","socketCustomEvent","autoCloseEntireSession","broadcast","maxParticipantsAllowed","enableScalableBroadcast","maxRelayLimitPerUser","JSON","stringify","socketCustomParameters","io","sockets","socketURL","enableLogs","location","origin","socket","connect","socketOptions","mPeer","multiPeersHandler","updateExtraBackup","peersBackup","onMessageEvent","message","peers","sender","onExtraDataUpdated","streamSyncNeeded","stream","streamEvents","streamid","action","onstreamended","allParticipants","participant","localPeerSdpConstraints","OfferToReceiveAudio","sdpConstraints","mandatory","OfferToReceiveVideo","remotePeerSdpConstraints","oneway","isOneWay","direction","isDataOnly","newParticipant","createNewPeer","userPreferences","readyForOffer","attachStreams","waitingForLocalMedia","newParticipationRequest","deletePeer","dontGetRemoteStream","dontAttachLocalStream","connectionDescription","successCallback","onNewParticipant","changedUUID","oldUUID","newUUID","userLeft","onUserLeft","leave","addNegotiatedMessage","on","alreadyConnected","resetProps","emit","onSocketDisconnect","onSocketError","onUserStatusChanged","status","onEntireSessionClosed","useridAlreadyTaken","yourNewUserId","onUserIdAlreadyTaken","onNumberOfBroadcastViewersUpdated","isInitiator","MultiPeers","self","skipPeers","initFileBufferReader","onFileProgress","onFileStart","onFileEnd","getLength","numberOfPeers","peer","selectFirst","firstPeer","getAllParticipants","allPeers","callbcak","send","isNull","enableFileSharing","shareFile","remoteUser","channels","channel","createDataChannel","renegotiate","TextSender","text","getLocalConfig","remoteSdp","streamsToShare","rtcMultiConnection","renegotiatingPeer","peerRef","onLocalSdp","localSdp","onNegotiationNeeded","onLocalCandidate","localCandidate","OnIceCandidateHandler","processCandidates","onDataChannelMessage","isLastChunk","promptNextChunk","onDataChannelError","onDataChannelOpened","onDataChannelClosed","onRemoteStream","streams","onGettingRemoteMedia","onRemoteStreamRemoved","onRemovingRemoteMedia","onPeerStateChanged","states","iceConnectionState","onNegotiationStarted","onNegotiationCompleted","search","disconnectWith","enableMedia","setUserPreferences","localConfig","PeerInitiator","createAnsweringPeer","renegotiatePeer","replaceTrack","track","isVideoTrack","getSenders","rtpSender","kind","lastVideoTrack","lastAudioTrack","warn","sdp","addRemoteSdp","candidate","addRemoteCandidate","isAudio","isVideo","isScreen","onReadyForOffer","onGettingLocalMedia","localStream","onLocalMediaError","constraints","onMediaError","arrayOfUsers","DetectRTC","browser","textReceiver","TextReceiver","parse","onclose","onopen","state","getRemoteStreams","fireEvent","eventName","args","CustomEvent","eventDetail","__exposedProps__","setHarkEvents","streamEvent","getTracks","onspeaking","onsilence","hark","onvolumechange","volume","threshold","setMuteHandlers","addEventListener","muteType","onmute","unmuteType","onunmute","getRandomString","crypto","getRandomValues","navigator","userAgent","token","l","getTime","getRMCMediaElement","autoCreateMediaElement","isAudioOnly","mediaElement","srcObject","setAttribute","streamEndedEvent","currentUserMediaRequest","remove","idInstance","StreamsHandler","onSyncNeeded","aStream","newStreamsArray","played","play","cbFired","then","catch","listenEventHandler","eventHandler","removeEventListener","removeNullEntries","newArray","isString","getUserMedia","captureStream","mozCaptureStream","getContext","pause","drawImage","toDataURL","HTMLVideoElement","HTMLMediaElement","protocol","href","hash","width","height","revokeObjectURL","isNodejs","versions","node","version","webkitGetUserMedia","mozGetUserMedia","isMobileDevice","test","isEdge","msSaveOrOpenBlob","msSaveBlob","isOpera","opera","isFirefox","InstallTrigger","isSafari","isChrome","chrome","isIE","documentMode","getBrowserInfo","appVersion","nameOffset","verOffset","ix","nAgt","browserName","appName","fullVersion","parseFloat","majorVersion","split","substring","isPrivateBrowsing","retry","isDone","currentTrial","maxRetry","isTimeout","id","setInterval","clearInterval","isIE10OrLater","ua","exec","detectPrivateMode","isPrivate","webkitRequestFileSystem","TEMPORARY","indexedDB","db","open","localStorage","setItem","removeItem","isMobile","Android","BlackBerry","iOS","Opera","Windows","any","getOsName","osName","detectDesktopOS","cs","unknown","nVer","os","clientStrings","r","osVersion","getAndroidVersion","osInfo","isCanvasSupportsStreamCapturing","isVideoSupportsStreamCapturing","regexIpv4Local","regexIpv4","regexIpv6","DetectLocalIPAddress","isWebRTCSupported","isPublic","isIpv4","getIPs","ip","getElementById","ipDuplicates","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","iframe","win","contentWindow","peerConfig","optional","RtpDataChannels","servers","iceServers","urls","pc","addStream","addTrack","onicecandidate","handleCandidate","isPromisesSupported","createOffer","setLocalDescription","afterCreateOffer","ipAddress","lines","localDescription","line","MediaDevices","audioInputDevices","audioOutputDevices","videoInputDevices","mediaDevices","enumerateDevices","canEnumerate","MediaStreamTrack","hasMicrophone","hasSpeakers","hasWebcam","isWebsiteHasMicrophonePermissions","isWebsiteHasWebcamPermissions","checkDeviceSupport","getSources","bind","alreadyUsedDevices","devices","_device","device","deviceId","label","isCustomLabel","domain","isORTCSupported","RTCIceGatherer","isScreenCapturingSupported","isNonLocalHost","webAudio","isSupported","isCreateMediaStreamSourceSupported","isAudioContextSupported","isRtpDataChannelsSupported","isSCTPSupportd","isSctpDataChannelsSupported","isGetUserMediaSupported","displayResolution","getAspectRatio","w","h","gcd","displayAspectRatio","toFixed","isWebSocketsSupported","WebSocket","CLOSING","isWebSocketsBlocked","checkWebSocketsSupport","starttime","websocket","onmessage","WebsocketLatency","close","load","isSetSinkIdSupported","isRTPSenderReplaceTracksSupported","isRemoteStreamProcessingSupported","isApplyConstraintsSupported","isMultiMonitorScreenCapturingSupported","MediaStream","webkitMediaStream","module","cordova","el","attachEvent","attachEventListener","listener","useCapture","isAudioPlusTab","audioPlusTab","filter","t","isUnifiedPlanSupportedDefault","canAddTransceiver","RTCRtpTransceiver","tempPc","addTransceiver","isUnifiedPlanSuppored","isUnifiedPlanSupported","sdpSemantics","config","getConfiguration","setCordovaAPIs","plugins","iosrtc","RTCSessionDescription","RTCIceCandidate","enable","selectAudioOutput","iOSDefaultAudioOutputDevice","registerGlobals","stop","defaults","setSdpConstraints","mozRTCSessionDescription","mozRTCIceCandidate","removeStream","allRemoteStreams","localStreams","iceTransports","candidates","turn","relay","stun","reflexive","host","params","iceTransportPolicy","iceCandidatePoolSize","bundlePolicy","rtcpMuxPolicy","optionalArgument","getReceivers","receiver","getLocalStreams","trickleIce","sdpMid","sdpMLineIndex","beforeAddingStream","oniceconnectionstatechange","onsignalingstatechange","iceGatheringState","signalingState","dontDuplicate","ontrack","onended","onremovestream","streamToShare","onremovetrack","removeTrack","remoteCandidate","addIceCandidate","cb","processSdp","setRemoteDescription","isOfferer","setChannelEvents","binaryType","internalSend","ondatachannel","enableDisableVideoEncoding","rtcp","getParameters","encodings","active","setParameters","createOfferOrAnswer","_method","onSettingLocalDescription","nativeClose","CodecsHandler","preferCodec","codecName","splitLines","videoCodecNumbers","vp8LineNumber","vp9LineNumber","h264LineNumber","preferCodecHelper","codec","ignore","preferCodecNumber","newLine","videoCodecNumbersOriginal","newOrder","codecNumber","removeVPX","disableNACK","prioritize","codecMimeType","codecs","mimeType","unshift","splice","removeNonG722","setBAS","bandwidth","findLine","sdpLines","prefix","findLineInRange","startLine","endLine","realEndLine","getCodecPayloadType","sdpLine","pattern","setVideoBitrates","vp8Payload","xgoogle_min_bitrate","xgoogle_max_bitrate","vp8Index","rtxPayload","rtxIndex","rtxFmtpLineIndex","appendrtxNext","setOpusAttributes","opusPayload","opusIndex","opusFmtpLineIndex","appendOpusNext","stereo","maxaveragebitrate","maxplaybackrate","cbr","useinbandfec","usedtx","maxptime","forceStereoAudio","fmtpLineIndex","extractSdp","payload","setApplicationSpecificBandwidth","preferVP9","BandwidthHandler","icePair","iceRestrictions","iceProtocols","udp","tcp","IceServersHandler","getIceServers","setStreamType","chromeMediaSource","mozMediaSource","mediaSource","getUserMediaHandler","mutex","localMediaConstraints","streaming","isBlackBerry","getUserMediaStream","getUserMediaError","getUserMediaFailure","hints","getUserMediaSuccess","successCB","failureCB","getDisplayMedia","queueRequests","returnBack","shift","currentUserMediaRequestOptions","handleType","setHandlers","syncAction","mute","isSyncAction","enabled","isAudioMuted","unmute","graduallyIncreaseVolume","times","afterEach","setTimeoutInteval","numberOfTimes","startedTimes","content","last","isobject","receivingTime","latency","sendingTime","autoTranslateText","original","Translator","TranslateText","translatedText","initialText","packetSize","textToTransfer","sendText","textMessage","packets","chunkInterval","FileProgressBarHandler","handle","progressHelper","updateLabel","progress","position","innerHTML","div","title","filesContainer","insertBefore","firstChild","querySelector","helper","TranslationHandler","language","googKey","newScript","sourceText","encodeURIComponent","randomNumber","response","translations","source","getElementsByTagName","getListOfLanguages","xhr","XMLHttpRequest","onreadystatechange","responseText","languages","useDefaultDevices","preventDuplicateOnStreamEvents","connectSocket","socketAutoReConnect","FirebaseConnection","PubNubConnection","joinRoom","mediaConstraints","getStreamInfoForAdmin","password","isRoomJoined","openRoom","identifier","publicRoomIdentifier","isRoomOpened","selectAll","map","tracks","beforeJoin","dontCaptureUserMedia","invokeGetUserMedia","applyConstraints","setStreamEndHandler","muted","onstream","messageToDeliver","transport","openOrJoin","checkPresence","isRoomExist","captureUserMedia","eventObject","onleave","rejoin","onReConnecting","sessionForced","nonScreenSession","onbeforeunload","arg1","dontCloseSocket","closeBeforeUnload","closeSocket","ignoreBeforeUnload","changeUserId","newUserId","facingMode","lastAudioDevice","lastVideoDevice","sourceId","VoiceActivityDetection","DtlsSrtpKeyAgreement","googImprovedWifiBwe","googScreencastMinBitrate","googIPv6","googDscp","googCpuUnderuseThreshold","googCpuOveruseThreshold","googSuspendBelowMinBitrate","googCpuOveruseDetection","disconnect","closeEntireSession","videosContainer","user","gumCallback","streamCallback","videoConstraints","alert","resetTrack","remoteUsersIds","isRemote","alreadySetEndHandler","participantId","acceptParticipationRequest","invokeSelectFileDialog","paused","poster","snapshot","getSocket","skipStreams","local","remote","setCustomSocketEvent","customEvent","getNumberOfBroadcastViewers","broadcastId","numberOfBroadcastViewers","dontWriteLogs","setCustomSocketHandler","customSocketHandler","_roomid","SSEConnection","dontAttachStream","updateExtraData","beforeRemovingStream","isChromeExtensionAvailable","checkIfChromeExtensionAvailable","isFirefoxExtensionAvailable","getChromeExtensionStatus","modifyScreenConstraints","screen_constraints","isOnline","isLowBandwidth","opt","getExtraData","autoOpenOrJoin","resetScreen","setPassword","errors","ROOM_NOT_AVAILABLE","INVALID_PASSWORD","USERID_NOT_AVAILABLE","ROOM_PERMISSION_DENIED","ROOM_FULL","DID_NOT_JOIN_ANY_ROOM","INVALID_SOCKET","PUBLIC_IDENTIFIER_MISSING","INVALID_ADMIN_CREDENTIAL","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","preload","autoplay","loop","startBattleMode","_v","startPartyMode","_s","AudienceCount","FilesReceived","_e","staticRenderFns","TitleScreenvue_type_script_lang_js_","ShowOverlay","ShowMenu","ShowWelcome","mounted","getExternalIceServers","vue","setupFileTransfer","joinARoom","roomId","lastSelectedFile","room_id","chunk_size","setupWebRTCConnection","fileReceived","connectedWith","doYouWannaReceiveThisFile","yesIWannaReceive","power","requestKeepAwake","bytesToSize","incrementOrDecrementUsers","setFileProgressHandlers","reload","GameSettings","Images","k","sizes","toPrecision","CleanSlideData","methods","requestFullscreen","SetupBattleModeGame","router","SetupPartyModeGame","setFilesReceived","numFiles","views_TitleScreenvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","$defineProperty","createDesc","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","Item","noop","nextTick","env","argv","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask"],"mappings":"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","file":"js/about.ec08d07a.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TitleScreen.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TitleScreen.vue?vue&type=style&index=0&lang=css&\"","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// Last time updated: 2017-08-27 5:48:35 AM UTC\r\n\r\n// ________________\r\n// FileBufferReader\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/FileBufferReader\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\n'use strict';\r\n\r\n(function() {\r\n\r\n    function FileBufferReader() {\r\n        var fbr = this;\r\n        var fbrHelper = new FileBufferReaderHelper();\r\n\r\n        fbr.chunks = {};\r\n        fbr.users = {};\r\n\r\n        fbr.readAsArrayBuffer = function(file, callback, extra) {\r\n            var options = {\r\n                file: file,\r\n                earlyCallback: function(chunk) {\r\n                    callback(fbrClone(chunk, {\r\n                        currentPosition: -1\r\n                    }));\r\n                },\r\n                extra: extra || {\r\n                    userid: 0\r\n                }\r\n            };\r\n\r\n            if (file.extra && Object.keys(file.extra).length) {\r\n                Object.keys(file.extra).forEach(function(key) {\r\n                    options.extra[key] = file.extra[key];\r\n                });\r\n            }\r\n\r\n            fbrHelper.readAsArrayBuffer(fbr, options);\r\n        };\r\n\r\n        fbr.getNextChunk = function(fileUUID, callback, userid) {\r\n            var currentPosition;\r\n\r\n            if (typeof fileUUID.currentPosition !== 'undefined') {\r\n                currentPosition = fileUUID.currentPosition;\r\n                fileUUID = fileUUID.uuid;\r\n            }\r\n\r\n            var allFileChunks = fbr.chunks[fileUUID];\r\n            if (!allFileChunks) {\r\n                return;\r\n            }\r\n\r\n            if (typeof userid !== 'undefined') {\r\n                if (!fbr.users[userid + '']) {\r\n                    fbr.users[userid + ''] = {\r\n                        fileUUID: fileUUID,\r\n                        userid: userid,\r\n                        currentPosition: -1\r\n                    };\r\n                }\r\n\r\n                if (typeof currentPosition !== 'undefined') {\r\n                    fbr.users[userid + ''].currentPosition = currentPosition;\r\n                }\r\n\r\n                fbr.users[userid + ''].currentPosition++;\r\n                currentPosition = fbr.users[userid + ''].currentPosition;\r\n            } else {\r\n                if (typeof currentPosition !== 'undefined') {\r\n                    fbr.chunks[fileUUID].currentPosition = currentPosition;\r\n                }\r\n\r\n                fbr.chunks[fileUUID].currentPosition++;\r\n                currentPosition = fbr.chunks[fileUUID].currentPosition;\r\n            }\r\n\r\n            var nextChunk = allFileChunks[currentPosition];\r\n            if (!nextChunk) {\r\n                delete fbr.chunks[fileUUID];\r\n                fbr.convertToArrayBuffer({\r\n                    chunkMissing: true,\r\n                    currentPosition: currentPosition,\r\n                    uuid: fileUUID\r\n                }, callback);\r\n                return;\r\n            }\r\n\r\n            nextChunk = fbrClone(nextChunk);\r\n\r\n            if (typeof userid !== 'undefined') {\r\n                nextChunk.remoteUserId = userid + '';\r\n            }\r\n\r\n            if (!!nextChunk.start) {\r\n                fbr.onBegin(nextChunk);\r\n            }\r\n\r\n            if (!!nextChunk.end) {\r\n                fbr.onEnd(nextChunk);\r\n            }\r\n\r\n            fbr.onProgress(nextChunk);\r\n\r\n            fbr.convertToArrayBuffer(nextChunk, function(buffer) {\r\n                if (nextChunk.currentPosition == nextChunk.maxChunks) {\r\n                    callback(buffer, true);\r\n                    return;\r\n                }\r\n\r\n                callback(buffer, false);\r\n            });\r\n        };\r\n\r\n        var fbReceiver = new FileBufferReceiver(fbr);\r\n\r\n        fbr.addChunk = function(chunk, callback) {\r\n            if (!chunk) {\r\n                return;\r\n            }\r\n\r\n            fbReceiver.receive(chunk, function(chunk) {\r\n                fbr.convertToArrayBuffer({\r\n                    readyForNextChunk: true,\r\n                    currentPosition: chunk.currentPosition,\r\n                    uuid: chunk.uuid\r\n                }, callback);\r\n            });\r\n        };\r\n\r\n        fbr.chunkMissing = function(chunk) {\r\n            delete fbReceiver.chunks[chunk.uuid];\r\n            delete fbReceiver.chunksWaiters[chunk.uuid];\r\n        };\r\n\r\n        fbr.onBegin = function() {};\r\n        fbr.onEnd = function() {};\r\n        fbr.onProgress = function() {};\r\n\r\n        fbr.convertToObject = FileConverter.ConvertToObject;\r\n        fbr.convertToArrayBuffer = FileConverter.ConvertToArrayBuffer\r\n\r\n        // for backward compatibility----it is redundant.\r\n        fbr.setMultipleUsers = function() {};\r\n\r\n        // extends 'from' object with members from 'to'. If 'to' is null, a deep clone of 'from' is returned\r\n        function fbrClone(from, to) {\r\n            if (from == null || typeof from != \"object\") return from;\r\n            if (from.constructor != Object && from.constructor != Array) return from;\r\n            if (from.constructor == Date || from.constructor == RegExp || from.constructor == Function ||\r\n                from.constructor == String || from.constructor == Number || from.constructor == Boolean)\r\n                return new from.constructor(from);\r\n\r\n            to = to || new from.constructor();\r\n\r\n            for (var name in from) {\r\n                to[name] = typeof to[name] == \"undefined\" ? fbrClone(from[name], null) : to[name];\r\n            }\r\n\r\n            return to;\r\n        }\r\n    }\r\n\r\n    function FileBufferReaderHelper() {\r\n        var fbrHelper = this;\r\n\r\n        function processInWebWorker(_function) {\r\n            var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                'this.onmessage =  function (e) {' + _function.name + '(e.data);}'\r\n            ], {\r\n                type: 'application/javascript'\r\n            }));\r\n\r\n            var worker = new Worker(blob);\r\n            return worker;\r\n        }\r\n\r\n        fbrHelper.readAsArrayBuffer = function(fbr, options) {\r\n            var earlyCallback = options.earlyCallback;\r\n            delete options.earlyCallback;\r\n\r\n            function processChunk(chunk) {\r\n                if (!fbr.chunks[chunk.uuid]) {\r\n                    fbr.chunks[chunk.uuid] = {\r\n                        currentPosition: -1\r\n                    };\r\n                }\r\n\r\n                options.extra = options.extra || {\r\n                    userid: 0\r\n                };\r\n\r\n                chunk.userid = options.userid || options.extra.userid || 0;\r\n                chunk.extra = options.extra;\r\n\r\n                fbr.chunks[chunk.uuid][chunk.currentPosition] = chunk;\r\n\r\n                if (chunk.end && earlyCallback) {\r\n                    earlyCallback(chunk.uuid);\r\n                    earlyCallback = null;\r\n                }\r\n\r\n                // for huge files\r\n                if ((chunk.maxChunks > 200 && chunk.currentPosition == 200) && earlyCallback) {\r\n                    earlyCallback(chunk.uuid);\r\n                    earlyCallback = null;\r\n                }\r\n            }\r\n            if (false && typeof Worker !== 'undefined') {\r\n                var webWorker = processInWebWorker(fileReaderWrapper);\r\n\r\n                webWorker.onmessage = function(event) {\r\n                    processChunk(event.data);\r\n                };\r\n\r\n                webWorker.postMessage(options);\r\n            } else {\r\n                fileReaderWrapper(options, processChunk);\r\n            }\r\n        };\r\n\r\n        function fileReaderWrapper(options, callback) {\r\n            callback = callback || function(chunk) {\r\n                postMessage(chunk);\r\n            };\r\n\r\n            var file = options.file;\r\n            if (!file.uuid) {\r\n                file.uuid = (Math.random() * 100).toString().replace(/\\./g, '');\r\n            }\r\n\r\n            var chunkSize = options.chunkSize || 15 * 1000;\r\n            if (options.extra && options.extra.chunkSize) {\r\n                chunkSize = options.extra.chunkSize;\r\n            }\r\n\r\n            var sliceId = 0;\r\n            var cacheSize = chunkSize;\r\n\r\n            var chunksPerSlice = Math.floor(Math.min(100000000, cacheSize) / chunkSize);\r\n            var sliceSize = chunksPerSlice * chunkSize;\r\n            var maxChunks = Math.ceil(file.size / chunkSize);\r\n\r\n            file.maxChunks = maxChunks;\r\n\r\n            var numOfChunksInSlice;\r\n            var currentPosition = 0;\r\n            var hasEntireFile;\r\n            var chunks = [];\r\n\r\n            callback({\r\n                currentPosition: currentPosition,\r\n                uuid: file.uuid,\r\n                maxChunks: maxChunks,\r\n                size: file.size,\r\n                name: file.name,\r\n                type: file.type,\r\n                lastModifiedDate: (file.lastModifiedDate || new Date()).toString(),\r\n                start: true\r\n            });\r\n\r\n            var blob, reader = new FileReader();\r\n\r\n            reader.onloadend = function(evt) {\r\n                if (evt.target.readyState == FileReader.DONE) {\r\n                    addChunks(file.name, evt.target.result, function() {\r\n                        sliceId++;\r\n                        if ((sliceId + 1) * sliceSize < file.size) {\r\n                            blob = file.slice(sliceId * sliceSize, (sliceId + 1) * sliceSize);\r\n                            reader.readAsArrayBuffer(blob);\r\n                        } else if (sliceId * sliceSize < file.size) {\r\n                            blob = file.slice(sliceId * sliceSize, file.size);\r\n                            reader.readAsArrayBuffer(blob);\r\n                        } else {\r\n                            file.url = URL.createObjectURL(file);\r\n                            callback({\r\n                                currentPosition: currentPosition,\r\n                                uuid: file.uuid,\r\n                                maxChunks: maxChunks,\r\n                                size: file.size,\r\n                                name: file.name,\r\n                                lastModifiedDate: (file.lastModifiedDate || new Date()).toString(),\r\n                                url: URL.createObjectURL(file),\r\n                                type: file.type,\r\n                                end: true\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n\r\n            currentPosition += 1;\r\n\r\n            blob = file.slice(sliceId * sliceSize, (sliceId + 1) * sliceSize);\r\n            reader.readAsArrayBuffer(blob);\r\n\r\n            function addChunks(fileName, binarySlice, addChunkCallback) {\r\n                numOfChunksInSlice = Math.ceil(binarySlice.byteLength / chunkSize);\r\n                for (var i = 0; i < numOfChunksInSlice; i++) {\r\n                    var start = i * chunkSize;\r\n                    chunks[currentPosition] = binarySlice.slice(start, Math.min(start + chunkSize, binarySlice.byteLength));\r\n\r\n                    callback({\r\n                        uuid: file.uuid,\r\n                        buffer: chunks[currentPosition],\r\n                        currentPosition: currentPosition,\r\n                        maxChunks: maxChunks,\r\n\r\n                        size: file.size,\r\n                        name: file.name,\r\n                        lastModifiedDate: (file.lastModifiedDate || new Date()).toString(),\r\n                        type: file.type\r\n                    });\r\n\r\n                    currentPosition++;\r\n                }\r\n\r\n                if (currentPosition == maxChunks) {\r\n                    hasEntireFile = true;\r\n                }\r\n\r\n                addChunkCallback();\r\n            }\r\n        }\r\n    }\r\n\r\n    function FileSelector() {\r\n        var selector = this;\r\n\r\n        var noFileSelectedCallback = function() {};\r\n\r\n        selector.selectSingleFile = function(callback, failure) {\r\n            if (failure) {\r\n                noFileSelectedCallback = failure;\r\n            }\r\n\r\n            selectFile(callback);\r\n        };\r\n        selector.selectMultipleFiles = function(callback, failure) {\r\n            if (failure) {\r\n                noFileSelectedCallback = failure;\r\n            }\r\n\r\n            selectFile(callback, true);\r\n        };\r\n        selector.selectDirectory = function(callback, failure) {\r\n            if (failure) {\r\n                noFileSelectedCallback = failure;\r\n            }\r\n\r\n            selectFile(callback, true, true);\r\n        };\r\n\r\n        selector.accept = '*.*';\r\n\r\n        function selectFile(callback, multiple, directory) {\r\n            callback = callback || function() {};\r\n\r\n            var file = document.createElement('input');\r\n            file.type = 'file';\r\n\r\n            if (multiple) {\r\n                file.multiple = true;\r\n            }\r\n\r\n            if (directory) {\r\n                file.webkitdirectory = true;\r\n            }\r\n\r\n            file.accept = selector.accept;\r\n\r\n            file.onclick = function() {\r\n                file.clickStarted = true;\r\n            };\r\n\r\n            document.body.onfocus = function() {\r\n                setTimeout(function() {\r\n                    if (!file.clickStarted) return;\r\n                    file.clickStarted = false;\r\n\r\n                    if (!file.value) {\r\n                        noFileSelectedCallback();\r\n                    }\r\n                }, 500);\r\n            };\r\n\r\n            file.onchange = function() {\r\n                if (multiple) {\r\n                    if (!file.files.length) {\r\n                        console.error('No file selected.');\r\n                        return;\r\n                    }\r\n\r\n                    var arr = [];\r\n                    Array.from(file.files).forEach(function(file) {\r\n                        file.url = file.webkitRelativePath;\r\n                        arr.push(file);\r\n                    });\r\n                    callback(arr);\r\n                    return;\r\n                }\r\n\r\n                if (!file.files[0]) {\r\n                    console.error('No file selected.');\r\n                    return;\r\n                }\r\n\r\n                callback(file.files[0]);\r\n\r\n                file.parentNode.removeChild(file);\r\n            };\r\n            file.style.display = 'none';\r\n            (document.body || document.documentElement).appendChild(file);\r\n            fireClickEvent(file);\r\n        }\r\n\r\n        function getValidFileName(fileName) {\r\n            if (!fileName) {\r\n                fileName = 'file' + (new Date).toISOString().replace(/:|\\.|-/g, '')\r\n            }\r\n\r\n            var a = fileName;\r\n            a = a.replace(/^.*[\\\\\\/]([^\\\\\\/]*)$/i, \"$1\");\r\n            a = a.replace(/\\s/g, \"_\");\r\n            a = a.replace(/,/g, '');\r\n            a = a.toLowerCase();\r\n            return a;\r\n        }\r\n\r\n        function fireClickEvent(element) {\r\n            if (typeof element.click === 'function') {\r\n                element.click();\r\n                return;\r\n            }\r\n\r\n            if (typeof element.change === 'function') {\r\n                element.change();\r\n                return;\r\n            }\r\n\r\n            if (typeof document.createEvent('Event') !== 'undefined') {\r\n                var event = document.createEvent('Event');\r\n\r\n                if (typeof event.initEvent === 'function' && typeof element.dispatchEvent === 'function') {\r\n                    event.initEvent('click', true, true);\r\n                    element.dispatchEvent(event);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            var event = new MouseEvent('click', {\r\n                view: window,\r\n                bubbles: true,\r\n                cancelable: true\r\n            });\r\n\r\n            element.dispatchEvent(event);\r\n        }\r\n    }\r\n\r\n    function FileBufferReceiver(fbr) {\r\n        var fbReceiver = this;\r\n\r\n        fbReceiver.chunks = {};\r\n        fbReceiver.chunksWaiters = {};\r\n\r\n        function receive(chunk, callback) {\r\n            if (!chunk.uuid) {\r\n                fbr.convertToObject(chunk, function(object) {\r\n                    receive(object);\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (chunk.start && !fbReceiver.chunks[chunk.uuid]) {\r\n                fbReceiver.chunks[chunk.uuid] = {};\r\n                if (fbr.onBegin) fbr.onBegin(chunk);\r\n            }\r\n\r\n            if (!chunk.end && chunk.buffer) {\r\n                fbReceiver.chunks[chunk.uuid][chunk.currentPosition] = chunk.buffer;\r\n            }\r\n\r\n            if (chunk.end) {\r\n                var chunksObject = fbReceiver.chunks[chunk.uuid];\r\n                var chunksArray = [];\r\n                Object.keys(chunksObject).forEach(function(item, idx) {\r\n                    chunksArray.push(chunksObject[item]);\r\n                });\r\n\r\n                var blob = new Blob(chunksArray, {\r\n                    type: chunk.type\r\n                });\r\n                blob = merge(blob, chunk);\r\n                blob.url = URL.createObjectURL(blob);\r\n                blob.uuid = chunk.uuid;\r\n\r\n                if (!blob.size) console.error('Something went wrong. Blob Size is 0.');\r\n\r\n                if (fbr.onEnd) fbr.onEnd(blob);\r\n\r\n                // clear system memory\r\n                delete fbReceiver.chunks[chunk.uuid];\r\n                delete fbReceiver.chunksWaiters[chunk.uuid];\r\n            }\r\n\r\n            if (chunk.buffer && fbr.onProgress) fbr.onProgress(chunk);\r\n\r\n            if (!chunk.end) {\r\n                callback(chunk);\r\n\r\n                fbReceiver.chunksWaiters[chunk.uuid] = function() {\r\n                    function looper() {\r\n                        if (!chunk.buffer) {\r\n                            return;\r\n                        }\r\n\r\n                        if (!fbReceiver.chunks[chunk.uuid]) {\r\n                            return;\r\n                        }\r\n\r\n                        if (chunk.currentPosition != chunk.maxChunks && !fbReceiver.chunks[chunk.uuid][chunk.currentPosition]) {\r\n                            callback(chunk);\r\n                            setTimeout(looper, 5000);\r\n                        }\r\n                    }\r\n                    setTimeout(looper, 5000);\r\n                };\r\n\r\n                fbReceiver.chunksWaiters[chunk.uuid]();\r\n            }\r\n        }\r\n\r\n        fbReceiver.receive = receive;\r\n    }\r\n\r\n    var FileConverter = {\r\n        ConvertToArrayBuffer: function(object, callback) {\r\n            binarize.pack(object, function(dataView) {\r\n                callback(dataView.buffer);\r\n            });\r\n        },\r\n        ConvertToObject: function(buffer, callback) {\r\n            binarize.unpack(buffer, callback);\r\n        }\r\n    };\r\n\r\n    function merge(mergein, mergeto) {\r\n        if (!mergein) mergein = {};\r\n        if (!mergeto) return mergein;\r\n\r\n        for (var item in mergeto) {\r\n            try {\r\n                mergein[item] = mergeto[item];\r\n            } catch (e) {}\r\n        }\r\n        return mergein;\r\n    }\r\n\r\n    var debug = false;\r\n\r\n    var BIG_ENDIAN = false,\r\n        LITTLE_ENDIAN = true,\r\n        TYPE_LENGTH = Uint8Array.BYTES_PER_ELEMENT,\r\n        LENGTH_LENGTH = Uint16Array.BYTES_PER_ELEMENT,\r\n        BYTES_LENGTH = Uint32Array.BYTES_PER_ELEMENT;\r\n\r\n    var Types = {\r\n        NULL: 0,\r\n        UNDEFINED: 1,\r\n        STRING: 2,\r\n        NUMBER: 3,\r\n        BOOLEAN: 4,\r\n        ARRAY: 5,\r\n        OBJECT: 6,\r\n        INT8ARRAY: 7,\r\n        INT16ARRAY: 8,\r\n        INT32ARRAY: 9,\r\n        UINT8ARRAY: 10,\r\n        UINT16ARRAY: 11,\r\n        UINT32ARRAY: 12,\r\n        FLOAT32ARRAY: 13,\r\n        FLOAT64ARRAY: 14,\r\n        ARRAYBUFFER: 15,\r\n        BLOB: 16,\r\n        FILE: 16,\r\n        BUFFER: 17 // Special type for node.js\r\n    };\r\n\r\n    if (debug) {\r\n        var TypeNames = [\r\n            'NULL',\r\n            'UNDEFINED',\r\n            'STRING',\r\n            'NUMBER',\r\n            'BOOLEAN',\r\n            'ARRAY',\r\n            'OBJECT',\r\n            'INT8ARRAY',\r\n            'INT16ARRAY',\r\n            'INT32ARRAY',\r\n            'UINT8ARRAY',\r\n            'UINT16ARRAY',\r\n            'UINT32ARRAY',\r\n            'FLOAT32ARRAY',\r\n            'FLOAT64ARRAY',\r\n            'ARRAYBUFFER',\r\n            'BLOB',\r\n            'BUFFER'\r\n        ];\r\n    }\r\n\r\n    var Length = [\r\n        null, // Types.NULL\r\n        null, // Types.UNDEFINED\r\n        'Uint16', // Types.STRING\r\n        'Float64', // Types.NUMBER\r\n        'Uint8', // Types.BOOLEAN\r\n        null, // Types.ARRAY\r\n        null, // Types.OBJECT\r\n        'Int8', // Types.INT8ARRAY\r\n        'Int16', // Types.INT16ARRAY\r\n        'Int32', // Types.INT32ARRAY\r\n        'Uint8', // Types.UINT8ARRAY\r\n        'Uint16', // Types.UINT16ARRAY\r\n        'Uint32', // Types.UINT32ARRAY\r\n        'Float32', // Types.FLOAT32ARRAY\r\n        'Float64', // Types.FLOAT64ARRAY\r\n        'Uint8', // Types.ARRAYBUFFER\r\n        'Uint8', // Types.BLOB, Types.FILE\r\n        'Uint8' // Types.BUFFER\r\n    ];\r\n\r\n    var binary_dump = function(view, start, length) {\r\n        var table = [],\r\n            endianness = BIG_ENDIAN,\r\n            ROW_LENGTH = 40;\r\n        table[0] = [];\r\n        for (var i = 0; i < ROW_LENGTH; i++) {\r\n            table[0][i] = i < 10 ? '0' + i.toString(10) : i.toString(10);\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var code = view.getUint8(start + i, endianness);\r\n            var index = ~~(i / ROW_LENGTH) + 1;\r\n            if (typeof table[index] === 'undefined') table[index] = [];\r\n            table[index][i % ROW_LENGTH] = code < 16 ? '0' + code.toString(16) : code.toString(16);\r\n        }\r\n        console.log('%c' + table[0].join(' '), 'font-weight: bold;');\r\n        for (i = 1; i < table.length; i++) {\r\n            console.log(table[i].join(' '));\r\n        }\r\n    };\r\n\r\n    var find_type = function(obj) {\r\n        var type = undefined;\r\n\r\n        if (obj === undefined) {\r\n            type = Types.UNDEFINED;\r\n\r\n        } else if (obj === null) {\r\n            type = Types.NULL;\r\n\r\n        } else {\r\n            var const_name = obj.constructor.name;\r\n            var const_name_reflection = obj.constructor.toString().match(/\\w+/g)[1];\r\n            if (const_name !== undefined && Types[const_name.toUpperCase()] !== undefined) {\r\n                // return type by .constructor.name if possible\r\n                type = Types[const_name.toUpperCase()];\r\n\r\n            } else if (const_name_reflection !== undefined && Types[const_name_reflection.toUpperCase()] !== undefined) {\r\n                type = Types[const_name_reflection.toUpperCase()];\r\n\r\n            } else {\r\n                // Work around when constructor.name is not defined\r\n                switch (typeof obj) {\r\n                    case 'string':\r\n                        type = Types.STRING;\r\n                        break;\r\n\r\n                    case 'number':\r\n                        type = Types.NUMBER;\r\n                        break;\r\n\r\n                    case 'boolean':\r\n                        type = Types.BOOLEAN;\r\n                        break;\r\n\r\n                    case 'object':\r\n                        if (obj instanceof Array) {\r\n                            type = Types.ARRAY;\r\n\r\n                        } else if (obj instanceof Int8Array) {\r\n                            type = Types.INT8ARRAY;\r\n\r\n                        } else if (obj instanceof Int16Array) {\r\n                            type = Types.INT16ARRAY;\r\n\r\n                        } else if (obj instanceof Int32Array) {\r\n                            type = Types.INT32ARRAY;\r\n\r\n                        } else if (obj instanceof Uint8Array) {\r\n                            type = Types.UINT8ARRAY;\r\n\r\n                        } else if (obj instanceof Uint16Array) {\r\n                            type = Types.UINT16ARRAY;\r\n\r\n                        } else if (obj instanceof Uint32Array) {\r\n                            type = Types.UINT32ARRAY;\r\n\r\n                        } else if (obj instanceof Float32Array) {\r\n                            type = Types.FLOAT32ARRAY;\r\n\r\n                        } else if (obj instanceof Float64Array) {\r\n                            type = Types.FLOAT64ARRAY;\r\n\r\n                        } else if (obj instanceof ArrayBuffer) {\r\n                            type = Types.ARRAYBUFFER;\r\n\r\n                        } else if (obj instanceof Blob) { // including File\r\n                            type = Types.BLOB;\r\n\r\n                        } else if (obj instanceof Buffer) { // node.js only\r\n                            type = Types.BUFFER;\r\n\r\n                        } else if (obj instanceof Object) {\r\n                            type = Types.OBJECT;\r\n\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        return type;\r\n    };\r\n\r\n    var utf16_utf8 = function(string) {\r\n        return unescape(encodeURIComponent(string));\r\n    };\r\n\r\n    var utf8_utf16 = function(bytes) {\r\n        return decodeURIComponent(escape(bytes));\r\n    };\r\n\r\n    /**\r\n     * packs seriarized elements array into a packed ArrayBuffer\r\n     * @param  {Array} serialized Serialized array of elements.\r\n     * @return {DataView} view of packed binary\r\n     */\r\n    var pack = function(serialized) {\r\n        var cursor = 0,\r\n            i = 0,\r\n            j = 0,\r\n            endianness = BIG_ENDIAN;\r\n\r\n        var ab = new ArrayBuffer(serialized[0].byte_length + serialized[0].header_size);\r\n        var view = new DataView(ab);\r\n\r\n        for (i = 0; i < serialized.length; i++) {\r\n            var start = cursor,\r\n                header_size = serialized[i].header_size,\r\n                type = serialized[i].type,\r\n                length = serialized[i].length,\r\n                value = serialized[i].value,\r\n                byte_length = serialized[i].byte_length,\r\n                type_name = Length[type],\r\n                unit = type_name === null ? 0 : window[type_name + 'Array'].BYTES_PER_ELEMENT;\r\n\r\n            // Set type\r\n            if (type === Types.BUFFER) {\r\n                // on node.js Blob is emulated using Buffer type\r\n                view.setUint8(cursor, Types.BLOB, endianness);\r\n            } else {\r\n                view.setUint8(cursor, type, endianness);\r\n            }\r\n            cursor += TYPE_LENGTH;\r\n\r\n            if (debug) {\r\n                console.info('Packing', type, TypeNames[type]);\r\n            }\r\n\r\n            // Set length if required\r\n            if (type === Types.ARRAY || type === Types.OBJECT) {\r\n                view.setUint16(cursor, length, endianness);\r\n                cursor += LENGTH_LENGTH;\r\n\r\n                if (debug) {\r\n                    console.info('Content Length', length);\r\n                }\r\n            }\r\n\r\n            // Set byte length\r\n            view.setUint32(cursor, byte_length, endianness);\r\n            cursor += BYTES_LENGTH;\r\n\r\n            if (debug) {\r\n                console.info('Header Size', header_size, 'bytes');\r\n                console.info('Byte Length', byte_length, 'bytes');\r\n            }\r\n\r\n            switch (type) {\r\n                case Types.NULL:\r\n                case Types.UNDEFINED:\r\n                    // NULL and UNDEFINED doesn't have any payload\r\n                    break;\r\n\r\n                case Types.STRING:\r\n                    if (debug) {\r\n                        console.info('Actual Content %c\"' + value + '\"', 'font-weight:bold;');\r\n                    }\r\n                    for (j = 0; j < length; j++, cursor += unit) {\r\n                        view.setUint16(cursor, value.charCodeAt(j), endianness);\r\n                    }\r\n                    break;\r\n\r\n                case Types.NUMBER:\r\n                case Types.BOOLEAN:\r\n                    if (debug) {\r\n                        console.info('%c' + value.toString(), 'font-weight:bold;');\r\n                    }\r\n                    view['set' + type_name](cursor, value, endianness);\r\n                    cursor += unit;\r\n                    break;\r\n\r\n                case Types.INT8ARRAY:\r\n                case Types.INT16ARRAY:\r\n                case Types.INT32ARRAY:\r\n                case Types.UINT8ARRAY:\r\n                case Types.UINT16ARRAY:\r\n                case Types.UINT32ARRAY:\r\n                case Types.FLOAT32ARRAY:\r\n                case Types.FLOAT64ARRAY:\r\n                    var _view = new Uint8Array(view.buffer, cursor, byte_length);\r\n                    _view.set(new Uint8Array(value.buffer));\r\n                    cursor += byte_length;\r\n                    break;\r\n\r\n                case Types.ARRAYBUFFER:\r\n                case Types.BUFFER:\r\n                    var _view = new Uint8Array(view.buffer, cursor, byte_length);\r\n                    _view.set(new Uint8Array(value));\r\n                    cursor += byte_length;\r\n                    break;\r\n\r\n                case Types.BLOB:\r\n                case Types.ARRAY:\r\n                case Types.OBJECT:\r\n                    break;\r\n\r\n                default:\r\n                    throw 'TypeError: Unexpected type found.';\r\n            }\r\n\r\n            if (debug) {\r\n                binary_dump(view, start, cursor - start);\r\n            }\r\n        }\r\n\r\n        return view;\r\n    };\r\n\r\n    /**\r\n     * Unpack binary data into an object with value and cursor\r\n     * @param  {DataView} view [description]\r\n     * @param  {Number} cursor [description]\r\n     * @return {Object}\r\n     */\r\n    var unpack = function(view, cursor) {\r\n        var i = 0,\r\n            endianness = BIG_ENDIAN,\r\n            start = cursor;\r\n        var type, length, byte_length, value, elem;\r\n\r\n        // Retrieve \"type\"\r\n        type = view.getUint8(cursor, endianness);\r\n        cursor += TYPE_LENGTH;\r\n\r\n        if (debug) {\r\n            console.info('Unpacking', type, TypeNames[type]);\r\n        }\r\n\r\n        // Retrieve \"length\"\r\n        if (type === Types.ARRAY || type === Types.OBJECT) {\r\n            length = view.getUint16(cursor, endianness);\r\n            cursor += LENGTH_LENGTH;\r\n\r\n            if (debug) {\r\n                console.info('Content Length', length);\r\n            }\r\n        }\r\n\r\n        // Retrieve \"byte_length\"\r\n        byte_length = view.getUint32(cursor, endianness);\r\n        cursor += BYTES_LENGTH;\r\n\r\n        if (debug) {\r\n            console.info('Byte Length', byte_length, 'bytes');\r\n        }\r\n\r\n        var type_name = Length[type];\r\n        var unit = type_name === null ? 0 : window[type_name + 'Array'].BYTES_PER_ELEMENT;\r\n\r\n        switch (type) {\r\n            case Types.NULL:\r\n            case Types.UNDEFINED:\r\n                if (debug) {\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                // NULL and UNDEFINED doesn't have any octet\r\n                value = null;\r\n                break;\r\n\r\n            case Types.STRING:\r\n                length = byte_length / unit;\r\n                var string = [];\r\n                for (i = 0; i < length; i++) {\r\n                    var code = view.getUint16(cursor, endianness);\r\n                    cursor += unit;\r\n                    string.push(String.fromCharCode(code));\r\n                }\r\n                value = string.join('');\r\n                if (debug) {\r\n                    console.info('Actual Content %c\"' + value + '\"', 'font-weight:bold;');\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                break;\r\n\r\n            case Types.NUMBER:\r\n                value = view.getFloat64(cursor, endianness);\r\n                cursor += unit;\r\n                if (debug) {\r\n                    console.info('Actual Content %c\"' + value.toString() + '\"', 'font-weight:bold;');\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                break;\r\n\r\n            case Types.BOOLEAN:\r\n                value = view.getUint8(cursor, endianness) === 1 ? true : false;\r\n                cursor += unit;\r\n                if (debug) {\r\n                    console.info('Actual Content %c\"' + value.toString() + '\"', 'font-weight:bold;');\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                break;\r\n\r\n            case Types.INT8ARRAY:\r\n            case Types.INT16ARRAY:\r\n            case Types.INT32ARRAY:\r\n            case Types.UINT8ARRAY:\r\n            case Types.UINT16ARRAY:\r\n            case Types.UINT32ARRAY:\r\n            case Types.FLOAT32ARRAY:\r\n            case Types.FLOAT64ARRAY:\r\n            case Types.ARRAYBUFFER:\r\n                elem = view.buffer.slice(cursor, cursor + byte_length);\r\n                cursor += byte_length;\r\n\r\n                // If ArrayBuffer\r\n                if (type === Types.ARRAYBUFFER) {\r\n                    value = elem;\r\n\r\n                    // If other TypedArray\r\n                } else {\r\n                    value = new window[type_name + 'Array'](elem);\r\n                }\r\n\r\n                if (debug) {\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                break;\r\n\r\n            case Types.BLOB:\r\n                if (debug) {\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                // If Blob is available (on browser)\r\n                if (window.Blob) {\r\n                    var mime = unpack(view, cursor);\r\n                    var buffer = unpack(view, mime.cursor);\r\n                    cursor = buffer.cursor;\r\n                    value = new Blob([buffer.value], {\r\n                        type: mime.value\r\n                    });\r\n                } else {\r\n                    // node.js implementation goes here\r\n                    elem = view.buffer.slice(cursor, cursor + byte_length);\r\n                    cursor += byte_length;\r\n                    // node.js implementatino uses Buffer to help Blob\r\n                    value = new Buffer(elem);\r\n                }\r\n                break;\r\n\r\n            case Types.ARRAY:\r\n                if (debug) {\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                value = [];\r\n                for (i = 0; i < length; i++) {\r\n                    // Retrieve array element\r\n                    elem = unpack(view, cursor);\r\n                    cursor = elem.cursor;\r\n                    value.push(elem.value);\r\n                }\r\n                break;\r\n\r\n            case Types.OBJECT:\r\n                if (debug) {\r\n                    binary_dump(view, start, cursor - start);\r\n                }\r\n                value = {};\r\n                for (i = 0; i < length; i++) {\r\n                    // Retrieve object key and value in sequence\r\n                    var key = unpack(view, cursor);\r\n                    var val = unpack(view, key.cursor);\r\n                    cursor = val.cursor;\r\n                    value[key.value] = val.value;\r\n                }\r\n                break;\r\n\r\n            default:\r\n                throw 'TypeError: Type not supported.';\r\n        }\r\n        return {\r\n            value: value,\r\n            cursor: cursor\r\n        };\r\n    };\r\n\r\n    /**\r\n     * deferred function to process multiple serialization in order\r\n     * @param  {array}   array    [description]\r\n     * @param  {Function} callback [description]\r\n     * @return {void} no return value\r\n     */\r\n    var deferredSerialize = function(array, callback) {\r\n        var length = array.length,\r\n            results = [],\r\n            count = 0,\r\n            byte_length = 0;\r\n        for (var i = 0; i < array.length; i++) {\r\n            (function(index) {\r\n                serialize(array[index], function(result) {\r\n                    // store results in order\r\n                    results[index] = result;\r\n                    // count byte length\r\n                    byte_length += result[0].header_size + result[0].byte_length;\r\n                    // when all results are on table\r\n                    if (++count === length) {\r\n                        // finally concatenate all reuslts into a single array in order\r\n                        var array = [];\r\n                        for (var j = 0; j < results.length; j++) {\r\n                            array = array.concat(results[j]);\r\n                        }\r\n                        callback(array, byte_length);\r\n                    }\r\n                });\r\n            })(i);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Serializes object and return byte_length\r\n     * @param  {mixed} obj JavaScript object you want to serialize\r\n     * @return {Array} Serialized array object\r\n     */\r\n    var serialize = function(obj, callback) {\r\n        var subarray = [],\r\n            unit = 1,\r\n            header_size = TYPE_LENGTH + BYTES_LENGTH,\r\n            type, byte_length = 0,\r\n            length = 0,\r\n            value = obj;\r\n\r\n        type = find_type(obj);\r\n\r\n        unit = Length[type] === undefined || Length[type] === null ? 0 :\r\n            window[Length[type] + 'Array'].BYTES_PER_ELEMENT;\r\n\r\n        switch (type) {\r\n            case Types.UNDEFINED:\r\n            case Types.NULL:\r\n                break;\r\n\r\n            case Types.NUMBER:\r\n            case Types.BOOLEAN:\r\n                byte_length = unit;\r\n                break;\r\n\r\n            case Types.STRING:\r\n                length = obj.length;\r\n                byte_length += length * unit;\r\n                break;\r\n\r\n            case Types.INT8ARRAY:\r\n            case Types.INT16ARRAY:\r\n            case Types.INT32ARRAY:\r\n            case Types.UINT8ARRAY:\r\n            case Types.UINT16ARRAY:\r\n            case Types.UINT32ARRAY:\r\n            case Types.FLOAT32ARRAY:\r\n            case Types.FLOAT64ARRAY:\r\n                length = obj.length;\r\n                byte_length += length * unit;\r\n                break;\r\n\r\n            case Types.ARRAY:\r\n                deferredSerialize(obj, function(subarray, byte_length) {\r\n                    callback([{\r\n                        type: type,\r\n                        length: obj.length,\r\n                        header_size: header_size + LENGTH_LENGTH,\r\n                        byte_length: byte_length,\r\n                        value: null\r\n                    }].concat(subarray));\r\n                });\r\n                return;\r\n\r\n            case Types.OBJECT:\r\n                var deferred = [];\r\n                for (var key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        deferred.push(key);\r\n                        deferred.push(obj[key]);\r\n                        length++;\r\n                    }\r\n                }\r\n                deferredSerialize(deferred, function(subarray, byte_length) {\r\n                    callback([{\r\n                        type: type,\r\n                        length: length,\r\n                        header_size: header_size + LENGTH_LENGTH,\r\n                        byte_length: byte_length,\r\n                        value: null\r\n                    }].concat(subarray));\r\n                });\r\n                return;\r\n\r\n            case Types.ARRAYBUFFER:\r\n                byte_length += obj.byteLength;\r\n                break;\r\n\r\n            case Types.BLOB:\r\n                var mime_type = obj.type;\r\n                var reader = new FileReader();\r\n                reader.onload = function(e) {\r\n                    deferredSerialize([mime_type, e.target.result], function(subarray, byte_length) {\r\n                        callback([{\r\n                            type: type,\r\n                            length: length,\r\n                            header_size: header_size,\r\n                            byte_length: byte_length,\r\n                            value: null\r\n                        }].concat(subarray));\r\n                    });\r\n                };\r\n                reader.onerror = function(e) {\r\n                    throw 'FileReader Error: ' + e;\r\n                };\r\n                reader.readAsArrayBuffer(obj);\r\n                return;\r\n\r\n            case Types.BUFFER:\r\n                byte_length += obj.length;\r\n                break;\r\n\r\n            default:\r\n                throw 'TypeError: Type \"' + obj.constructor.name + '\" not supported.';\r\n        }\r\n\r\n        callback([{\r\n            type: type,\r\n            length: length,\r\n            header_size: header_size,\r\n            byte_length: byte_length,\r\n            value: value\r\n        }].concat(subarray));\r\n    };\r\n\r\n    /**\r\n     * Deserialize binary and return JavaScript object\r\n     * @param  ArrayBuffer buffer ArrayBuffer you want to deserialize\r\n     * @return mixed              Retrieved JavaScript object\r\n     */\r\n    var deserialize = function(buffer, callback) {\r\n        var view = buffer instanceof DataView ? buffer : new DataView(buffer);\r\n        var result = unpack(view, 0);\r\n        return result.value;\r\n    };\r\n\r\n    if (debug) {\r\n        window.Test = {\r\n            BIG_ENDIAN: BIG_ENDIAN,\r\n            LITTLE_ENDIAN: LITTLE_ENDIAN,\r\n            Types: Types,\r\n            pack: pack,\r\n            unpack: unpack,\r\n            serialize: serialize,\r\n            deserialize: deserialize\r\n        };\r\n    }\r\n\r\n    var binarize = {\r\n        pack: function(obj, callback) {\r\n            try {\r\n                if (debug) console.info('%cPacking Start', 'font-weight: bold; color: red;', obj);\r\n                serialize(obj, function(array) {\r\n                    if (debug) console.info('Serialized Object', array);\r\n                    callback(pack(array));\r\n                });\r\n            } catch (e) {\r\n                throw e;\r\n            }\r\n        },\r\n        unpack: function(buffer, callback) {\r\n            try {\r\n                if (debug) console.info('%cUnpacking Start', 'font-weight: bold; color: red;', buffer);\r\n                var result = deserialize(buffer);\r\n                if (debug) console.info('Deserialized Object', result);\r\n                callback(result);\r\n            } catch (e) {\r\n                throw e;\r\n            }\r\n        }\r\n    };\r\n\r\n    window.FileConverter = FileConverter;\r\n    window.FileSelector = FileSelector;\r\n    window.FileBufferReader = FileBufferReader;\r\n})();\r\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict';\r\n\r\n// Last time updated: 2019-06-15 4:26:11 PM UTC\r\n\r\n// _________________________\r\n// RTCMultiConnection v3.6.9\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/RTCMultiConnection\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\nvar RTCMultiConnection = function(roomid, forceOptions) {\r\n\r\n    var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n    (function(that) {\r\n        if (!that) {\r\n            return;\r\n        }\r\n\r\n        if (typeof window !== 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (typeof global === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        global.navigator = {\r\n            userAgent: browserFakeUserAgent,\r\n            getUserMedia: function() {}\r\n        };\r\n\r\n        if (!global.console) {\r\n            global.console = {};\r\n        }\r\n\r\n        if (typeof global.console.debug === 'undefined') {\r\n            global.console.debug = global.console.info = global.console.error = global.console.log = global.console.log || function() {\r\n                console.log(arguments);\r\n            };\r\n        }\r\n\r\n        if (typeof document === 'undefined') {\r\n            /*global document:true */\r\n            that.document = {};\r\n\r\n            document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n                var obj = {\r\n                    getContext: function() {\r\n                        return obj;\r\n                    },\r\n                    play: function() {},\r\n                    pause: function() {},\r\n                    drawImage: function() {},\r\n                    toDataURL: function() {\r\n                        return '';\r\n                    }\r\n                };\r\n                return obj;\r\n            };\r\n\r\n            document.addEventListener = document.removeEventListener = that.addEventListener = that.removeEventListener = function() {};\r\n\r\n            that.HTMLVideoElement = that.HTMLMediaElement = function() {};\r\n        }\r\n\r\n        if (typeof io === 'undefined') {\r\n            that.io = function() {\r\n                return {\r\n                    on: function(eventName, callback) {\r\n                        callback = callback || function() {};\r\n\r\n                        if (eventName === 'connect') {\r\n                            callback();\r\n                        }\r\n                    },\r\n                    emit: function(eventName, data, callback) {\r\n                        callback = callback || function() {};\r\n                        if (eventName === 'open-room' || eventName === 'join-room') {\r\n                            callback(true, data.sessionid, null);\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        }\r\n\r\n        if (typeof location === 'undefined') {\r\n            /*global location:true */\r\n            that.location = {\r\n                protocol: 'file:',\r\n                href: '',\r\n                hash: '',\r\n                origin: 'self'\r\n            };\r\n        }\r\n\r\n        if (typeof screen === 'undefined') {\r\n            /*global screen:true */\r\n            that.screen = {\r\n                width: 0,\r\n                height: 0\r\n            };\r\n        }\r\n\r\n        if (typeof URL === 'undefined') {\r\n            /*global screen:true */\r\n            that.URL = {\r\n                createObjectURL: function() {\r\n                    return '';\r\n                },\r\n                revokeObjectURL: function() {\r\n                    return '';\r\n                }\r\n            };\r\n        }\r\n\r\n        /*global window:true */\r\n        that.window = global;\r\n    })(typeof global !== 'undefined' ? global : null);\r\n\r\n    function SocketConnection(connection, connectCallback) {\r\n        function isData(session) {\r\n            return !session.audio && !session.video && !session.screen && session.data;\r\n        }\r\n\r\n        var parameters = '';\r\n\r\n        parameters += '?userid=' + connection.userid;\r\n        parameters += '&sessionid=' + connection.sessionid;\r\n        parameters += '&msgEvent=' + connection.socketMessageEvent;\r\n        parameters += '&socketCustomEvent=' + connection.socketCustomEvent;\r\n        parameters += '&autoCloseEntireSession=' + !!connection.autoCloseEntireSession;\r\n\r\n        if (connection.session.broadcast === true) {\r\n            parameters += '&oneToMany=true';\r\n        }\r\n\r\n        parameters += '&maxParticipantsAllowed=' + connection.maxParticipantsAllowed;\r\n\r\n        if (connection.enableScalableBroadcast) {\r\n            parameters += '&enableScalableBroadcast=true';\r\n            parameters += '&maxRelayLimitPerUser=' + (connection.maxRelayLimitPerUser || 2);\r\n        }\r\n\r\n        parameters += '&extra=' + JSON.stringify(connection.extra || {});\r\n\r\n        if (connection.socketCustomParameters) {\r\n            parameters += connection.socketCustomParameters;\r\n        }\r\n\r\n        try {\r\n            io.sockets = {};\r\n        } catch (e) {};\r\n\r\n        if (!connection.socketURL) {\r\n            connection.socketURL = '/';\r\n        }\r\n\r\n        if (connection.socketURL.substr(connection.socketURL.length - 1, 1) != '/') {\r\n            // connection.socketURL = 'https://domain.com:9001/';\r\n            throw '\"socketURL\" MUST end with a slash.';\r\n        }\r\n\r\n        if (connection.enableLogs) {\r\n            if (connection.socketURL == '/') {\r\n                console.info('socket.io url is: ', location.origin + '/');\r\n            } else {\r\n                console.info('socket.io url is: ', connection.socketURL);\r\n            }\r\n        }\r\n\r\n        try {\r\n            connection.socket = io(connection.socketURL + parameters);\r\n        } catch (e) {\r\n            connection.socket = io.connect(connection.socketURL + parameters, connection.socketOptions);\r\n        }\r\n\r\n        var mPeer = connection.multiPeersHandler;\r\n\r\n        connection.socket.on('extra-data-updated', function(remoteUserId, extra) {\r\n            if (!connection.peers[remoteUserId]) return;\r\n            connection.peers[remoteUserId].extra = extra;\r\n\r\n            connection.onExtraDataUpdated({\r\n                userid: remoteUserId,\r\n                extra: extra\r\n            });\r\n\r\n            updateExtraBackup(remoteUserId, extra);\r\n        });\r\n\r\n        function updateExtraBackup(remoteUserId, extra) {\r\n            if (!connection.peersBackup[remoteUserId]) {\r\n                connection.peersBackup[remoteUserId] = {\r\n                    userid: remoteUserId,\r\n                    extra: {}\r\n                };\r\n            }\r\n\r\n            connection.peersBackup[remoteUserId].extra = extra;\r\n        }\r\n\r\n        function onMessageEvent(message) {\r\n            if (message.remoteUserId != connection.userid) return;\r\n\r\n            if (connection.peers[message.sender] && connection.peers[message.sender].extra != message.message.extra) {\r\n                connection.peers[message.sender].extra = message.extra;\r\n                connection.onExtraDataUpdated({\r\n                    userid: message.sender,\r\n                    extra: message.extra\r\n                });\r\n\r\n                updateExtraBackup(message.sender, message.extra);\r\n            }\r\n\r\n            if (message.message.streamSyncNeeded && connection.peers[message.sender]) {\r\n                var stream = connection.streamEvents[message.message.streamid];\r\n                if (!stream || !stream.stream) {\r\n                    return;\r\n                }\r\n\r\n                var action = message.message.action;\r\n\r\n                if (action === 'ended' || action === 'inactive' || action === 'stream-removed') {\r\n                    if (connection.peersBackup[stream.userid]) {\r\n                        stream.extra = connection.peersBackup[stream.userid].extra;\r\n                    }\r\n                    connection.onstreamended(stream);\r\n                    return;\r\n                }\r\n\r\n                var type = message.message.type != 'both' ? message.message.type : null;\r\n\r\n                if (typeof stream.stream[action] == 'function') {\r\n                    stream.stream[action](type);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (message.message === 'dropPeerConnection') {\r\n                connection.deletePeer(message.sender);\r\n                return;\r\n            }\r\n\r\n            if (message.message.allParticipants) {\r\n                if (message.message.allParticipants.indexOf(message.sender) === -1) {\r\n                    message.message.allParticipants.push(message.sender);\r\n                }\r\n\r\n                message.message.allParticipants.forEach(function(participant) {\r\n                    mPeer[!connection.peers[participant] ? 'createNewPeer' : 'renegotiatePeer'](participant, {\r\n                        localPeerSdpConstraints: {\r\n                            OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                            OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                        },\r\n                        remotePeerSdpConstraints: {\r\n                            OfferToReceiveAudio: connection.session.oneway ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                            OfferToReceiveVideo: connection.session.oneway ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                        },\r\n                        isOneWay: !!connection.session.oneway || connection.direction === 'one-way',\r\n                        isDataOnly: isData(connection.session)\r\n                    });\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (message.message.newParticipant) {\r\n                if (message.message.newParticipant == connection.userid) return;\r\n                if (!!connection.peers[message.message.newParticipant]) return;\r\n\r\n                mPeer.createNewPeer(message.message.newParticipant, message.message.userPreferences || {\r\n                    localPeerSdpConstraints: {\r\n                        OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    },\r\n                    remotePeerSdpConstraints: {\r\n                        OfferToReceiveAudio: connection.session.oneway ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: connection.session.oneway ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    },\r\n                    isOneWay: !!connection.session.oneway || connection.direction === 'one-way',\r\n                    isDataOnly: isData(connection.session)\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (message.message.readyForOffer) {\r\n                if (connection.attachStreams.length) {\r\n                    connection.waitingForLocalMedia = false;\r\n                }\r\n\r\n                if (connection.waitingForLocalMedia) {\r\n                    // if someone is waiting to join you\r\n                    // make sure that we've local media before making a handshake\r\n                    setTimeout(function() {\r\n                        onMessageEvent(message);\r\n                    }, 1);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (message.message.newParticipationRequest && message.sender !== connection.userid) {\r\n                if (connection.peers[message.sender]) {\r\n                    connection.deletePeer(message.sender);\r\n                }\r\n\r\n                var userPreferences = {\r\n                    extra: message.extra || {},\r\n                    localPeerSdpConstraints: message.message.remotePeerSdpConstraints || {\r\n                        OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    },\r\n                    remotePeerSdpConstraints: message.message.localPeerSdpConstraints || {\r\n                        OfferToReceiveAudio: connection.session.oneway ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: connection.session.oneway ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    },\r\n                    isOneWay: typeof message.message.isOneWay !== 'undefined' ? message.message.isOneWay : !!connection.session.oneway || connection.direction === 'one-way',\r\n                    isDataOnly: typeof message.message.isDataOnly !== 'undefined' ? message.message.isDataOnly : isData(connection.session),\r\n                    dontGetRemoteStream: typeof message.message.isOneWay !== 'undefined' ? message.message.isOneWay : !!connection.session.oneway || connection.direction === 'one-way',\r\n                    dontAttachLocalStream: !!message.message.dontGetRemoteStream,\r\n                    connectionDescription: message,\r\n                    successCallback: function() {}\r\n                };\r\n\r\n                connection.onNewParticipant(message.sender, userPreferences);\r\n                return;\r\n            }\r\n\r\n            if (message.message.changedUUID) {\r\n                if (connection.peers[message.message.oldUUID]) {\r\n                    connection.peers[message.message.newUUID] = connection.peers[message.message.oldUUID];\r\n                    delete connection.peers[message.message.oldUUID];\r\n                }\r\n            }\r\n\r\n            if (message.message.userLeft) {\r\n                mPeer.onUserLeft(message.sender);\r\n\r\n                if (!!message.message.autoCloseEntireSession) {\r\n                    connection.leave();\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            mPeer.addNegotiatedMessage(message.message, message.sender);\r\n        }\r\n\r\n        connection.socket.on(connection.socketMessageEvent, onMessageEvent);\r\n\r\n        var alreadyConnected = false;\r\n\r\n        connection.socket.resetProps = function() {\r\n            alreadyConnected = false;\r\n        };\r\n\r\n        connection.socket.on('connect', function() {\r\n            if (alreadyConnected) {\r\n                return;\r\n            }\r\n            alreadyConnected = true;\r\n\r\n            if (connection.enableLogs) {\r\n                console.info('socket.io connection is opened.');\r\n            }\r\n\r\n            setTimeout(function() {\r\n                connection.socket.emit('extra-data-updated', connection.extra);\r\n            }, 1000);\r\n\r\n            if (connectCallback) {\r\n                connectCallback(connection.socket);\r\n            }\r\n        });\r\n\r\n        connection.socket.on('disconnect', function(event) {\r\n            connection.onSocketDisconnect(event);\r\n        });\r\n\r\n        connection.socket.on('error', function(event) {\r\n            connection.onSocketError(event);\r\n        });\r\n\r\n        connection.socket.on('user-disconnected', function(remoteUserId) {\r\n            if (remoteUserId === connection.userid) {\r\n                return;\r\n            }\r\n\r\n            connection.onUserStatusChanged({\r\n                userid: remoteUserId,\r\n                status: 'offline',\r\n                extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra || {} : {}\r\n            });\r\n\r\n            connection.deletePeer(remoteUserId);\r\n        });\r\n\r\n        connection.socket.on('user-connected', function(userid) {\r\n            if (userid === connection.userid) {\r\n                return;\r\n            }\r\n\r\n            connection.onUserStatusChanged({\r\n                userid: userid,\r\n                status: 'online',\r\n                extra: connection.peers[userid] ? connection.peers[userid].extra || {} : {}\r\n            });\r\n        });\r\n\r\n        connection.socket.on('closed-entire-session', function(sessionid, extra) {\r\n            connection.leave();\r\n            connection.onEntireSessionClosed({\r\n                sessionid: sessionid,\r\n                userid: sessionid,\r\n                extra: extra\r\n            });\r\n        });\r\n\r\n        connection.socket.on('userid-already-taken', function(useridAlreadyTaken, yourNewUserId) {\r\n            connection.onUserIdAlreadyTaken(useridAlreadyTaken, yourNewUserId);\r\n        });\r\n\r\n        connection.socket.on('logs', function(log) {\r\n            if (!connection.enableLogs) return;\r\n            console.debug('server-logs', log);\r\n        });\r\n\r\n        connection.socket.on('number-of-broadcast-viewers-updated', function(data) {\r\n            connection.onNumberOfBroadcastViewersUpdated(data);\r\n        });\r\n\r\n        connection.socket.on('set-isInitiator-true', function(sessionid) {\r\n            if (sessionid != connection.sessionid) return;\r\n            connection.isInitiator = true;\r\n        });\r\n    }\r\n\r\n    function MultiPeers(connection) {\r\n        var self = this;\r\n\r\n        var skipPeers = ['getAllParticipants', 'getLength', 'selectFirst', 'streams', 'send', 'forEach'];\r\n        connection.peers = {\r\n            getLength: function() {\r\n                var numberOfPeers = 0;\r\n                for (var peer in this) {\r\n                    if (skipPeers.indexOf(peer) == -1) {\r\n                        numberOfPeers++;\r\n                    }\r\n                }\r\n                return numberOfPeers;\r\n            },\r\n            selectFirst: function() {\r\n                var firstPeer;\r\n                for (var peer in this) {\r\n                    if (skipPeers.indexOf(peer) == -1) {\r\n                        firstPeer = this[peer];\r\n                    }\r\n                }\r\n                return firstPeer;\r\n            },\r\n            getAllParticipants: function(sender) {\r\n                var allPeers = [];\r\n                for (var peer in this) {\r\n                    if (skipPeers.indexOf(peer) == -1 && peer != sender) {\r\n                        allPeers.push(peer);\r\n                    }\r\n                }\r\n                return allPeers;\r\n            },\r\n            forEach: function(callbcak) {\r\n                this.getAllParticipants().forEach(function(participant) {\r\n                    callbcak(connection.peers[participant]);\r\n                });\r\n            },\r\n            send: function(data, remoteUserId) {\r\n                var that = this;\r\n\r\n                if (!isNull(data.size) && !isNull(data.type)) {\r\n                    if (connection.enableFileSharing) {\r\n                        self.shareFile(data, remoteUserId);\r\n                        return;\r\n                    }\r\n\r\n                    if (typeof data !== 'string') {\r\n                        data = JSON.stringify(data);\r\n                    }\r\n                }\r\n\r\n                if (data.type !== 'text' && !(data instanceof ArrayBuffer) && !(data instanceof DataView)) {\r\n                    TextSender.send({\r\n                        text: data,\r\n                        channel: this,\r\n                        connection: connection,\r\n                        remoteUserId: remoteUserId\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                if (data.type === 'text') {\r\n                    data = JSON.stringify(data);\r\n                }\r\n\r\n                if (remoteUserId) {\r\n                    var remoteUser = connection.peers[remoteUserId];\r\n                    if (remoteUser) {\r\n                        if (!remoteUser.channels.length) {\r\n                            connection.peers[remoteUserId].createDataChannel();\r\n                            connection.renegotiate(remoteUserId);\r\n                            setTimeout(function() {\r\n                                that.send(data, remoteUserId);\r\n                            }, 3000);\r\n                            return;\r\n                        }\r\n\r\n                        remoteUser.channels.forEach(function(channel) {\r\n                            channel.send(data);\r\n                        });\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                this.getAllParticipants().forEach(function(participant) {\r\n                    if (!that[participant].channels.length) {\r\n                        connection.peers[participant].createDataChannel();\r\n                        connection.renegotiate(participant);\r\n                        setTimeout(function() {\r\n                            that[participant].channels.forEach(function(channel) {\r\n                                channel.send(data);\r\n                            });\r\n                        }, 3000);\r\n                        return;\r\n                    }\r\n\r\n                    that[participant].channels.forEach(function(channel) {\r\n                        channel.send(data);\r\n                    });\r\n                });\r\n            }\r\n        };\r\n\r\n        this.uuid = connection.userid;\r\n\r\n        this.getLocalConfig = function(remoteSdp, remoteUserId, userPreferences) {\r\n            if (!userPreferences) {\r\n                userPreferences = {};\r\n            }\r\n\r\n            return {\r\n                streamsToShare: userPreferences.streamsToShare || {},\r\n                rtcMultiConnection: connection,\r\n                connectionDescription: userPreferences.connectionDescription,\r\n                userid: remoteUserId,\r\n                localPeerSdpConstraints: userPreferences.localPeerSdpConstraints,\r\n                remotePeerSdpConstraints: userPreferences.remotePeerSdpConstraints,\r\n                dontGetRemoteStream: !!userPreferences.dontGetRemoteStream,\r\n                dontAttachLocalStream: !!userPreferences.dontAttachLocalStream,\r\n                renegotiatingPeer: !!userPreferences.renegotiatingPeer,\r\n                peerRef: userPreferences.peerRef,\r\n                channels: userPreferences.channels || [],\r\n                onLocalSdp: function(localSdp) {\r\n                    self.onNegotiationNeeded(localSdp, remoteUserId);\r\n                },\r\n                onLocalCandidate: function(localCandidate) {\r\n                    localCandidate = OnIceCandidateHandler.processCandidates(connection, localCandidate)\r\n                    if (localCandidate) {\r\n                        self.onNegotiationNeeded(localCandidate, remoteUserId);\r\n                    }\r\n                },\r\n                remoteSdp: remoteSdp,\r\n                onDataChannelMessage: function(message) {\r\n                    if (!connection.fbr && connection.enableFileSharing) initFileBufferReader();\r\n\r\n                    if (typeof message == 'string' || !connection.enableFileSharing) {\r\n                        self.onDataChannelMessage(message, remoteUserId);\r\n                        return;\r\n                    }\r\n\r\n                    var that = this;\r\n\r\n                    if (message instanceof ArrayBuffer || message instanceof DataView) {\r\n                        connection.fbr.convertToObject(message, function(object) {\r\n                            that.onDataChannelMessage(object);\r\n                        });\r\n                        return;\r\n                    }\r\n\r\n                    if (message.readyForNextChunk) {\r\n                        connection.fbr.getNextChunk(message, function(nextChunk, isLastChunk) {\r\n                            connection.peers[remoteUserId].channels.forEach(function(channel) {\r\n                                channel.send(nextChunk);\r\n                            });\r\n                        }, remoteUserId);\r\n                        return;\r\n                    }\r\n\r\n                    if (message.chunkMissing) {\r\n                        connection.fbr.chunkMissing(message);\r\n                        return;\r\n                    }\r\n\r\n                    connection.fbr.addChunk(message, function(promptNextChunk) {\r\n                        connection.peers[remoteUserId].peer.channel.send(promptNextChunk);\r\n                    });\r\n                },\r\n                onDataChannelError: function(error) {\r\n                    self.onDataChannelError(error, remoteUserId);\r\n                },\r\n                onDataChannelOpened: function(channel) {\r\n                    self.onDataChannelOpened(channel, remoteUserId);\r\n                },\r\n                onDataChannelClosed: function(event) {\r\n                    self.onDataChannelClosed(event, remoteUserId);\r\n                },\r\n                onRemoteStream: function(stream) {\r\n                    if (connection.peers[remoteUserId]) {\r\n                        connection.peers[remoteUserId].streams.push(stream);\r\n                    }\r\n\r\n                    self.onGettingRemoteMedia(stream, remoteUserId);\r\n                },\r\n                onRemoteStreamRemoved: function(stream) {\r\n                    self.onRemovingRemoteMedia(stream, remoteUserId);\r\n                },\r\n                onPeerStateChanged: function(states) {\r\n                    self.onPeerStateChanged(states);\r\n\r\n                    if (states.iceConnectionState === 'new') {\r\n                        self.onNegotiationStarted(remoteUserId, states);\r\n                    }\r\n\r\n                    if (states.iceConnectionState === 'connected') {\r\n                        self.onNegotiationCompleted(remoteUserId, states);\r\n                    }\r\n\r\n                    if (states.iceConnectionState.search(/closed|failed/gi) !== -1) {\r\n                        self.onUserLeft(remoteUserId);\r\n                        self.disconnectWith(remoteUserId);\r\n                    }\r\n                }\r\n            };\r\n        };\r\n\r\n        this.createNewPeer = function(remoteUserId, userPreferences) {\r\n            if (connection.maxParticipantsAllowed <= connection.getAllParticipants().length) {\r\n                return;\r\n            }\r\n\r\n            userPreferences = userPreferences || {};\r\n\r\n            if (connection.isInitiator && !!connection.session.audio && connection.session.audio === 'two-way' && !userPreferences.streamsToShare) {\r\n                userPreferences.isOneWay = false;\r\n                userPreferences.isDataOnly = false;\r\n                userPreferences.session = connection.session;\r\n            }\r\n\r\n            if (!userPreferences.isOneWay && !userPreferences.isDataOnly) {\r\n                userPreferences.isOneWay = true;\r\n                this.onNegotiationNeeded({\r\n                    enableMedia: true,\r\n                    userPreferences: userPreferences\r\n                }, remoteUserId);\r\n                return;\r\n            }\r\n\r\n            userPreferences = connection.setUserPreferences(userPreferences, remoteUserId);\r\n            var localConfig = this.getLocalConfig(null, remoteUserId, userPreferences);\r\n            connection.peers[remoteUserId] = new PeerInitiator(localConfig);\r\n        };\r\n\r\n        this.createAnsweringPeer = function(remoteSdp, remoteUserId, userPreferences) {\r\n            userPreferences = connection.setUserPreferences(userPreferences || {}, remoteUserId);\r\n\r\n            var localConfig = this.getLocalConfig(remoteSdp, remoteUserId, userPreferences);\r\n            connection.peers[remoteUserId] = new PeerInitiator(localConfig);\r\n        };\r\n\r\n        this.renegotiatePeer = function(remoteUserId, userPreferences, remoteSdp) {\r\n            if (!connection.peers[remoteUserId]) {\r\n                if (connection.enableLogs) {\r\n                    console.error('Peer (' + remoteUserId + ') does not exist. Renegotiation skipped.');\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (!userPreferences) {\r\n                userPreferences = {};\r\n            }\r\n\r\n            userPreferences.renegotiatingPeer = true;\r\n            userPreferences.peerRef = connection.peers[remoteUserId].peer;\r\n            userPreferences.channels = connection.peers[remoteUserId].channels;\r\n\r\n            var localConfig = this.getLocalConfig(remoteSdp, remoteUserId, userPreferences);\r\n\r\n            connection.peers[remoteUserId] = new PeerInitiator(localConfig);\r\n        };\r\n\r\n        this.replaceTrack = function(track, remoteUserId, isVideoTrack) {\r\n            if (!connection.peers[remoteUserId]) {\r\n                throw 'This peer (' + remoteUserId + ') does not exist.';\r\n            }\r\n\r\n            var peer = connection.peers[remoteUserId].peer;\r\n\r\n            if (!!peer.getSenders && typeof peer.getSenders === 'function' && peer.getSenders().length) {\r\n                peer.getSenders().forEach(function(rtpSender) {\r\n                    if (isVideoTrack && rtpSender.track.kind === 'video') {\r\n                        connection.peers[remoteUserId].peer.lastVideoTrack = rtpSender.track;\r\n                        rtpSender.replaceTrack(track);\r\n                    }\r\n\r\n                    if (!isVideoTrack && rtpSender.track.kind === 'audio') {\r\n                        connection.peers[remoteUserId].peer.lastAudioTrack = rtpSender.track;\r\n                        rtpSender.replaceTrack(track);\r\n                    }\r\n                });\r\n                return;\r\n            }\r\n\r\n            console.warn('RTPSender.replaceTrack is NOT supported.');\r\n            this.renegotiatePeer(remoteUserId);\r\n        };\r\n\r\n        this.onNegotiationNeeded = function(message, remoteUserId) {};\r\n        this.addNegotiatedMessage = function(message, remoteUserId) {\r\n            if (message.type && message.sdp) {\r\n                if (message.type == 'answer') {\r\n                    if (connection.peers[remoteUserId]) {\r\n                        connection.peers[remoteUserId].addRemoteSdp(message);\r\n                    }\r\n                }\r\n\r\n                if (message.type == 'offer') {\r\n                    if (message.renegotiatingPeer) {\r\n                        this.renegotiatePeer(remoteUserId, null, message);\r\n                    } else {\r\n                        this.createAnsweringPeer(message, remoteUserId);\r\n                    }\r\n                }\r\n\r\n                if (connection.enableLogs) {\r\n                    console.log('Remote peer\\'s sdp:', message.sdp);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (message.candidate) {\r\n                if (connection.peers[remoteUserId]) {\r\n                    connection.peers[remoteUserId].addRemoteCandidate(message);\r\n                }\r\n\r\n                if (connection.enableLogs) {\r\n                    console.log('Remote peer\\'s candidate pairs:', message.candidate);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (message.enableMedia) {\r\n                connection.session = message.userPreferences.session || connection.session;\r\n\r\n                if (connection.session.oneway && connection.attachStreams.length) {\r\n                    connection.attachStreams = [];\r\n                }\r\n\r\n                if (message.userPreferences.isDataOnly && connection.attachStreams.length) {\r\n                    connection.attachStreams.length = [];\r\n                }\r\n\r\n                var streamsToShare = {};\r\n                connection.attachStreams.forEach(function(stream) {\r\n                    streamsToShare[stream.streamid] = {\r\n                        isAudio: !!stream.isAudio,\r\n                        isVideo: !!stream.isVideo,\r\n                        isScreen: !!stream.isScreen\r\n                    };\r\n                });\r\n                message.userPreferences.streamsToShare = streamsToShare;\r\n\r\n                self.onNegotiationNeeded({\r\n                    readyForOffer: true,\r\n                    userPreferences: message.userPreferences\r\n                }, remoteUserId);\r\n            }\r\n\r\n            if (message.readyForOffer) {\r\n                connection.onReadyForOffer(remoteUserId, message.userPreferences);\r\n            }\r\n\r\n            function cb(stream) {\r\n                gumCallback(stream, message, remoteUserId);\r\n            }\r\n        };\r\n\r\n        function gumCallback(stream, message, remoteUserId) {\r\n            var streamsToShare = {};\r\n            connection.attachStreams.forEach(function(stream) {\r\n                streamsToShare[stream.streamid] = {\r\n                    isAudio: !!stream.isAudio,\r\n                    isVideo: !!stream.isVideo,\r\n                    isScreen: !!stream.isScreen\r\n                };\r\n            });\r\n            message.userPreferences.streamsToShare = streamsToShare;\r\n\r\n            self.onNegotiationNeeded({\r\n                readyForOffer: true,\r\n                userPreferences: message.userPreferences\r\n            }, remoteUserId);\r\n        }\r\n\r\n        this.onGettingRemoteMedia = function(stream, remoteUserId) {};\r\n        this.onRemovingRemoteMedia = function(stream, remoteUserId) {};\r\n        this.onGettingLocalMedia = function(localStream) {};\r\n        this.onLocalMediaError = function(error, constraints) {\r\n            connection.onMediaError(error, constraints);\r\n        };\r\n\r\n        function initFileBufferReader() {\r\n            connection.fbr = new FileBufferReader();\r\n            connection.fbr.onProgress = function(chunk) {\r\n                connection.onFileProgress(chunk);\r\n            };\r\n            connection.fbr.onBegin = function(file) {\r\n                connection.onFileStart(file);\r\n            };\r\n            connection.fbr.onEnd = function(file) {\r\n                connection.onFileEnd(file);\r\n            };\r\n        }\r\n\r\n        this.shareFile = function(file, remoteUserId) {\r\n            initFileBufferReader();\r\n\r\n            connection.fbr.readAsArrayBuffer(file, function(uuid) {\r\n                var arrayOfUsers = connection.getAllParticipants();\r\n\r\n                if (remoteUserId) {\r\n                    arrayOfUsers = [remoteUserId];\r\n                }\r\n\r\n                arrayOfUsers.forEach(function(participant) {\r\n                    connection.fbr.getNextChunk(uuid, function(nextChunk) {\r\n                        connection.peers[participant].channels.forEach(function(channel) {\r\n                            channel.send(nextChunk);\r\n                        });\r\n                    }, participant);\r\n                });\r\n            }, {\r\n                userid: connection.userid,\r\n                // extra: connection.extra,\r\n                chunkSize: DetectRTC.browser.name === 'Firefox' ? 15 * 1000 : connection.chunkSize || 0\r\n            });\r\n        };\r\n\r\n        if (typeof 'TextReceiver' !== 'undefined') {\r\n            var textReceiver = new TextReceiver(connection);\r\n        }\r\n\r\n        this.onDataChannelMessage = function(message, remoteUserId) {\r\n            textReceiver.receive(JSON.parse(message), remoteUserId, connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {});\r\n        };\r\n\r\n        this.onDataChannelClosed = function(event, remoteUserId) {\r\n            event.userid = remoteUserId;\r\n            event.extra = connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {};\r\n            connection.onclose(event);\r\n        };\r\n\r\n        this.onDataChannelError = function(error, remoteUserId) {\r\n            error.userid = remoteUserId;\r\n            event.extra = connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {};\r\n            connection.onerror(error);\r\n        };\r\n\r\n        this.onDataChannelOpened = function(channel, remoteUserId) {\r\n            // keep last channel only; we are not expecting parallel/channels channels\r\n            if (connection.peers[remoteUserId].channels.length) {\r\n                connection.peers[remoteUserId].channels = [channel];\r\n                return;\r\n            }\r\n\r\n            connection.peers[remoteUserId].channels.push(channel);\r\n            connection.onopen({\r\n                userid: remoteUserId,\r\n                extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {},\r\n                channel: channel\r\n            });\r\n        };\r\n\r\n        this.onPeerStateChanged = function(state) {\r\n            connection.onPeerStateChanged(state);\r\n        };\r\n\r\n        this.onNegotiationStarted = function(remoteUserId, states) {};\r\n        this.onNegotiationCompleted = function(remoteUserId, states) {};\r\n\r\n        this.getRemoteStreams = function(remoteUserId) {\r\n            remoteUserId = remoteUserId || connection.peers.getAllParticipants()[0];\r\n            return connection.peers[remoteUserId] ? connection.peers[remoteUserId].streams : [];\r\n        };\r\n    }\r\n\r\n    'use strict';\r\n\r\n    // Last Updated On: 2019-01-10 5:32:55 AM UTC\r\n\r\n    // ________________\r\n    // DetectRTC v1.3.9\r\n\r\n    // Open-Sourced: https://github.com/muaz-khan/DetectRTC\r\n\r\n    // --------------------------------------------------\r\n    // Muaz Khan     - www.MuazKhan.com\r\n    // MIT License   - www.WebRTC-Experiment.com/licence\r\n    // --------------------------------------------------\r\n\r\n    (function() {\r\n\r\n        var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n        var isNodejs = typeof process === 'object' && typeof process.versions === 'object' && process.versions.node && /*node-process*/ !process.browser;\r\n        if (isNodejs) {\r\n            var version = process.versions.node.toString().replace('v', '');\r\n            browserFakeUserAgent = 'Nodejs/' + version + ' (NodeOS) AppleWebKit/' + version + ' (KHTML, like Gecko) Nodejs/' + version + ' Nodejs/' + version\r\n        }\r\n\r\n        (function(that) {\r\n            if (typeof window !== 'undefined') {\r\n                return;\r\n            }\r\n\r\n            if (typeof window === 'undefined' && typeof global !== 'undefined') {\r\n                global.navigator = {\r\n                    userAgent: browserFakeUserAgent,\r\n                    getUserMedia: function() {}\r\n                };\r\n\r\n                /*global window:true */\r\n                that.window = global;\r\n            } else if (typeof window === 'undefined') {\r\n                // window = this;\r\n            }\r\n\r\n            if (typeof location === 'undefined') {\r\n                /*global location:true */\r\n                that.location = {\r\n                    protocol: 'file:',\r\n                    href: '',\r\n                    hash: ''\r\n                };\r\n            }\r\n\r\n            if (typeof screen === 'undefined') {\r\n                /*global screen:true */\r\n                that.screen = {\r\n                    width: 0,\r\n                    height: 0\r\n                };\r\n            }\r\n        })(typeof global !== 'undefined' ? global : window);\r\n\r\n        /*global navigator:true */\r\n        var navigator = window.navigator;\r\n\r\n        if (typeof navigator !== 'undefined') {\r\n            if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n                navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n            }\r\n\r\n            if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n                navigator.getUserMedia = navigator.mozGetUserMedia;\r\n            }\r\n        } else {\r\n            navigator = {\r\n                getUserMedia: function() {},\r\n                userAgent: browserFakeUserAgent\r\n            };\r\n        }\r\n\r\n        var isMobileDevice = !!(/Android|webOS|iPhone|iPad|iPod|BB10|BlackBerry|IEMobile|Opera Mini|Mobile|mobile/i.test(navigator.userAgent || ''));\r\n\r\n        var isEdge = navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveOrOpenBlob || !!navigator.msSaveBlob);\r\n\r\n        var isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\r\n        var isFirefox = typeof window.InstallTrigger !== 'undefined';\r\n        var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n        var isChrome = !!window.chrome && !isOpera;\r\n        var isIE = typeof document !== 'undefined' && !!document.documentMode && !isEdge;\r\n\r\n        // this one can also be used:\r\n        // https://www.websocket.org/js/stuff.js (DetectBrowser.js)\r\n\r\n        function getBrowserInfo() {\r\n            var nVer = navigator.appVersion;\r\n            var nAgt = navigator.userAgent;\r\n            var browserName = navigator.appName;\r\n            var fullVersion = '' + parseFloat(navigator.appVersion);\r\n            var majorVersion = parseInt(navigator.appVersion, 10);\r\n            var nameOffset, verOffset, ix;\r\n\r\n            // both and safri and chrome has same userAgent\r\n            if (isSafari && !isChrome && nAgt.indexOf('CriOS') !== -1) {\r\n                isSafari = false;\r\n                isChrome = true;\r\n            }\r\n\r\n            // In Opera, the true version is after 'Opera' or after 'Version'\r\n            if (isOpera) {\r\n                browserName = 'Opera';\r\n                try {\r\n                    fullVersion = navigator.userAgent.split('OPR/')[1].split(' ')[0];\r\n                    majorVersion = fullVersion.split('.')[0];\r\n                } catch (e) {\r\n                    fullVersion = '0.0.0.0';\r\n                    majorVersion = 0;\r\n                }\r\n            }\r\n            // In MSIE version <=10, the true version is after 'MSIE' in userAgent\r\n            // In IE 11, look for the string after 'rv:'\r\n            else if (isIE) {\r\n                verOffset = nAgt.indexOf('rv:');\r\n                if (verOffset > 0) { //IE 11\r\n                    fullVersion = nAgt.substring(verOffset + 3);\r\n                } else { //IE 10 or earlier\r\n                    verOffset = nAgt.indexOf('MSIE');\r\n                    fullVersion = nAgt.substring(verOffset + 5);\r\n                }\r\n                browserName = 'IE';\r\n            }\r\n            // In Chrome, the true version is after 'Chrome' \r\n            else if (isChrome) {\r\n                verOffset = nAgt.indexOf('Chrome');\r\n                browserName = 'Chrome';\r\n                fullVersion = nAgt.substring(verOffset + 7);\r\n            }\r\n            // In Safari, the true version is after 'Safari' or after 'Version' \r\n            else if (isSafari) {\r\n                verOffset = nAgt.indexOf('Safari');\r\n\r\n                browserName = 'Safari';\r\n                fullVersion = nAgt.substring(verOffset + 7);\r\n\r\n                if ((verOffset = nAgt.indexOf('Version')) !== -1) {\r\n                    fullVersion = nAgt.substring(verOffset + 8);\r\n                }\r\n\r\n                if (navigator.userAgent.indexOf('Version/') !== -1) {\r\n                    fullVersion = navigator.userAgent.split('Version/')[1].split(' ')[0];\r\n                }\r\n            }\r\n            // In Firefox, the true version is after 'Firefox' \r\n            else if (isFirefox) {\r\n                verOffset = nAgt.indexOf('Firefox');\r\n                browserName = 'Firefox';\r\n                fullVersion = nAgt.substring(verOffset + 8);\r\n            }\r\n\r\n            // In most other browsers, 'name/version' is at the end of userAgent \r\n            else if ((nameOffset = nAgt.lastIndexOf(' ') + 1) < (verOffset = nAgt.lastIndexOf('/'))) {\r\n                browserName = nAgt.substring(nameOffset, verOffset);\r\n                fullVersion = nAgt.substring(verOffset + 1);\r\n\r\n                if (browserName.toLowerCase() === browserName.toUpperCase()) {\r\n                    browserName = navigator.appName;\r\n                }\r\n            }\r\n\r\n            if (isEdge) {\r\n                browserName = 'Edge';\r\n                fullVersion = navigator.userAgent.split('Edge/')[1];\r\n                // fullVersion = parseInt(navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)[2], 10).toString();\r\n            }\r\n\r\n            // trim the fullVersion string at semicolon/space/bracket if present\r\n            if ((ix = fullVersion.search(/[; \\)]/)) !== -1) {\r\n                fullVersion = fullVersion.substring(0, ix);\r\n            }\r\n\r\n            majorVersion = parseInt('' + fullVersion, 10);\r\n\r\n            if (isNaN(majorVersion)) {\r\n                fullVersion = '' + parseFloat(navigator.appVersion);\r\n                majorVersion = parseInt(navigator.appVersion, 10);\r\n            }\r\n\r\n            return {\r\n                fullVersion: fullVersion,\r\n                version: majorVersion,\r\n                name: browserName,\r\n                isPrivateBrowsing: false\r\n            };\r\n        }\r\n\r\n        // via: https://gist.github.com/cou929/7973956\r\n\r\n        function retry(isDone, next) {\r\n            var currentTrial = 0,\r\n                maxRetry = 50,\r\n                interval = 10,\r\n                isTimeout = false;\r\n            var id = window.setInterval(\r\n                function() {\r\n                    if (isDone()) {\r\n                        window.clearInterval(id);\r\n                        next(isTimeout);\r\n                    }\r\n                    if (currentTrial++ > maxRetry) {\r\n                        window.clearInterval(id);\r\n                        isTimeout = true;\r\n                        next(isTimeout);\r\n                    }\r\n                },\r\n                10\r\n            );\r\n        }\r\n\r\n        function isIE10OrLater(userAgent) {\r\n            var ua = userAgent.toLowerCase();\r\n            if (ua.indexOf('msie') === 0 && ua.indexOf('trident') === 0) {\r\n                return false;\r\n            }\r\n            var match = /(?:msie|rv:)\\s?([\\d\\.]+)/.exec(ua);\r\n            if (match && parseInt(match[1], 10) >= 10) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        function detectPrivateMode(callback) {\r\n            var isPrivate;\r\n\r\n            try {\r\n\r\n                if (window.webkitRequestFileSystem) {\r\n                    window.webkitRequestFileSystem(\r\n                        window.TEMPORARY, 1,\r\n                        function() {\r\n                            isPrivate = false;\r\n                        },\r\n                        function(e) {\r\n                            isPrivate = true;\r\n                        }\r\n                    );\r\n                } else if (window.indexedDB && /Firefox/.test(window.navigator.userAgent)) {\r\n                    var db;\r\n                    try {\r\n                        db = window.indexedDB.open('test');\r\n                        db.onerror = function() {\r\n                            return true;\r\n                        };\r\n                    } catch (e) {\r\n                        isPrivate = true;\r\n                    }\r\n\r\n                    if (typeof isPrivate === 'undefined') {\r\n                        retry(\r\n                            function isDone() {\r\n                                return db.readyState === 'done' ? true : false;\r\n                            },\r\n                            function next(isTimeout) {\r\n                                if (!isTimeout) {\r\n                                    isPrivate = db.result ? false : true;\r\n                                }\r\n                            }\r\n                        );\r\n                    }\r\n                } else if (isIE10OrLater(window.navigator.userAgent)) {\r\n                    isPrivate = false;\r\n                    try {\r\n                        if (!window.indexedDB) {\r\n                            isPrivate = true;\r\n                        }\r\n                    } catch (e) {\r\n                        isPrivate = true;\r\n                    }\r\n                } else if (window.localStorage && /Safari/.test(window.navigator.userAgent)) {\r\n                    try {\r\n                        window.localStorage.setItem('test', 1);\r\n                    } catch (e) {\r\n                        isPrivate = true;\r\n                    }\r\n\r\n                    if (typeof isPrivate === 'undefined') {\r\n                        isPrivate = false;\r\n                        window.localStorage.removeItem('test');\r\n                    }\r\n                }\r\n\r\n            } catch (e) {\r\n                isPrivate = false;\r\n            }\r\n\r\n            retry(\r\n                function isDone() {\r\n                    return typeof isPrivate !== 'undefined' ? true : false;\r\n                },\r\n                function next(isTimeout) {\r\n                    callback(isPrivate);\r\n                }\r\n            );\r\n        }\r\n\r\n        var isMobile = {\r\n            Android: function() {\r\n                return navigator.userAgent.match(/Android/i);\r\n            },\r\n            BlackBerry: function() {\r\n                return navigator.userAgent.match(/BlackBerry|BB10/i);\r\n            },\r\n            iOS: function() {\r\n                return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n            },\r\n            Opera: function() {\r\n                return navigator.userAgent.match(/Opera Mini/i);\r\n            },\r\n            Windows: function() {\r\n                return navigator.userAgent.match(/IEMobile/i);\r\n            },\r\n            any: function() {\r\n                return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\r\n            },\r\n            getOsName: function() {\r\n                var osName = 'Unknown OS';\r\n                if (isMobile.Android()) {\r\n                    osName = 'Android';\r\n                }\r\n\r\n                if (isMobile.BlackBerry()) {\r\n                    osName = 'BlackBerry';\r\n                }\r\n\r\n                if (isMobile.iOS()) {\r\n                    osName = 'iOS';\r\n                }\r\n\r\n                if (isMobile.Opera()) {\r\n                    osName = 'Opera Mini';\r\n                }\r\n\r\n                if (isMobile.Windows()) {\r\n                    osName = 'Windows';\r\n                }\r\n\r\n                return osName;\r\n            }\r\n        };\r\n\r\n        // via: http://jsfiddle.net/ChristianL/AVyND/\r\n        function detectDesktopOS() {\r\n            var unknown = '-';\r\n\r\n            var nVer = navigator.appVersion;\r\n            var nAgt = navigator.userAgent;\r\n\r\n            var os = unknown;\r\n            var clientStrings = [{\r\n                s: 'Windows 10',\r\n                r: /(Windows 10.0|Windows NT 10.0)/\r\n            }, {\r\n                s: 'Windows 8.1',\r\n                r: /(Windows 8.1|Windows NT 6.3)/\r\n            }, {\r\n                s: 'Windows 8',\r\n                r: /(Windows 8|Windows NT 6.2)/\r\n            }, {\r\n                s: 'Windows 7',\r\n                r: /(Windows 7|Windows NT 6.1)/\r\n            }, {\r\n                s: 'Windows Vista',\r\n                r: /Windows NT 6.0/\r\n            }, {\r\n                s: 'Windows Server 2003',\r\n                r: /Windows NT 5.2/\r\n            }, {\r\n                s: 'Windows XP',\r\n                r: /(Windows NT 5.1|Windows XP)/\r\n            }, {\r\n                s: 'Windows 2000',\r\n                r: /(Windows NT 5.0|Windows 2000)/\r\n            }, {\r\n                s: 'Windows ME',\r\n                r: /(Win 9x 4.90|Windows ME)/\r\n            }, {\r\n                s: 'Windows 98',\r\n                r: /(Windows 98|Win98)/\r\n            }, {\r\n                s: 'Windows 95',\r\n                r: /(Windows 95|Win95|Windows_95)/\r\n            }, {\r\n                s: 'Windows NT 4.0',\r\n                r: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/\r\n            }, {\r\n                s: 'Windows CE',\r\n                r: /Windows CE/\r\n            }, {\r\n                s: 'Windows 3.11',\r\n                r: /Win16/\r\n            }, {\r\n                s: 'Android',\r\n                r: /Android/\r\n            }, {\r\n                s: 'Open BSD',\r\n                r: /OpenBSD/\r\n            }, {\r\n                s: 'Sun OS',\r\n                r: /SunOS/\r\n            }, {\r\n                s: 'Linux',\r\n                r: /(Linux|X11)/\r\n            }, {\r\n                s: 'iOS',\r\n                r: /(iPhone|iPad|iPod)/\r\n            }, {\r\n                s: 'Mac OS X',\r\n                r: /Mac OS X/\r\n            }, {\r\n                s: 'Mac OS',\r\n                r: /(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/\r\n            }, {\r\n                s: 'QNX',\r\n                r: /QNX/\r\n            }, {\r\n                s: 'UNIX',\r\n                r: /UNIX/\r\n            }, {\r\n                s: 'BeOS',\r\n                r: /BeOS/\r\n            }, {\r\n                s: 'OS/2',\r\n                r: /OS\\/2/\r\n            }, {\r\n                s: 'Search Bot',\r\n                r: /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\\/Teoma|ia_archiver)/\r\n            }];\r\n            for (var i = 0, cs; cs = clientStrings[i]; i++) {\r\n                if (cs.r.test(nAgt)) {\r\n                    os = cs.s;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            var osVersion = unknown;\r\n\r\n            if (/Windows/.test(os)) {\r\n                if (/Windows (.*)/.test(os)) {\r\n                    osVersion = /Windows (.*)/.exec(os)[1];\r\n                }\r\n                os = 'Windows';\r\n            }\r\n\r\n            switch (os) {\r\n                case 'Mac OS X':\r\n                    if (/Mac OS X (10[\\.\\_\\d]+)/.test(nAgt)) {\r\n                        osVersion = /Mac OS X (10[\\.\\_\\d]+)/.exec(nAgt)[1];\r\n                    }\r\n                    break;\r\n                case 'Android':\r\n                    if (/Android ([\\.\\_\\d]+)/.test(nAgt)) {\r\n                        osVersion = /Android ([\\.\\_\\d]+)/.exec(nAgt)[1];\r\n                    }\r\n                    break;\r\n                case 'iOS':\r\n                    if (/OS (\\d+)_(\\d+)_?(\\d+)?/.test(nAgt)) {\r\n                        osVersion = /OS (\\d+)_(\\d+)_?(\\d+)?/.exec(nVer);\r\n                        osVersion = osVersion[1] + '.' + osVersion[2] + '.' + (osVersion[3] | 0);\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            return {\r\n                osName: os,\r\n                osVersion: osVersion\r\n            };\r\n        }\r\n\r\n        var osName = 'Unknown OS';\r\n        var osVersion = 'Unknown OS Version';\r\n\r\n        function getAndroidVersion(ua) {\r\n            ua = (ua || navigator.userAgent).toLowerCase();\r\n            var match = ua.match(/android\\s([0-9\\.]*)/);\r\n            return match ? match[1] : false;\r\n        }\r\n\r\n        var osInfo = detectDesktopOS();\r\n\r\n        if (osInfo && osInfo.osName && osInfo.osName != '-') {\r\n            osName = osInfo.osName;\r\n            osVersion = osInfo.osVersion;\r\n        } else if (isMobile.any()) {\r\n            osName = isMobile.getOsName();\r\n\r\n            if (osName == 'Android') {\r\n                osVersion = getAndroidVersion();\r\n            }\r\n        }\r\n\r\n        var isNodejs = typeof process === 'object' && typeof process.versions === 'object' && process.versions.node;\r\n\r\n        if (osName === 'Unknown OS' && isNodejs) {\r\n            osName = 'Nodejs';\r\n            osVersion = process.versions.node.toString().replace('v', '');\r\n        }\r\n\r\n        var isCanvasSupportsStreamCapturing = false;\r\n        var isVideoSupportsStreamCapturing = false;\r\n        ['captureStream', 'mozCaptureStream', 'webkitCaptureStream'].forEach(function(item) {\r\n            if (typeof document === 'undefined' || typeof document.createElement !== 'function') {\r\n                return;\r\n            }\r\n\r\n            if (!isCanvasSupportsStreamCapturing && item in document.createElement('canvas')) {\r\n                isCanvasSupportsStreamCapturing = true;\r\n            }\r\n\r\n            if (!isVideoSupportsStreamCapturing && item in document.createElement('video')) {\r\n                isVideoSupportsStreamCapturing = true;\r\n            }\r\n        });\r\n\r\n        var regexIpv4Local = /^(192\\.168\\.|169\\.254\\.|10\\.|172\\.(1[6-9]|2\\d|3[01]))/,\r\n            regexIpv4 = /([0-9]{1,3}(\\.[0-9]{1,3}){3})/,\r\n            regexIpv6 = /[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7}/;\r\n\r\n        // via: https://github.com/diafygi/webrtc-ips\r\n        function DetectLocalIPAddress(callback, stream) {\r\n            if (!DetectRTC.isWebRTCSupported) {\r\n                return;\r\n            }\r\n\r\n            var isPublic = true,\r\n                isIpv4 = true;\r\n            getIPs(function(ip) {\r\n                if (!ip) {\r\n                    callback(); // Pass nothing to tell that ICE-gathering-ended\r\n                } else if (ip.match(regexIpv4Local)) {\r\n                    isPublic = false;\r\n                    callback('Local: ' + ip, isPublic, isIpv4);\r\n                } else if (ip.match(regexIpv6)) { //via https://ourcodeworld.com/articles/read/257/how-to-get-the-client-ip-address-with-javascript-only\r\n                    isIpv4 = false;\r\n                    callback('Public: ' + ip, isPublic, isIpv4);\r\n                } else {\r\n                    callback('Public: ' + ip, isPublic, isIpv4);\r\n                }\r\n            }, stream);\r\n        }\r\n\r\n        function getIPs(callback, stream) {\r\n            if (typeof document === 'undefined' || typeof document.getElementById !== 'function') {\r\n                return;\r\n            }\r\n\r\n            var ipDuplicates = {};\r\n\r\n            var RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\n\r\n            if (!RTCPeerConnection) {\r\n                var iframe = document.getElementById('iframe');\r\n                if (!iframe) {\r\n                    return;\r\n                }\r\n                var win = iframe.contentWindow;\r\n                RTCPeerConnection = win.RTCPeerConnection || win.mozRTCPeerConnection || win.webkitRTCPeerConnection;\r\n            }\r\n\r\n            if (!RTCPeerConnection) {\r\n                return;\r\n            }\r\n\r\n            var peerConfig = null;\r\n\r\n            if (DetectRTC.browser === 'Chrome' && DetectRTC.browser.version < 58) {\r\n                // todo: add support for older Opera\r\n                peerConfig = {\r\n                    optional: [{\r\n                        RtpDataChannels: true\r\n                    }]\r\n                };\r\n            }\r\n\r\n            var servers = {\r\n                iceServers: [{\r\n                    urls: 'stun:stun.l.google.com:19302'\r\n                }]\r\n            };\r\n\r\n            var pc = new RTCPeerConnection(servers, peerConfig);\r\n\r\n            if (stream) {\r\n                if (pc.addStream) {\r\n                    pc.addStream(stream);\r\n                } else if (pc.addTrack && stream.getTracks()[0]) {\r\n                    pc.addTrack(stream.getTracks()[0], stream);\r\n                }\r\n            }\r\n\r\n            function handleCandidate(candidate) {\r\n                if (!candidate) {\r\n                    callback(); // Pass nothing to tell that ICE-gathering-ended\r\n                    return;\r\n                }\r\n\r\n                var match = regexIpv4.exec(candidate);\r\n                if (!match) {\r\n                    return;\r\n                }\r\n                var ipAddress = match[1];\r\n                var isPublic = (candidate.match(regexIpv4Local)),\r\n                    isIpv4 = true;\r\n\r\n                if (ipDuplicates[ipAddress] === undefined) {\r\n                    callback(ipAddress, isPublic, isIpv4);\r\n                }\r\n\r\n                ipDuplicates[ipAddress] = true;\r\n            }\r\n\r\n            // listen for candidate events\r\n            pc.onicecandidate = function(event) {\r\n                if (event.candidate && event.candidate.candidate) {\r\n                    handleCandidate(event.candidate.candidate);\r\n                } else {\r\n                    handleCandidate(); // Pass nothing to tell that ICE-gathering-ended\r\n                }\r\n            };\r\n\r\n            // create data channel\r\n            if (!stream) {\r\n                try {\r\n                    pc.createDataChannel('sctp', {});\r\n                } catch (e) {}\r\n            }\r\n\r\n            // create an offer sdp\r\n            if (DetectRTC.isPromisesSupported) {\r\n                pc.createOffer().then(function(result) {\r\n                    pc.setLocalDescription(result).then(afterCreateOffer);\r\n                });\r\n            } else {\r\n                pc.createOffer(function(result) {\r\n                    pc.setLocalDescription(result, afterCreateOffer, function() {});\r\n                }, function() {});\r\n            }\r\n\r\n            function afterCreateOffer() {\r\n                var lines = pc.localDescription.sdp.split('\\n');\r\n\r\n                lines.forEach(function(line) {\r\n                    if (line && line.indexOf('a=candidate:') === 0) {\r\n                        handleCandidate(line);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        var MediaDevices = [];\r\n\r\n        var audioInputDevices = [];\r\n        var audioOutputDevices = [];\r\n        var videoInputDevices = [];\r\n\r\n        if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\r\n            // Firefox 38+ seems having support of enumerateDevices\r\n            // Thanks @xdumaine/enumerateDevices\r\n            navigator.enumerateDevices = function(callback) {\r\n                var enumerateDevices = navigator.mediaDevices.enumerateDevices();\r\n                if (enumerateDevices && enumerateDevices.then) {\r\n                    navigator.mediaDevices.enumerateDevices().then(callback).catch(function() {\r\n                        callback([]);\r\n                    });\r\n                } else {\r\n                    callback([]);\r\n                }\r\n            };\r\n        }\r\n\r\n        // Media Devices detection\r\n        var canEnumerate = false;\r\n\r\n        /*global MediaStreamTrack:true */\r\n        if (typeof MediaStreamTrack !== 'undefined' && 'getSources' in MediaStreamTrack) {\r\n            canEnumerate = true;\r\n        } else if (navigator.mediaDevices && !!navigator.mediaDevices.enumerateDevices) {\r\n            canEnumerate = true;\r\n        }\r\n\r\n        var hasMicrophone = false;\r\n        var hasSpeakers = false;\r\n        var hasWebcam = false;\r\n\r\n        var isWebsiteHasMicrophonePermissions = false;\r\n        var isWebsiteHasWebcamPermissions = false;\r\n\r\n        // http://dev.w3.org/2011/webrtc/editor/getusermedia.html#mediadevices\r\n        function checkDeviceSupport(callback) {\r\n            if (!canEnumerate) {\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (!navigator.enumerateDevices && window.MediaStreamTrack && window.MediaStreamTrack.getSources) {\r\n                navigator.enumerateDevices = window.MediaStreamTrack.getSources.bind(window.MediaStreamTrack);\r\n            }\r\n\r\n            if (!navigator.enumerateDevices && navigator.enumerateDevices) {\r\n                navigator.enumerateDevices = navigator.enumerateDevices.bind(navigator);\r\n            }\r\n\r\n            if (!navigator.enumerateDevices) {\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n                return;\r\n            }\r\n\r\n            MediaDevices = [];\r\n\r\n            audioInputDevices = [];\r\n            audioOutputDevices = [];\r\n            videoInputDevices = [];\r\n\r\n            hasMicrophone = false;\r\n            hasSpeakers = false;\r\n            hasWebcam = false;\r\n\r\n            isWebsiteHasMicrophonePermissions = false;\r\n            isWebsiteHasWebcamPermissions = false;\r\n\r\n            // to prevent duplication\r\n            var alreadyUsedDevices = {};\r\n\r\n            navigator.enumerateDevices(function(devices) {\r\n                devices.forEach(function(_device) {\r\n                    var device = {};\r\n                    for (var d in _device) {\r\n                        try {\r\n                            if (typeof _device[d] !== 'function') {\r\n                                device[d] = _device[d];\r\n                            }\r\n                        } catch (e) {}\r\n                    }\r\n\r\n                    if (alreadyUsedDevices[device.deviceId + device.label + device.kind]) {\r\n                        return;\r\n                    }\r\n\r\n                    // if it is MediaStreamTrack.getSources\r\n                    if (device.kind === 'audio') {\r\n                        device.kind = 'audioinput';\r\n                    }\r\n\r\n                    if (device.kind === 'video') {\r\n                        device.kind = 'videoinput';\r\n                    }\r\n\r\n                    if (!device.deviceId) {\r\n                        device.deviceId = device.id;\r\n                    }\r\n\r\n                    if (!device.id) {\r\n                        device.id = device.deviceId;\r\n                    }\r\n\r\n                    if (!device.label) {\r\n                        device.isCustomLabel = true;\r\n\r\n                        if (device.kind === 'videoinput') {\r\n                            device.label = 'Camera ' + (videoInputDevices.length + 1);\r\n                        } else if (device.kind === 'audioinput') {\r\n                            device.label = 'Microphone ' + (audioInputDevices.length + 1);\r\n                        } else if (device.kind === 'audiooutput') {\r\n                            device.label = 'Speaker ' + (audioOutputDevices.length + 1);\r\n                        } else {\r\n                            device.label = 'Please invoke getUserMedia once.';\r\n                        }\r\n\r\n                        if (typeof DetectRTC !== 'undefined' && DetectRTC.browser.isChrome && DetectRTC.browser.version >= 46 && !/^(https:|chrome-extension:)$/g.test(location.protocol || '')) {\r\n                            if (typeof document !== 'undefined' && typeof document.domain === 'string' && document.domain.search && document.domain.search(/localhost|127.0./g) === -1) {\r\n                                device.label = 'HTTPs is required to get label of this ' + device.kind + ' device.';\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // Firefox on Android still returns empty label\r\n                        if (device.kind === 'videoinput' && !isWebsiteHasWebcamPermissions) {\r\n                            isWebsiteHasWebcamPermissions = true;\r\n                        }\r\n\r\n                        if (device.kind === 'audioinput' && !isWebsiteHasMicrophonePermissions) {\r\n                            isWebsiteHasMicrophonePermissions = true;\r\n                        }\r\n                    }\r\n\r\n                    if (device.kind === 'audioinput') {\r\n                        hasMicrophone = true;\r\n\r\n                        if (audioInputDevices.indexOf(device) === -1) {\r\n                            audioInputDevices.push(device);\r\n                        }\r\n                    }\r\n\r\n                    if (device.kind === 'audiooutput') {\r\n                        hasSpeakers = true;\r\n\r\n                        if (audioOutputDevices.indexOf(device) === -1) {\r\n                            audioOutputDevices.push(device);\r\n                        }\r\n                    }\r\n\r\n                    if (device.kind === 'videoinput') {\r\n                        hasWebcam = true;\r\n\r\n                        if (videoInputDevices.indexOf(device) === -1) {\r\n                            videoInputDevices.push(device);\r\n                        }\r\n                    }\r\n\r\n                    // there is no 'videoouput' in the spec.\r\n                    MediaDevices.push(device);\r\n\r\n                    alreadyUsedDevices[device.deviceId + device.label + device.kind] = device;\r\n                });\r\n\r\n                if (typeof DetectRTC !== 'undefined') {\r\n                    // to sync latest outputs\r\n                    DetectRTC.MediaDevices = MediaDevices;\r\n                    DetectRTC.hasMicrophone = hasMicrophone;\r\n                    DetectRTC.hasSpeakers = hasSpeakers;\r\n                    DetectRTC.hasWebcam = hasWebcam;\r\n\r\n                    DetectRTC.isWebsiteHasWebcamPermissions = isWebsiteHasWebcamPermissions;\r\n                    DetectRTC.isWebsiteHasMicrophonePermissions = isWebsiteHasMicrophonePermissions;\r\n\r\n                    DetectRTC.audioInputDevices = audioInputDevices;\r\n                    DetectRTC.audioOutputDevices = audioOutputDevices;\r\n                    DetectRTC.videoInputDevices = videoInputDevices;\r\n                }\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            });\r\n        }\r\n\r\n        var DetectRTC = window.DetectRTC || {};\r\n\r\n        // ----------\r\n        // DetectRTC.browser.name || DetectRTC.browser.version || DetectRTC.browser.fullVersion\r\n        DetectRTC.browser = getBrowserInfo();\r\n\r\n        detectPrivateMode(function(isPrivateBrowsing) {\r\n            DetectRTC.browser.isPrivateBrowsing = !!isPrivateBrowsing;\r\n        });\r\n\r\n        // DetectRTC.isChrome || DetectRTC.isFirefox || DetectRTC.isEdge\r\n        DetectRTC.browser['is' + DetectRTC.browser.name] = true;\r\n\r\n        // -----------\r\n        DetectRTC.osName = osName;\r\n        DetectRTC.osVersion = osVersion;\r\n\r\n        var isNodeWebkit = typeof process === 'object' && typeof process.versions === 'object' && process.versions['node-webkit'];\r\n\r\n        // --------- Detect if system supports WebRTC 1.0 or WebRTC 1.1.\r\n        var isWebRTCSupported = false;\r\n        ['RTCPeerConnection', 'webkitRTCPeerConnection', 'mozRTCPeerConnection', 'RTCIceGatherer'].forEach(function(item) {\r\n            if (isWebRTCSupported) {\r\n                return;\r\n            }\r\n\r\n            if (item in window) {\r\n                isWebRTCSupported = true;\r\n            }\r\n        });\r\n        DetectRTC.isWebRTCSupported = isWebRTCSupported;\r\n\r\n        //-------\r\n        DetectRTC.isORTCSupported = typeof RTCIceGatherer !== 'undefined';\r\n\r\n        // --------- Detect if system supports screen capturing API\r\n        var isScreenCapturingSupported = false;\r\n        if (DetectRTC.browser.isChrome && DetectRTC.browser.version >= 35) {\r\n            isScreenCapturingSupported = true;\r\n        } else if (DetectRTC.browser.isFirefox && DetectRTC.browser.version >= 34) {\r\n            isScreenCapturingSupported = true;\r\n        } else if (DetectRTC.browser.isEdge && DetectRTC.browser.version >= 17) {\r\n            isScreenCapturingSupported = true; // navigator.getDisplayMedia\r\n        } else if (DetectRTC.osName === 'Android' && DetectRTC.browser.isChrome) {\r\n            isScreenCapturingSupported = true;\r\n        }\r\n\r\n        if (!/^(https:|chrome-extension:)$/g.test(location.protocol || '')) {\r\n            var isNonLocalHost = typeof document !== 'undefined' && typeof document.domain === 'string' && document.domain.search && document.domain.search(/localhost|127.0./g) === -1;\r\n            if (isNonLocalHost && (DetectRTC.browser.isChrome || DetectRTC.browser.isEdge || DetectRTC.browser.isOpera)) {\r\n                isScreenCapturingSupported = false;\r\n            } else if (DetectRTC.browser.isFirefox) {\r\n                isScreenCapturingSupported = false;\r\n            }\r\n        }\r\n        DetectRTC.isScreenCapturingSupported = isScreenCapturingSupported;\r\n\r\n        // --------- Detect if WebAudio API are supported\r\n        var webAudio = {\r\n            isSupported: false,\r\n            isCreateMediaStreamSourceSupported: false\r\n        };\r\n\r\n        ['AudioContext', 'webkitAudioContext', 'mozAudioContext', 'msAudioContext'].forEach(function(item) {\r\n            if (webAudio.isSupported) {\r\n                return;\r\n            }\r\n\r\n            if (item in window) {\r\n                webAudio.isSupported = true;\r\n\r\n                if (window[item] && 'createMediaStreamSource' in window[item].prototype) {\r\n                    webAudio.isCreateMediaStreamSourceSupported = true;\r\n                }\r\n            }\r\n        });\r\n        DetectRTC.isAudioContextSupported = webAudio.isSupported;\r\n        DetectRTC.isCreateMediaStreamSourceSupported = webAudio.isCreateMediaStreamSourceSupported;\r\n\r\n        // ---------- Detect if SCTP/RTP channels are supported.\r\n\r\n        var isRtpDataChannelsSupported = false;\r\n        if (DetectRTC.browser.isChrome && DetectRTC.browser.version > 31) {\r\n            isRtpDataChannelsSupported = true;\r\n        }\r\n        DetectRTC.isRtpDataChannelsSupported = isRtpDataChannelsSupported;\r\n\r\n        var isSCTPSupportd = false;\r\n        if (DetectRTC.browser.isFirefox && DetectRTC.browser.version > 28) {\r\n            isSCTPSupportd = true;\r\n        } else if (DetectRTC.browser.isChrome && DetectRTC.browser.version > 25) {\r\n            isSCTPSupportd = true;\r\n        } else if (DetectRTC.browser.isOpera && DetectRTC.browser.version >= 11) {\r\n            isSCTPSupportd = true;\r\n        }\r\n        DetectRTC.isSctpDataChannelsSupported = isSCTPSupportd;\r\n\r\n        // ---------\r\n\r\n        DetectRTC.isMobileDevice = isMobileDevice; // \"isMobileDevice\" boolean is defined in \"getBrowserInfo.js\"\r\n\r\n        // ------\r\n        var isGetUserMediaSupported = false;\r\n        if (navigator.getUserMedia) {\r\n            isGetUserMediaSupported = true;\r\n        } else if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n            isGetUserMediaSupported = true;\r\n        }\r\n\r\n        if (DetectRTC.browser.isChrome && DetectRTC.browser.version >= 46 && !/^(https:|chrome-extension:)$/g.test(location.protocol || '')) {\r\n            if (typeof document !== 'undefined' && typeof document.domain === 'string' && document.domain.search && document.domain.search(/localhost|127.0./g) === -1) {\r\n                isGetUserMediaSupported = 'Requires HTTPs';\r\n            }\r\n        }\r\n\r\n        if (DetectRTC.osName === 'Nodejs') {\r\n            isGetUserMediaSupported = false;\r\n        }\r\n        DetectRTC.isGetUserMediaSupported = isGetUserMediaSupported;\r\n\r\n        var displayResolution = '';\r\n        if (screen.width) {\r\n            var width = (screen.width) ? screen.width : '';\r\n            var height = (screen.height) ? screen.height : '';\r\n            displayResolution += '' + width + ' x ' + height;\r\n        }\r\n        DetectRTC.displayResolution = displayResolution;\r\n\r\n        function getAspectRatio(w, h) {\r\n            function gcd(a, b) {\r\n                return (b == 0) ? a : gcd(b, a % b);\r\n            }\r\n            var r = gcd(w, h);\r\n            return (w / r) / (h / r);\r\n        }\r\n\r\n        DetectRTC.displayAspectRatio = getAspectRatio(screen.width, screen.height).toFixed(2);\r\n\r\n        // ----------\r\n        DetectRTC.isCanvasSupportsStreamCapturing = isCanvasSupportsStreamCapturing;\r\n        DetectRTC.isVideoSupportsStreamCapturing = isVideoSupportsStreamCapturing;\r\n\r\n        if (DetectRTC.browser.name == 'Chrome' && DetectRTC.browser.version >= 53) {\r\n            if (!DetectRTC.isCanvasSupportsStreamCapturing) {\r\n                DetectRTC.isCanvasSupportsStreamCapturing = 'Requires chrome flag: enable-experimental-web-platform-features';\r\n            }\r\n\r\n            if (!DetectRTC.isVideoSupportsStreamCapturing) {\r\n                DetectRTC.isVideoSupportsStreamCapturing = 'Requires chrome flag: enable-experimental-web-platform-features';\r\n            }\r\n        }\r\n\r\n        // ------\r\n        DetectRTC.DetectLocalIPAddress = DetectLocalIPAddress;\r\n\r\n        DetectRTC.isWebSocketsSupported = 'WebSocket' in window && 2 === window.WebSocket.CLOSING;\r\n        DetectRTC.isWebSocketsBlocked = !DetectRTC.isWebSocketsSupported;\r\n\r\n        if (DetectRTC.osName === 'Nodejs') {\r\n            DetectRTC.isWebSocketsSupported = true;\r\n            DetectRTC.isWebSocketsBlocked = false;\r\n        }\r\n\r\n        DetectRTC.checkWebSocketsSupport = function(callback) {\r\n            callback = callback || function() {};\r\n            try {\r\n                var starttime;\r\n                var websocket = new WebSocket('wss://echo.websocket.org:443/');\r\n                websocket.onopen = function() {\r\n                    DetectRTC.isWebSocketsBlocked = false;\r\n                    starttime = (new Date).getTime();\r\n                    websocket.send('ping');\r\n                };\r\n                websocket.onmessage = function() {\r\n                    DetectRTC.WebsocketLatency = (new Date).getTime() - starttime + 'ms';\r\n                    callback();\r\n                    websocket.close();\r\n                    websocket = null;\r\n                };\r\n                websocket.onerror = function() {\r\n                    DetectRTC.isWebSocketsBlocked = true;\r\n                    callback();\r\n                };\r\n            } catch (e) {\r\n                DetectRTC.isWebSocketsBlocked = true;\r\n                callback();\r\n            }\r\n        };\r\n\r\n        // -------\r\n        DetectRTC.load = function(callback) {\r\n            callback = callback || function() {};\r\n            checkDeviceSupport(callback);\r\n        };\r\n\r\n        // check for microphone/camera support!\r\n        if (typeof checkDeviceSupport === 'function') {\r\n            // checkDeviceSupport();\r\n        }\r\n\r\n        if (typeof MediaDevices !== 'undefined') {\r\n            DetectRTC.MediaDevices = MediaDevices;\r\n        } else {\r\n            DetectRTC.MediaDevices = [];\r\n        }\r\n\r\n        DetectRTC.hasMicrophone = hasMicrophone;\r\n        DetectRTC.hasSpeakers = hasSpeakers;\r\n        DetectRTC.hasWebcam = hasWebcam;\r\n\r\n        DetectRTC.isWebsiteHasWebcamPermissions = isWebsiteHasWebcamPermissions;\r\n        DetectRTC.isWebsiteHasMicrophonePermissions = isWebsiteHasMicrophonePermissions;\r\n\r\n        DetectRTC.audioInputDevices = audioInputDevices;\r\n        DetectRTC.audioOutputDevices = audioOutputDevices;\r\n        DetectRTC.videoInputDevices = videoInputDevices;\r\n\r\n        // ------\r\n        var isSetSinkIdSupported = false;\r\n        if (typeof document !== 'undefined' && typeof document.createElement === 'function' && 'setSinkId' in document.createElement('video')) {\r\n            isSetSinkIdSupported = true;\r\n        }\r\n        DetectRTC.isSetSinkIdSupported = isSetSinkIdSupported;\r\n\r\n        // -----\r\n        var isRTPSenderReplaceTracksSupported = false;\r\n        if (DetectRTC.browser.isFirefox && typeof mozRTCPeerConnection !== 'undefined' /*&& DetectRTC.browser.version > 39*/ ) {\r\n            /*global mozRTCPeerConnection:true */\r\n            if ('getSenders' in mozRTCPeerConnection.prototype) {\r\n                isRTPSenderReplaceTracksSupported = true;\r\n            }\r\n        } else if (DetectRTC.browser.isChrome && typeof webkitRTCPeerConnection !== 'undefined') {\r\n            /*global webkitRTCPeerConnection:true */\r\n            if ('getSenders' in webkitRTCPeerConnection.prototype) {\r\n                isRTPSenderReplaceTracksSupported = true;\r\n            }\r\n        }\r\n        DetectRTC.isRTPSenderReplaceTracksSupported = isRTPSenderReplaceTracksSupported;\r\n\r\n        //------\r\n        var isRemoteStreamProcessingSupported = false;\r\n        if (DetectRTC.browser.isFirefox && DetectRTC.browser.version > 38) {\r\n            isRemoteStreamProcessingSupported = true;\r\n        }\r\n        DetectRTC.isRemoteStreamProcessingSupported = isRemoteStreamProcessingSupported;\r\n\r\n        //-------\r\n        var isApplyConstraintsSupported = false;\r\n\r\n        /*global MediaStreamTrack:true */\r\n        if (typeof MediaStreamTrack !== 'undefined' && 'applyConstraints' in MediaStreamTrack.prototype) {\r\n            isApplyConstraintsSupported = true;\r\n        }\r\n        DetectRTC.isApplyConstraintsSupported = isApplyConstraintsSupported;\r\n\r\n        //-------\r\n        var isMultiMonitorScreenCapturingSupported = false;\r\n        if (DetectRTC.browser.isFirefox && DetectRTC.browser.version >= 43) {\r\n            // version 43 merely supports platforms for multi-monitors\r\n            // version 44 will support exact multi-monitor selection i.e. you can select any monitor for screen capturing.\r\n            isMultiMonitorScreenCapturingSupported = true;\r\n        }\r\n        DetectRTC.isMultiMonitorScreenCapturingSupported = isMultiMonitorScreenCapturingSupported;\r\n\r\n        DetectRTC.isPromisesSupported = !!('Promise' in window);\r\n\r\n        // version is generated by \"grunt\"\r\n        DetectRTC.version = '1.3.9';\r\n\r\n        if (typeof DetectRTC === 'undefined') {\r\n            window.DetectRTC = {};\r\n        }\r\n\r\n        var MediaStream = window.MediaStream;\r\n\r\n        if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n            MediaStream = webkitMediaStream;\r\n        }\r\n\r\n        if (typeof MediaStream !== 'undefined' && typeof MediaStream === 'function') {\r\n            DetectRTC.MediaStream = Object.keys(MediaStream.prototype);\r\n        } else DetectRTC.MediaStream = false;\r\n\r\n        if (typeof MediaStreamTrack !== 'undefined') {\r\n            DetectRTC.MediaStreamTrack = Object.keys(MediaStreamTrack.prototype);\r\n        } else DetectRTC.MediaStreamTrack = false;\r\n\r\n        var RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\n\r\n        if (typeof RTCPeerConnection !== 'undefined') {\r\n            DetectRTC.RTCPeerConnection = Object.keys(RTCPeerConnection.prototype);\r\n        } else DetectRTC.RTCPeerConnection = false;\r\n\r\n        window.DetectRTC = DetectRTC;\r\n\r\n        if (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n            module.exports = DetectRTC;\r\n        }\r\n\r\n        if (typeof define === 'function' && define.amd) {\r\n            define('DetectRTC', [], function() {\r\n                return DetectRTC;\r\n            });\r\n        }\r\n    })();\r\n\r\n    // globals.js\r\n\r\n    if (typeof cordova !== 'undefined') {\r\n        DetectRTC.isMobileDevice = true;\r\n        DetectRTC.browser.name = 'Chrome';\r\n    }\r\n\r\n    if (navigator && navigator.userAgent && navigator.userAgent.indexOf('Crosswalk') !== -1) {\r\n        DetectRTC.isMobileDevice = true;\r\n        DetectRTC.browser.name = 'Chrome';\r\n    }\r\n\r\n    function fireEvent(obj, eventName, args) {\r\n        if (typeof CustomEvent === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        var eventDetail = {\r\n            arguments: args,\r\n            __exposedProps__: args\r\n        };\r\n\r\n        var event = new CustomEvent(eventName, eventDetail);\r\n        obj.dispatchEvent(event);\r\n    }\r\n\r\n    function setHarkEvents(connection, streamEvent) {\r\n        if (!streamEvent.stream || !getTracks(streamEvent.stream, 'audio').length) return;\r\n\r\n        if (!connection || !streamEvent) {\r\n            throw 'Both arguments are required.';\r\n        }\r\n\r\n        if (!connection.onspeaking || !connection.onsilence) {\r\n            return;\r\n        }\r\n\r\n        if (typeof hark === 'undefined') {\r\n            throw 'hark.js not found.';\r\n        }\r\n\r\n        hark(streamEvent.stream, {\r\n            onspeaking: function() {\r\n                connection.onspeaking(streamEvent);\r\n            },\r\n            onsilence: function() {\r\n                connection.onsilence(streamEvent);\r\n            },\r\n            onvolumechange: function(volume, threshold) {\r\n                if (!connection.onvolumechange) {\r\n                    return;\r\n                }\r\n                connection.onvolumechange(merge({\r\n                    volume: volume,\r\n                    threshold: threshold\r\n                }, streamEvent));\r\n            }\r\n        });\r\n    }\r\n\r\n    function setMuteHandlers(connection, streamEvent) {\r\n        if (!streamEvent.stream || !streamEvent.stream || !streamEvent.stream.addEventListener) return;\r\n\r\n        streamEvent.stream.addEventListener('mute', function(event) {\r\n            event = connection.streamEvents[streamEvent.streamid];\r\n\r\n            event.session = {\r\n                audio: event.muteType === 'audio',\r\n                video: event.muteType === 'video'\r\n            };\r\n\r\n            connection.onmute(event);\r\n        }, false);\r\n\r\n        streamEvent.stream.addEventListener('unmute', function(event) {\r\n            event = connection.streamEvents[streamEvent.streamid];\r\n\r\n            event.session = {\r\n                audio: event.unmuteType === 'audio',\r\n                video: event.unmuteType === 'video'\r\n            };\r\n\r\n            connection.onunmute(event);\r\n        }, false);\r\n    }\r\n\r\n    function getRandomString() {\r\n        if (window.crypto && window.crypto.getRandomValues && navigator.userAgent.indexOf('Safari') === -1) {\r\n            var a = window.crypto.getRandomValues(new Uint32Array(3)),\r\n                token = '';\r\n            for (var i = 0, l = a.length; i < l; i++) {\r\n                token += a[i].toString(36);\r\n            }\r\n            return token;\r\n        } else {\r\n            return (Math.random() * new Date().getTime()).toString(36).replace(/\\./g, '');\r\n        }\r\n    }\r\n\r\n    // Get HTMLAudioElement/HTMLVideoElement accordingly\r\n    // todo: add API documentation for connection.autoCreateMediaElement\r\n\r\n    function getRMCMediaElement(stream, callback, connection) {\r\n        if (!connection.autoCreateMediaElement) {\r\n            callback({});\r\n            return;\r\n        }\r\n\r\n        var isAudioOnly = false;\r\n        if (!getTracks(stream, 'video').length && !stream.isVideo && !stream.isScreen) {\r\n            isAudioOnly = true;\r\n        }\r\n\r\n        if (DetectRTC.browser.name === 'Firefox') {\r\n            if (connection.session.video || connection.session.screen) {\r\n                isAudioOnly = false;\r\n            }\r\n        }\r\n\r\n        var mediaElement = document.createElement(isAudioOnly ? 'audio' : 'video');\r\n\r\n        mediaElement.srcObject = stream;\r\n\r\n        mediaElement.setAttribute('autoplay', true);\r\n        mediaElement.setAttribute('playsinline', true);\r\n        mediaElement.setAttribute('controls', true);\r\n        mediaElement.setAttribute('muted', false);\r\n        mediaElement.setAttribute('volume', 1);\r\n\r\n        // http://goo.gl/WZ5nFl\r\n        // Firefox don't yet support onended for any stream (remote/local)\r\n        if (DetectRTC.browser.name === 'Firefox') {\r\n            var streamEndedEvent = 'ended';\r\n\r\n            if ('oninactive' in mediaElement) {\r\n                streamEndedEvent = 'inactive';\r\n            }\r\n\r\n            mediaElement.addEventListener(streamEndedEvent, function() {\r\n                // fireEvent(stream, streamEndedEvent, stream);\r\n                currentUserMediaRequest.remove(stream.idInstance);\r\n\r\n                if (stream.type === 'local') {\r\n                    streamEndedEvent = 'ended';\r\n\r\n                    if ('oninactive' in stream) {\r\n                        streamEndedEvent = 'inactive';\r\n                    }\r\n\r\n                    StreamsHandler.onSyncNeeded(stream.streamid, streamEndedEvent);\r\n\r\n                    connection.attachStreams.forEach(function(aStream, idx) {\r\n                        if (stream.streamid === aStream.streamid) {\r\n                            delete connection.attachStreams[idx];\r\n                        }\r\n                    });\r\n\r\n                    var newStreamsArray = [];\r\n                    connection.attachStreams.forEach(function(aStream) {\r\n                        if (aStream) {\r\n                            newStreamsArray.push(aStream);\r\n                        }\r\n                    });\r\n                    connection.attachStreams = newStreamsArray;\r\n\r\n                    var streamEvent = connection.streamEvents[stream.streamid];\r\n\r\n                    if (streamEvent) {\r\n                        connection.onstreamended(streamEvent);\r\n                        return;\r\n                    }\r\n                    if (this.parentNode) {\r\n                        this.parentNode.removeChild(this);\r\n                    }\r\n                }\r\n            }, false);\r\n        }\r\n\r\n        var played = mediaElement.play();\r\n        if (typeof played !== 'undefined') {\r\n            var cbFired = false;\r\n            setTimeout(function() {\r\n                if (!cbFired) {\r\n                    cbFired = true;\r\n                    callback(mediaElement);\r\n                }\r\n            }, 1000);\r\n            played.then(function() {\r\n                if (cbFired) return;\r\n                cbFired = true;\r\n                callback(mediaElement);\r\n            }).catch(function(error) {\r\n                if (cbFired) return;\r\n                cbFired = true;\r\n                callback(mediaElement);\r\n            });\r\n        } else {\r\n            callback(mediaElement);\r\n        }\r\n    }\r\n\r\n    // if IE\r\n    if (!window.addEventListener) {\r\n        window.addEventListener = function(el, eventName, eventHandler) {\r\n            if (!el.attachEvent) {\r\n                return;\r\n            }\r\n            el.attachEvent('on' + eventName, eventHandler);\r\n        };\r\n    }\r\n\r\n    function listenEventHandler(eventName, eventHandler) {\r\n        window.removeEventListener(eventName, eventHandler);\r\n        window.addEventListener(eventName, eventHandler, false);\r\n    }\r\n\r\n    window.attachEventListener = function(video, type, listener, useCapture) {\r\n        video.addEventListener(type, listener, useCapture);\r\n    };\r\n\r\n    function removeNullEntries(array) {\r\n        var newArray = [];\r\n        array.forEach(function(item) {\r\n            if (item) {\r\n                newArray.push(item);\r\n            }\r\n        });\r\n        return newArray;\r\n    }\r\n\r\n\r\n    function isData(session) {\r\n        return !session.audio && !session.video && !session.screen && session.data;\r\n    }\r\n\r\n    function isNull(obj) {\r\n        return typeof obj === 'undefined';\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    var MediaStream = window.MediaStream;\r\n\r\n    if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n        MediaStream = webkitMediaStream;\r\n    }\r\n\r\n    /*global MediaStream:true */\r\n    if (typeof MediaStream !== 'undefined') {\r\n        if (!('stop' in MediaStream.prototype)) {\r\n            MediaStream.prototype.stop = function() {\r\n                this.getTracks().forEach(function(track) {\r\n                    track.stop();\r\n                });\r\n            };\r\n        }\r\n    }\r\n\r\n    function isAudioPlusTab(connection, audioPlusTab) {\r\n        if (connection.session.audio && connection.session.audio === 'two-way') {\r\n            return false;\r\n        }\r\n\r\n        if (DetectRTC.browser.name === 'Firefox' && audioPlusTab !== false) {\r\n            return true;\r\n        }\r\n\r\n        if (DetectRTC.browser.name !== 'Chrome' || DetectRTC.browser.version < 50) return false;\r\n\r\n        if (typeof audioPlusTab === true) {\r\n            return true;\r\n        }\r\n\r\n        if (typeof audioPlusTab === 'undefined' && connection.session.audio && connection.session.screen && !connection.session.video) {\r\n            audioPlusTab = true;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function getAudioScreenConstraints(screen_constraints) {\r\n        if (DetectRTC.browser.name === 'Firefox') {\r\n            return true;\r\n        }\r\n\r\n        if (DetectRTC.browser.name !== 'Chrome') return false;\r\n\r\n        return {\r\n            mandatory: {\r\n                chromeMediaSource: screen_constraints.mandatory.chromeMediaSource,\r\n                chromeMediaSourceId: screen_constraints.mandatory.chromeMediaSourceId\r\n            }\r\n        };\r\n    }\r\n\r\n    window.iOSDefaultAudioOutputDevice = window.iOSDefaultAudioOutputDevice || 'speaker'; // earpiece or speaker\r\n\r\n    function getTracks(stream, kind) {\r\n        if (!stream || !stream.getTracks) {\r\n            return [];\r\n        }\r\n\r\n        return stream.getTracks().filter(function(t) {\r\n            return t.kind === (kind || 'audio');\r\n        });\r\n    }\r\n\r\n    function isUnifiedPlanSupportedDefault() {\r\n        var canAddTransceiver = false;\r\n\r\n        try {\r\n            if (typeof RTCRtpTransceiver === 'undefined') return false;\r\n            if (!('currentDirection' in RTCRtpTransceiver.prototype)) return false;\r\n\r\n            var tempPc = new RTCPeerConnection();\r\n\r\n            try {\r\n                tempPc.addTransceiver('audio');\r\n                canAddTransceiver = true;\r\n            } catch (e) {}\r\n\r\n            tempPc.close();\r\n        } catch (e) {\r\n            canAddTransceiver = false;\r\n        }\r\n\r\n        return canAddTransceiver && isUnifiedPlanSuppored();\r\n    }\r\n\r\n    function isUnifiedPlanSuppored() {\r\n        var isUnifiedPlanSupported = false;\r\n\r\n        try {\r\n            var pc = new RTCPeerConnection({\r\n                sdpSemantics: 'unified-plan'\r\n            });\r\n\r\n            try {\r\n                var config = pc.getConfiguration();\r\n                if (config.sdpSemantics == 'unified-plan')\r\n                    isUnifiedPlanSupported = true;\r\n                else if (config.sdpSemantics == 'plan-b')\r\n                    isUnifiedPlanSupported = false;\r\n                else\r\n                    isUnifiedPlanSupported = false;\r\n            } catch (e) {\r\n                isUnifiedPlanSupported = false;\r\n            }\r\n        } catch (e) {\r\n            isUnifiedPlanSupported = false;\r\n        }\r\n\r\n        return isUnifiedPlanSupported;\r\n    }\r\n\r\n    // ios-hacks.js\r\n\r\n    function setCordovaAPIs() {\r\n        // if (DetectRTC.osName !== 'iOS') return;\r\n        if (typeof cordova === 'undefined' || typeof cordova.plugins === 'undefined' || typeof cordova.plugins.iosrtc === 'undefined') return;\r\n\r\n        var iosrtc = cordova.plugins.iosrtc;\r\n        window.webkitRTCPeerConnection = iosrtc.RTCPeerConnection;\r\n        window.RTCSessionDescription = iosrtc.RTCSessionDescription;\r\n        window.RTCIceCandidate = iosrtc.RTCIceCandidate;\r\n        window.MediaStream = iosrtc.MediaStream;\r\n        window.MediaStreamTrack = iosrtc.MediaStreamTrack;\r\n        navigator.getUserMedia = navigator.webkitGetUserMedia = iosrtc.getUserMedia;\r\n\r\n        iosrtc.debug.enable('iosrtc*');\r\n        if (typeof iosrtc.selectAudioOutput == 'function') {\r\n            iosrtc.selectAudioOutput(window.iOSDefaultAudioOutputDevice || 'speaker'); // earpiece or speaker\r\n        }\r\n        iosrtc.registerGlobals();\r\n    }\r\n\r\n    document.addEventListener('deviceready', setCordovaAPIs, false);\r\n    setCordovaAPIs();\r\n\r\n    // RTCPeerConnection.js\r\n\r\n    var defaults = {};\r\n\r\n    function setSdpConstraints(config) {\r\n        var sdpConstraints = {\r\n            OfferToReceiveAudio: !!config.OfferToReceiveAudio,\r\n            OfferToReceiveVideo: !!config.OfferToReceiveVideo\r\n        };\r\n\r\n        return sdpConstraints;\r\n    }\r\n\r\n    var RTCPeerConnection;\r\n    if (typeof window.RTCPeerConnection !== 'undefined') {\r\n        RTCPeerConnection = window.RTCPeerConnection;\r\n    } else if (typeof mozRTCPeerConnection !== 'undefined') {\r\n        RTCPeerConnection = mozRTCPeerConnection;\r\n    } else if (typeof webkitRTCPeerConnection !== 'undefined') {\r\n        RTCPeerConnection = webkitRTCPeerConnection;\r\n    }\r\n\r\n    var RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription;\r\n    var RTCIceCandidate = window.RTCIceCandidate || window.mozRTCIceCandidate;\r\n    var MediaStreamTrack = window.MediaStreamTrack;\r\n\r\n    function PeerInitiator(config) {\r\n        if (typeof window.RTCPeerConnection !== 'undefined') {\r\n            RTCPeerConnection = window.RTCPeerConnection;\r\n        } else if (typeof mozRTCPeerConnection !== 'undefined') {\r\n            RTCPeerConnection = mozRTCPeerConnection;\r\n        } else if (typeof webkitRTCPeerConnection !== 'undefined') {\r\n            RTCPeerConnection = webkitRTCPeerConnection;\r\n        }\r\n\r\n        RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription;\r\n        RTCIceCandidate = window.RTCIceCandidate || window.mozRTCIceCandidate;\r\n        MediaStreamTrack = window.MediaStreamTrack;\r\n\r\n        if (!RTCPeerConnection) {\r\n            throw 'WebRTC 1.0 (RTCPeerConnection) API are NOT available in this browser.';\r\n        }\r\n\r\n        var connection = config.rtcMultiConnection;\r\n\r\n        this.extra = config.remoteSdp ? config.remoteSdp.extra : connection.extra;\r\n        this.userid = config.userid;\r\n        this.streams = [];\r\n        this.channels = config.channels || [];\r\n        this.connectionDescription = config.connectionDescription;\r\n\r\n        this.addStream = function(session) {\r\n            connection.addStream(session, self.userid);\r\n        };\r\n\r\n        this.removeStream = function(streamid) {\r\n            connection.removeStream(streamid, self.userid);\r\n        };\r\n\r\n        var self = this;\r\n\r\n        if (config.remoteSdp) {\r\n            this.connectionDescription = config.remoteSdp.connectionDescription;\r\n        }\r\n\r\n        var allRemoteStreams = {};\r\n\r\n        defaults.sdpConstraints = setSdpConstraints({\r\n            OfferToReceiveAudio: true,\r\n            OfferToReceiveVideo: true\r\n        });\r\n\r\n        var peer;\r\n\r\n        var renegotiatingPeer = !!config.renegotiatingPeer;\r\n        if (config.remoteSdp) {\r\n            renegotiatingPeer = !!config.remoteSdp.renegotiatingPeer;\r\n        }\r\n\r\n        var localStreams = [];\r\n        connection.attachStreams.forEach(function(stream) {\r\n            if (!!stream) {\r\n                localStreams.push(stream);\r\n            }\r\n        });\r\n\r\n        if (!renegotiatingPeer) {\r\n            var iceTransports = 'all';\r\n            if (connection.candidates.turn || connection.candidates.relay) {\r\n                if (!connection.candidates.stun && !connection.candidates.reflexive && !connection.candidates.host) {\r\n                    iceTransports = 'relay';\r\n                }\r\n            }\r\n\r\n            try {\r\n                // ref: developer.mozilla.org/en-US/docs/Web/API/RTCConfiguration\r\n                var params = {\r\n                    iceServers: connection.iceServers,\r\n                    iceTransportPolicy: connection.iceTransportPolicy || iceTransports\r\n                };\r\n\r\n                if (typeof connection.iceCandidatePoolSize !== 'undefined') {\r\n                    params.iceCandidatePoolSize = connection.iceCandidatePoolSize;\r\n                }\r\n\r\n                if (typeof connection.bundlePolicy !== 'undefined') {\r\n                    params.bundlePolicy = connection.bundlePolicy;\r\n                }\r\n\r\n                if (typeof connection.rtcpMuxPolicy !== 'undefined') {\r\n                    params.rtcpMuxPolicy = connection.rtcpMuxPolicy;\r\n                }\r\n\r\n                if (!!connection.sdpSemantics) {\r\n                    params.sdpSemantics = connection.sdpSemantics || 'unified-plan';\r\n                }\r\n\r\n                if (!connection.iceServers || !connection.iceServers.length) {\r\n                    params = null;\r\n                    connection.optionalArgument = null;\r\n                }\r\n\r\n                peer = new RTCPeerConnection(params, connection.optionalArgument);\r\n            } catch (e) {\r\n                try {\r\n                    var params = {\r\n                        iceServers: connection.iceServers\r\n                    };\r\n\r\n                    peer = new RTCPeerConnection(params);\r\n                } catch (e) {\r\n                    peer = new RTCPeerConnection();\r\n                }\r\n            }\r\n        } else {\r\n            peer = config.peerRef;\r\n        }\r\n\r\n        if (!peer.getRemoteStreams && peer.getReceivers) {\r\n            peer.getRemoteStreams = function() {\r\n                var stream = new MediaStream();\r\n                peer.getReceivers().forEach(function(receiver) {\r\n                    stream.addTrack(receiver.track);\r\n                });\r\n                return [stream];\r\n            };\r\n        }\r\n\r\n        if (!peer.getLocalStreams && peer.getSenders) {\r\n            peer.getLocalStreams = function() {\r\n                var stream = new MediaStream();\r\n                peer.getSenders().forEach(function(sender) {\r\n                    stream.addTrack(sender.track);\r\n                });\r\n                return [stream];\r\n            };\r\n        }\r\n\r\n        peer.onicecandidate = function(event) {\r\n            if (!event.candidate) {\r\n                if (!connection.trickleIce) {\r\n                    var localSdp = peer.localDescription;\r\n                    config.onLocalSdp({\r\n                        type: localSdp.type,\r\n                        sdp: localSdp.sdp,\r\n                        remotePeerSdpConstraints: config.remotePeerSdpConstraints || false,\r\n                        renegotiatingPeer: !!config.renegotiatingPeer || false,\r\n                        connectionDescription: self.connectionDescription,\r\n                        dontGetRemoteStream: !!config.dontGetRemoteStream,\r\n                        extra: connection ? connection.extra : {},\r\n                        streamsToShare: streamsToShare\r\n                    });\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (!connection.trickleIce) return;\r\n            config.onLocalCandidate({\r\n                candidate: event.candidate.candidate,\r\n                sdpMid: event.candidate.sdpMid,\r\n                sdpMLineIndex: event.candidate.sdpMLineIndex\r\n            });\r\n        };\r\n\r\n        localStreams.forEach(function(localStream) {\r\n            if (config.remoteSdp && config.remoteSdp.remotePeerSdpConstraints && config.remoteSdp.remotePeerSdpConstraints.dontGetRemoteStream) {\r\n                return;\r\n            }\r\n\r\n            if (config.dontAttachLocalStream) {\r\n                return;\r\n            }\r\n\r\n            localStream = connection.beforeAddingStream(localStream, self);\r\n\r\n            if (!localStream) return;\r\n\r\n            peer.getLocalStreams().forEach(function(stream) {\r\n                if (localStream && stream.id == localStream.id) {\r\n                    localStream = null;\r\n                }\r\n            });\r\n\r\n            if (localStream && localStream.getTracks) {\r\n                localStream.getTracks().forEach(function(track) {\r\n                    try {\r\n                        // last parameter is redundant for unified-plan\r\n                        // starting from chrome version 72\r\n                        peer.addTrack(track, localStream);\r\n                    } catch (e) {}\r\n                });\r\n            }\r\n        });\r\n\r\n        peer.oniceconnectionstatechange = peer.onsignalingstatechange = function() {\r\n            var extra = self.extra;\r\n            if (connection.peers[self.userid]) {\r\n                extra = connection.peers[self.userid].extra || extra;\r\n            }\r\n\r\n            if (!peer) {\r\n                return;\r\n            }\r\n\r\n            config.onPeerStateChanged({\r\n                iceConnectionState: peer.iceConnectionState,\r\n                iceGatheringState: peer.iceGatheringState,\r\n                signalingState: peer.signalingState,\r\n                extra: extra,\r\n                userid: self.userid\r\n            });\r\n\r\n            if (peer && peer.iceConnectionState && peer.iceConnectionState.search(/closed|failed/gi) !== -1 && self.streams instanceof Array) {\r\n                self.streams.forEach(function(stream) {\r\n                    var streamEvent = connection.streamEvents[stream.id] || {\r\n                        streamid: stream.id,\r\n                        stream: stream,\r\n                        type: 'remote'\r\n                    };\r\n\r\n                    connection.onstreamended(streamEvent);\r\n                });\r\n            }\r\n        };\r\n\r\n        var sdpConstraints = {\r\n            OfferToReceiveAudio: !!localStreams.length,\r\n            OfferToReceiveVideo: !!localStreams.length\r\n        };\r\n\r\n        if (config.localPeerSdpConstraints) sdpConstraints = config.localPeerSdpConstraints;\r\n\r\n        defaults.sdpConstraints = setSdpConstraints(sdpConstraints);\r\n\r\n        var streamObject;\r\n        var dontDuplicate = {};\r\n\r\n        peer.ontrack = function(event) {\r\n            if (!event || event.type !== 'track') return;\r\n\r\n            event.stream = event.streams[event.streams.length - 1];\r\n\r\n            if (!event.stream.id) {\r\n                event.stream.id = event.track.id;\r\n            }\r\n\r\n            if (dontDuplicate[event.stream.id] && DetectRTC.browser.name !== 'Safari') {\r\n                if (event.track) {\r\n                    event.track.onended = function() { // event.track.onmute = \r\n                        peer && peer.onremovestream(event);\r\n                    };\r\n                }\r\n                return;\r\n            }\r\n\r\n            dontDuplicate[event.stream.id] = event.stream.id;\r\n\r\n            var streamsToShare = {};\r\n            if (config.remoteSdp && config.remoteSdp.streamsToShare) {\r\n                streamsToShare = config.remoteSdp.streamsToShare;\r\n            } else if (config.streamsToShare) {\r\n                streamsToShare = config.streamsToShare;\r\n            }\r\n\r\n            var streamToShare = streamsToShare[event.stream.id];\r\n            if (streamToShare) {\r\n                event.stream.isAudio = streamToShare.isAudio;\r\n                event.stream.isVideo = streamToShare.isVideo;\r\n                event.stream.isScreen = streamToShare.isScreen;\r\n            } else {\r\n                event.stream.isVideo = !!getTracks(event.stream, 'video').length;\r\n                event.stream.isAudio = !event.stream.isVideo;\r\n                event.stream.isScreen = false;\r\n            }\r\n\r\n            event.stream.streamid = event.stream.id;\r\n\r\n            allRemoteStreams[event.stream.id] = event.stream;\r\n            config.onRemoteStream(event.stream);\r\n\r\n            event.stream.getTracks().forEach(function(track) {\r\n                track.onended = function() { // track.onmute = \r\n                    peer && peer.onremovestream(event);\r\n                };\r\n            });\r\n\r\n            event.stream.onremovetrack = function() {\r\n                peer && peer.onremovestream(event);\r\n            };\r\n        };\r\n\r\n        peer.onremovestream = function(event) {\r\n            // this event doesn't works anymore\r\n            event.stream.streamid = event.stream.id;\r\n\r\n            if (allRemoteStreams[event.stream.id]) {\r\n                delete allRemoteStreams[event.stream.id];\r\n            }\r\n\r\n            config.onRemoteStreamRemoved(event.stream);\r\n        };\r\n\r\n        if (typeof peer.removeStream !== 'function') {\r\n            // removeStream backward compatibility\r\n            peer.removeStream = function(stream) {\r\n                stream.getTracks().forEach(function(track) {\r\n                    peer.removeTrack(track, stream);\r\n                });\r\n            };\r\n        }\r\n\r\n        this.addRemoteCandidate = function(remoteCandidate) {\r\n            peer.addIceCandidate(new RTCIceCandidate(remoteCandidate));\r\n        };\r\n\r\n        function oldAddRemoteSdp(remoteSdp, cb) {\r\n            cb = cb || function() {};\r\n\r\n            if (DetectRTC.browser.name !== 'Safari') {\r\n                remoteSdp.sdp = connection.processSdp(remoteSdp.sdp);\r\n            }\r\n            peer.setRemoteDescription(new RTCSessionDescription(remoteSdp), cb, function(error) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('setRemoteDescription failed', '\\n', error, '\\n', remoteSdp.sdp);\r\n                }\r\n\r\n                cb();\r\n            });\r\n        }\r\n\r\n        this.addRemoteSdp = function(remoteSdp, cb) {\r\n            cb = cb || function() {};\r\n\r\n            if (DetectRTC.browser.name !== 'Safari') {\r\n                remoteSdp.sdp = connection.processSdp(remoteSdp.sdp);\r\n            }\r\n\r\n            peer.setRemoteDescription(new RTCSessionDescription(remoteSdp)).then(cb, function(error) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('setRemoteDescription failed', '\\n', error, '\\n', remoteSdp.sdp);\r\n                }\r\n\r\n                cb();\r\n            }).catch(function(error) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('setRemoteDescription failed', '\\n', error, '\\n', remoteSdp.sdp);\r\n                }\r\n\r\n                cb();\r\n            });\r\n        };\r\n\r\n        var isOfferer = true;\r\n\r\n        if (config.remoteSdp) {\r\n            isOfferer = false;\r\n        }\r\n\r\n        this.createDataChannel = function() {\r\n            var channel = peer.createDataChannel('sctp', {});\r\n            setChannelEvents(channel);\r\n        };\r\n\r\n        if (connection.session.data === true && !renegotiatingPeer) {\r\n            if (!isOfferer) {\r\n                peer.ondatachannel = function(event) {\r\n                    var channel = event.channel;\r\n                    setChannelEvents(channel);\r\n                };\r\n            } else {\r\n                this.createDataChannel();\r\n            }\r\n        }\r\n\r\n        this.enableDisableVideoEncoding = function(enable) {\r\n            var rtcp;\r\n            peer.getSenders().forEach(function(sender) {\r\n                if (!rtcp && sender.track.kind === 'video') {\r\n                    rtcp = sender;\r\n                }\r\n            });\r\n\r\n            if (!rtcp || !rtcp.getParameters) return;\r\n\r\n            var parameters = rtcp.getParameters();\r\n            parameters.encodings[1] && (parameters.encodings[1].active = !!enable);\r\n            parameters.encodings[2] && (parameters.encodings[2].active = !!enable);\r\n            rtcp.setParameters(parameters);\r\n        };\r\n\r\n        if (config.remoteSdp) {\r\n            if (config.remoteSdp.remotePeerSdpConstraints) {\r\n                sdpConstraints = config.remoteSdp.remotePeerSdpConstraints;\r\n            }\r\n            defaults.sdpConstraints = setSdpConstraints(sdpConstraints);\r\n            this.addRemoteSdp(config.remoteSdp, function() {\r\n                createOfferOrAnswer('createAnswer');\r\n            });\r\n        }\r\n\r\n        function setChannelEvents(channel) {\r\n            // force ArrayBuffer in Firefox; which uses \"Blob\" by default.\r\n            channel.binaryType = 'arraybuffer';\r\n\r\n            channel.onmessage = function(event) {\r\n                config.onDataChannelMessage(event.data);\r\n            };\r\n\r\n            channel.onopen = function() {\r\n                config.onDataChannelOpened(channel);\r\n            };\r\n\r\n            channel.onerror = function(error) {\r\n                config.onDataChannelError(error);\r\n            };\r\n\r\n            channel.onclose = function(event) {\r\n                config.onDataChannelClosed(event);\r\n            };\r\n\r\n            channel.internalSend = channel.send;\r\n            channel.send = function(data) {\r\n                if (channel.readyState !== 'open') {\r\n                    return;\r\n                }\r\n\r\n                channel.internalSend(data);\r\n            };\r\n\r\n            peer.channel = channel;\r\n        }\r\n\r\n        if (connection.session.audio == 'two-way' || connection.session.video == 'two-way' || connection.session.screen == 'two-way') {\r\n            defaults.sdpConstraints = setSdpConstraints({\r\n                OfferToReceiveAudio: connection.session.audio == 'two-way' || (config.remoteSdp && config.remoteSdp.remotePeerSdpConstraints && config.remoteSdp.remotePeerSdpConstraints.OfferToReceiveAudio),\r\n                OfferToReceiveVideo: connection.session.video == 'two-way' || connection.session.screen == 'two-way' || (config.remoteSdp && config.remoteSdp.remotePeerSdpConstraints && config.remoteSdp.remotePeerSdpConstraints.OfferToReceiveAudio)\r\n            });\r\n        }\r\n\r\n        var streamsToShare = {};\r\n        peer.getLocalStreams().forEach(function(stream) {\r\n            streamsToShare[stream.streamid] = {\r\n                isAudio: !!stream.isAudio,\r\n                isVideo: !!stream.isVideo,\r\n                isScreen: !!stream.isScreen\r\n            };\r\n        });\r\n\r\n        function oldCreateOfferOrAnswer(_method) {\r\n            peer[_method](function(localSdp) {\r\n                if (DetectRTC.browser.name !== 'Safari') {\r\n                    localSdp.sdp = connection.processSdp(localSdp.sdp);\r\n                }\r\n                peer.setLocalDescription(localSdp, function() {\r\n                    if (!connection.trickleIce) return;\r\n\r\n                    config.onLocalSdp({\r\n                        type: localSdp.type,\r\n                        sdp: localSdp.sdp,\r\n                        remotePeerSdpConstraints: config.remotePeerSdpConstraints || false,\r\n                        renegotiatingPeer: !!config.renegotiatingPeer || false,\r\n                        connectionDescription: self.connectionDescription,\r\n                        dontGetRemoteStream: !!config.dontGetRemoteStream,\r\n                        extra: connection ? connection.extra : {},\r\n                        streamsToShare: streamsToShare\r\n                    });\r\n\r\n                    connection.onSettingLocalDescription(self);\r\n                }, function(error) {\r\n                    if (!!connection.enableLogs) {\r\n                        console.error('setLocalDescription-error', error);\r\n                    }\r\n                });\r\n            }, function(error) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('sdp-' + _method + '-error', error);\r\n                }\r\n            }, defaults.sdpConstraints);\r\n        }\r\n\r\n        function createOfferOrAnswer(_method) {\r\n            peer[_method](defaults.sdpConstraints).then(function(localSdp) {\r\n                if (DetectRTC.browser.name !== 'Safari') {\r\n                    localSdp.sdp = connection.processSdp(localSdp.sdp);\r\n                }\r\n                peer.setLocalDescription(localSdp).then(function() {\r\n                    if (!connection.trickleIce) return;\r\n\r\n                    config.onLocalSdp({\r\n                        type: localSdp.type,\r\n                        sdp: localSdp.sdp,\r\n                        remotePeerSdpConstraints: config.remotePeerSdpConstraints || false,\r\n                        renegotiatingPeer: !!config.renegotiatingPeer || false,\r\n                        connectionDescription: self.connectionDescription,\r\n                        dontGetRemoteStream: !!config.dontGetRemoteStream,\r\n                        extra: connection ? connection.extra : {},\r\n                        streamsToShare: streamsToShare\r\n                    });\r\n\r\n                    connection.onSettingLocalDescription(self);\r\n                }, function(error) {\r\n                    if (!connection.enableLogs) return;\r\n                    console.error('setLocalDescription error', error);\r\n                });\r\n            }, function(error) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('sdp-error', error);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (isOfferer) {\r\n            createOfferOrAnswer('createOffer');\r\n        }\r\n\r\n        peer.nativeClose = peer.close;\r\n        peer.close = function() {\r\n            if (!peer) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                if (peer.nativeClose !== peer.close) {\r\n                    peer.nativeClose();\r\n                }\r\n            } catch (e) {}\r\n\r\n            peer = null;\r\n            self.peer = null;\r\n        };\r\n\r\n        this.peer = peer;\r\n    }\r\n\r\n    // CodecsHandler.js\r\n\r\n    var CodecsHandler = (function() {\r\n        function preferCodec(sdp, codecName) {\r\n            var info = splitLines(sdp);\r\n\r\n            if (!info.videoCodecNumbers) {\r\n                return sdp;\r\n            }\r\n\r\n            if (codecName === 'vp8' && info.vp8LineNumber === info.videoCodecNumbers[0]) {\r\n                return sdp;\r\n            }\r\n\r\n            if (codecName === 'vp9' && info.vp9LineNumber === info.videoCodecNumbers[0]) {\r\n                return sdp;\r\n            }\r\n\r\n            if (codecName === 'h264' && info.h264LineNumber === info.videoCodecNumbers[0]) {\r\n                return sdp;\r\n            }\r\n\r\n            sdp = preferCodecHelper(sdp, codecName, info);\r\n\r\n            return sdp;\r\n        }\r\n\r\n        function preferCodecHelper(sdp, codec, info, ignore) {\r\n            var preferCodecNumber = '';\r\n\r\n            if (codec === 'vp8') {\r\n                if (!info.vp8LineNumber) {\r\n                    return sdp;\r\n                }\r\n                preferCodecNumber = info.vp8LineNumber;\r\n            }\r\n\r\n            if (codec === 'vp9') {\r\n                if (!info.vp9LineNumber) {\r\n                    return sdp;\r\n                }\r\n                preferCodecNumber = info.vp9LineNumber;\r\n            }\r\n\r\n            if (codec === 'h264') {\r\n                if (!info.h264LineNumber) {\r\n                    return sdp;\r\n                }\r\n\r\n                preferCodecNumber = info.h264LineNumber;\r\n            }\r\n\r\n            var newLine = info.videoCodecNumbersOriginal.split('SAVPF')[0] + 'SAVPF ';\r\n\r\n            var newOrder = [preferCodecNumber];\r\n\r\n            if (ignore) {\r\n                newOrder = [];\r\n            }\r\n\r\n            info.videoCodecNumbers.forEach(function(codecNumber) {\r\n                if (codecNumber === preferCodecNumber) return;\r\n                newOrder.push(codecNumber);\r\n            });\r\n\r\n            newLine += newOrder.join(' ');\r\n\r\n            sdp = sdp.replace(info.videoCodecNumbersOriginal, newLine);\r\n            return sdp;\r\n        }\r\n\r\n        function splitLines(sdp) {\r\n            var info = {};\r\n            sdp.split('\\n').forEach(function(line) {\r\n                if (line.indexOf('m=video') === 0) {\r\n                    info.videoCodecNumbers = [];\r\n                    line.split('SAVPF')[1].split(' ').forEach(function(codecNumber) {\r\n                        codecNumber = codecNumber.trim();\r\n                        if (!codecNumber || !codecNumber.length) return;\r\n                        info.videoCodecNumbers.push(codecNumber);\r\n                        info.videoCodecNumbersOriginal = line;\r\n                    });\r\n                }\r\n\r\n                if (line.indexOf('VP8/90000') !== -1 && !info.vp8LineNumber) {\r\n                    info.vp8LineNumber = line.replace('a=rtpmap:', '').split(' ')[0];\r\n                }\r\n\r\n                if (line.indexOf('VP9/90000') !== -1 && !info.vp9LineNumber) {\r\n                    info.vp9LineNumber = line.replace('a=rtpmap:', '').split(' ')[0];\r\n                }\r\n\r\n                if (line.indexOf('H264/90000') !== -1 && !info.h264LineNumber) {\r\n                    info.h264LineNumber = line.replace('a=rtpmap:', '').split(' ')[0];\r\n                }\r\n            });\r\n\r\n            return info;\r\n        }\r\n\r\n        function removeVPX(sdp) {\r\n            var info = splitLines(sdp);\r\n\r\n            // last parameter below means: ignore these codecs\r\n            sdp = preferCodecHelper(sdp, 'vp9', info, true);\r\n            sdp = preferCodecHelper(sdp, 'vp8', info, true);\r\n\r\n            return sdp;\r\n        }\r\n\r\n        function disableNACK(sdp) {\r\n            if (!sdp || typeof sdp !== 'string') {\r\n                throw 'Invalid arguments.';\r\n            }\r\n\r\n            sdp = sdp.replace('a=rtcp-fb:126 nack\\r\\n', '');\r\n            sdp = sdp.replace('a=rtcp-fb:126 nack pli\\r\\n', 'a=rtcp-fb:126 pli\\r\\n');\r\n            sdp = sdp.replace('a=rtcp-fb:97 nack\\r\\n', '');\r\n            sdp = sdp.replace('a=rtcp-fb:97 nack pli\\r\\n', 'a=rtcp-fb:97 pli\\r\\n');\r\n\r\n            return sdp;\r\n        }\r\n\r\n        function prioritize(codecMimeType, peer) {\r\n            if (!peer || !peer.getSenders || !peer.getSenders().length) {\r\n                return;\r\n            }\r\n\r\n            if (!codecMimeType || typeof codecMimeType !== 'string') {\r\n                throw 'Invalid arguments.';\r\n            }\r\n\r\n            peer.getSenders().forEach(function(sender) {\r\n                var params = sender.getParameters();\r\n                for (var i = 0; i < params.codecs.length; i++) {\r\n                    if (params.codecs[i].mimeType == codecMimeType) {\r\n                        params.codecs.unshift(params.codecs.splice(i, 1));\r\n                        break;\r\n                    }\r\n                }\r\n                sender.setParameters(params);\r\n            });\r\n        }\r\n\r\n        function removeNonG722(sdp) {\r\n            return sdp.replace(/m=audio ([0-9]+) RTP\\/SAVPF ([0-9 ]*)/g, 'm=audio $1 RTP\\/SAVPF 9');\r\n        }\r\n\r\n        function setBAS(sdp, bandwidth, isScreen) {\r\n            if (!bandwidth) {\r\n                return sdp;\r\n            }\r\n\r\n            if (typeof isFirefox !== 'undefined' && isFirefox) {\r\n                return sdp;\r\n            }\r\n\r\n            if (isScreen) {\r\n                if (!bandwidth.screen) {\r\n                    console.warn('It seems that you are not using bandwidth for screen. Screen sharing is expected to fail.');\r\n                } else if (bandwidth.screen < 300) {\r\n                    console.warn('It seems that you are using wrong bandwidth value for screen. Screen sharing is expected to fail.');\r\n                }\r\n            }\r\n\r\n            // if screen; must use at least 300kbs\r\n            if (bandwidth.screen && isScreen) {\r\n                sdp = sdp.replace(/b=AS([^\\r\\n]+\\r\\n)/g, '');\r\n                sdp = sdp.replace(/a=mid:video\\r\\n/g, 'a=mid:video\\r\\nb=AS:' + bandwidth.screen + '\\r\\n');\r\n            }\r\n\r\n            // remove existing bandwidth lines\r\n            if (bandwidth.audio || bandwidth.video) {\r\n                sdp = sdp.replace(/b=AS([^\\r\\n]+\\r\\n)/g, '');\r\n            }\r\n\r\n            if (bandwidth.audio) {\r\n                sdp = sdp.replace(/a=mid:audio\\r\\n/g, 'a=mid:audio\\r\\nb=AS:' + bandwidth.audio + '\\r\\n');\r\n            }\r\n\r\n            if (bandwidth.screen) {\r\n                sdp = sdp.replace(/a=mid:video\\r\\n/g, 'a=mid:video\\r\\nb=AS:' + bandwidth.screen + '\\r\\n');\r\n            } else if (bandwidth.video) {\r\n                sdp = sdp.replace(/a=mid:video\\r\\n/g, 'a=mid:video\\r\\nb=AS:' + bandwidth.video + '\\r\\n');\r\n            }\r\n\r\n            return sdp;\r\n        }\r\n\r\n        // Find the line in sdpLines that starts with |prefix|, and, if specified,\r\n        // contains |substr| (case-insensitive search).\r\n        function findLine(sdpLines, prefix, substr) {\r\n            return findLineInRange(sdpLines, 0, -1, prefix, substr);\r\n        }\r\n\r\n        // Find the line in sdpLines[startLine...endLine - 1] that starts with |prefix|\r\n        // and, if specified, contains |substr| (case-insensitive search).\r\n        function findLineInRange(sdpLines, startLine, endLine, prefix, substr) {\r\n            var realEndLine = endLine !== -1 ? endLine : sdpLines.length;\r\n            for (var i = startLine; i < realEndLine; ++i) {\r\n                if (sdpLines[i].indexOf(prefix) === 0) {\r\n                    if (!substr ||\r\n                        sdpLines[i].toLowerCase().indexOf(substr.toLowerCase()) !== -1) {\r\n                        return i;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        // Gets the codec payload type from an a=rtpmap:X line.\r\n        function getCodecPayloadType(sdpLine) {\r\n            var pattern = new RegExp('a=rtpmap:(\\\\d+) \\\\w+\\\\/\\\\d+');\r\n            var result = sdpLine.match(pattern);\r\n            return (result && result.length === 2) ? result[1] : null;\r\n        }\r\n\r\n        function setVideoBitrates(sdp, params) {\r\n            params = params || {};\r\n            var xgoogle_min_bitrate = params.min;\r\n            var xgoogle_max_bitrate = params.max;\r\n\r\n            var sdpLines = sdp.split('\\r\\n');\r\n\r\n            // VP8\r\n            var vp8Index = findLine(sdpLines, 'a=rtpmap', 'VP8/90000');\r\n            var vp8Payload;\r\n            if (vp8Index) {\r\n                vp8Payload = getCodecPayloadType(sdpLines[vp8Index]);\r\n            }\r\n\r\n            if (!vp8Payload) {\r\n                return sdp;\r\n            }\r\n\r\n            var rtxIndex = findLine(sdpLines, 'a=rtpmap', 'rtx/90000');\r\n            var rtxPayload;\r\n            if (rtxIndex) {\r\n                rtxPayload = getCodecPayloadType(sdpLines[rtxIndex]);\r\n            }\r\n\r\n            if (!rtxIndex) {\r\n                return sdp;\r\n            }\r\n\r\n            var rtxFmtpLineIndex = findLine(sdpLines, 'a=fmtp:' + rtxPayload.toString());\r\n            if (rtxFmtpLineIndex !== null) {\r\n                var appendrtxNext = '\\r\\n';\r\n                appendrtxNext += 'a=fmtp:' + vp8Payload + ' x-google-min-bitrate=' + (xgoogle_min_bitrate || '228') + '; x-google-max-bitrate=' + (xgoogle_max_bitrate || '228');\r\n                sdpLines[rtxFmtpLineIndex] = sdpLines[rtxFmtpLineIndex].concat(appendrtxNext);\r\n                sdp = sdpLines.join('\\r\\n');\r\n            }\r\n\r\n            return sdp;\r\n        }\r\n\r\n        function setOpusAttributes(sdp, params) {\r\n            params = params || {};\r\n\r\n            var sdpLines = sdp.split('\\r\\n');\r\n\r\n            // Opus\r\n            var opusIndex = findLine(sdpLines, 'a=rtpmap', 'opus/48000');\r\n            var opusPayload;\r\n            if (opusIndex) {\r\n                opusPayload = getCodecPayloadType(sdpLines[opusIndex]);\r\n            }\r\n\r\n            if (!opusPayload) {\r\n                return sdp;\r\n            }\r\n\r\n            var opusFmtpLineIndex = findLine(sdpLines, 'a=fmtp:' + opusPayload.toString());\r\n            if (opusFmtpLineIndex === null) {\r\n                return sdp;\r\n            }\r\n\r\n            var appendOpusNext = '';\r\n            appendOpusNext += '; stereo=' + (typeof params.stereo != 'undefined' ? params.stereo : '1');\r\n            appendOpusNext += '; sprop-stereo=' + (typeof params['sprop-stereo'] != 'undefined' ? params['sprop-stereo'] : '1');\r\n\r\n            if (typeof params.maxaveragebitrate != 'undefined') {\r\n                appendOpusNext += '; maxaveragebitrate=' + (params.maxaveragebitrate || 128 * 1024 * 8);\r\n            }\r\n\r\n            if (typeof params.maxplaybackrate != 'undefined') {\r\n                appendOpusNext += '; maxplaybackrate=' + (params.maxplaybackrate || 128 * 1024 * 8);\r\n            }\r\n\r\n            if (typeof params.cbr != 'undefined') {\r\n                appendOpusNext += '; cbr=' + (typeof params.cbr != 'undefined' ? params.cbr : '1');\r\n            }\r\n\r\n            if (typeof params.useinbandfec != 'undefined') {\r\n                appendOpusNext += '; useinbandfec=' + params.useinbandfec;\r\n            }\r\n\r\n            if (typeof params.usedtx != 'undefined') {\r\n                appendOpusNext += '; usedtx=' + params.usedtx;\r\n            }\r\n\r\n            if (typeof params.maxptime != 'undefined') {\r\n                appendOpusNext += '\\r\\na=maxptime:' + params.maxptime;\r\n            }\r\n\r\n            sdpLines[opusFmtpLineIndex] = sdpLines[opusFmtpLineIndex].concat(appendOpusNext);\r\n\r\n            sdp = sdpLines.join('\\r\\n');\r\n            return sdp;\r\n        }\r\n\r\n        // forceStereoAudio => via webrtcexample.com\r\n        // requires getUserMedia => echoCancellation:false\r\n        function forceStereoAudio(sdp) {\r\n            var sdpLines = sdp.split('\\r\\n');\r\n            var fmtpLineIndex = null;\r\n            for (var i = 0; i < sdpLines.length; i++) {\r\n                if (sdpLines[i].search('opus/48000') !== -1) {\r\n                    var opusPayload = extractSdp(sdpLines[i], /:(\\d+) opus\\/48000/i);\r\n                    break;\r\n                }\r\n            }\r\n            for (var i = 0; i < sdpLines.length; i++) {\r\n                if (sdpLines[i].search('a=fmtp') !== -1) {\r\n                    var payload = extractSdp(sdpLines[i], /a=fmtp:(\\d+)/);\r\n                    if (payload === opusPayload) {\r\n                        fmtpLineIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (fmtpLineIndex === null) return sdp;\r\n            sdpLines[fmtpLineIndex] = sdpLines[fmtpLineIndex].concat('; stereo=1; sprop-stereo=1');\r\n            sdp = sdpLines.join('\\r\\n');\r\n            return sdp;\r\n        }\r\n\r\n        return {\r\n            removeVPX: removeVPX,\r\n            disableNACK: disableNACK,\r\n            prioritize: prioritize,\r\n            removeNonG722: removeNonG722,\r\n            setApplicationSpecificBandwidth: function(sdp, bandwidth, isScreen) {\r\n                return setBAS(sdp, bandwidth, isScreen);\r\n            },\r\n            setVideoBitrates: function(sdp, params) {\r\n                return setVideoBitrates(sdp, params);\r\n            },\r\n            setOpusAttributes: function(sdp, params) {\r\n                return setOpusAttributes(sdp, params);\r\n            },\r\n            preferVP9: function(sdp) {\r\n                return preferCodec(sdp, 'vp9');\r\n            },\r\n            preferCodec: preferCodec,\r\n            forceStereoAudio: forceStereoAudio\r\n        };\r\n    })();\r\n\r\n    // backward compatibility\r\n    window.BandwidthHandler = CodecsHandler;\r\n\r\n    // OnIceCandidateHandler.js\r\n\r\n    var OnIceCandidateHandler = (function() {\r\n        function processCandidates(connection, icePair) {\r\n            var candidate = icePair.candidate;\r\n\r\n            var iceRestrictions = connection.candidates;\r\n            var stun = iceRestrictions.stun;\r\n            var turn = iceRestrictions.turn;\r\n\r\n            if (!isNull(iceRestrictions.reflexive)) {\r\n                stun = iceRestrictions.reflexive;\r\n            }\r\n\r\n            if (!isNull(iceRestrictions.relay)) {\r\n                turn = iceRestrictions.relay;\r\n            }\r\n\r\n            if (!iceRestrictions.host && !!candidate.match(/typ host/g)) {\r\n                return;\r\n            }\r\n\r\n            if (!turn && !!candidate.match(/typ relay/g)) {\r\n                return;\r\n            }\r\n\r\n            if (!stun && !!candidate.match(/typ srflx/g)) {\r\n                return;\r\n            }\r\n\r\n            var protocol = connection.iceProtocols;\r\n\r\n            if (!protocol.udp && !!candidate.match(/ udp /g)) {\r\n                return;\r\n            }\r\n\r\n            if (!protocol.tcp && !!candidate.match(/ tcp /g)) {\r\n                return;\r\n            }\r\n\r\n            if (connection.enableLogs) {\r\n                console.debug('Your candidate pairs:', candidate);\r\n            }\r\n\r\n            return {\r\n                candidate: candidate,\r\n                sdpMid: icePair.sdpMid,\r\n                sdpMLineIndex: icePair.sdpMLineIndex\r\n            };\r\n        }\r\n\r\n        return {\r\n            processCandidates: processCandidates\r\n        };\r\n    })();\r\n\r\n    // IceServersHandler.js\r\n\r\n    var IceServersHandler = (function() {\r\n        function getIceServers(connection) {\r\n            // resiprocate: 3344+4433\r\n            // pions: 7575\r\n            var iceServers = [{\r\n                'urls': [\r\n                    'stun:stun.l.google.com:19302',\r\n                    'stun:stun1.l.google.com:19302',\r\n                    'stun:stun2.l.google.com:19302',\r\n                    'stun:stun.l.google.com:19302?transport=udp',\r\n                ]\r\n            }];\r\n\r\n            return iceServers;\r\n        }\r\n\r\n        return {\r\n            getIceServers: getIceServers\r\n        };\r\n    })();\r\n\r\n    // getUserMediaHandler.js\r\n\r\n    function setStreamType(constraints, stream) {\r\n        if (constraints.mandatory && constraints.mandatory.chromeMediaSource) {\r\n            stream.isScreen = true;\r\n        } else if (constraints.mozMediaSource || constraints.mediaSource) {\r\n            stream.isScreen = true;\r\n        } else if (constraints.video) {\r\n            stream.isVideo = true;\r\n        } else if (constraints.audio) {\r\n            stream.isAudio = true;\r\n        }\r\n    }\r\n\r\n    // allow users to manage this object (to support re-capturing of screen/etc.)\r\n    window.currentUserMediaRequest = {\r\n        streams: [],\r\n        mutex: false,\r\n        queueRequests: [],\r\n        remove: function(idInstance) {\r\n            this.mutex = false;\r\n\r\n            var stream = this.streams[idInstance];\r\n            if (!stream) {\r\n                return;\r\n            }\r\n\r\n            stream = stream.stream;\r\n\r\n            var options = stream.currentUserMediaRequestOptions;\r\n\r\n            if (this.queueRequests.indexOf(options)) {\r\n                delete this.queueRequests[this.queueRequests.indexOf(options)];\r\n                this.queueRequests = removeNullEntries(this.queueRequests);\r\n            }\r\n\r\n            this.streams[idInstance].stream = null;\r\n            delete this.streams[idInstance];\r\n        }\r\n    };\r\n\r\n    function getUserMediaHandler(options) {\r\n        if (currentUserMediaRequest.mutex === true) {\r\n            currentUserMediaRequest.queueRequests.push(options);\r\n            return;\r\n        }\r\n        currentUserMediaRequest.mutex = true;\r\n\r\n        // easy way to match\r\n        var idInstance = JSON.stringify(options.localMediaConstraints);\r\n\r\n        function streaming(stream, returnBack) {\r\n            setStreamType(options.localMediaConstraints, stream);\r\n\r\n            var streamEndedEvent = 'ended';\r\n\r\n            if ('oninactive' in stream) {\r\n                streamEndedEvent = 'inactive';\r\n            }\r\n            stream.addEventListener(streamEndedEvent, function() {\r\n                delete currentUserMediaRequest.streams[idInstance];\r\n\r\n                currentUserMediaRequest.mutex = false;\r\n                if (currentUserMediaRequest.queueRequests.indexOf(options)) {\r\n                    delete currentUserMediaRequest.queueRequests[currentUserMediaRequest.queueRequests.indexOf(options)];\r\n                    currentUserMediaRequest.queueRequests = removeNullEntries(currentUserMediaRequest.queueRequests);\r\n                }\r\n            }, false);\r\n\r\n            currentUserMediaRequest.streams[idInstance] = {\r\n                stream: stream\r\n            };\r\n            currentUserMediaRequest.mutex = false;\r\n\r\n            if (currentUserMediaRequest.queueRequests.length) {\r\n                getUserMediaHandler(currentUserMediaRequest.queueRequests.shift());\r\n            }\r\n\r\n            // callback\r\n            options.onGettingLocalMedia(stream, returnBack);\r\n        }\r\n\r\n        if (currentUserMediaRequest.streams[idInstance]) {\r\n            streaming(currentUserMediaRequest.streams[idInstance].stream, true);\r\n        } else {\r\n            var isBlackBerry = !!(/BB10|BlackBerry/i.test(navigator.userAgent || ''));\r\n            if (isBlackBerry || typeof navigator.mediaDevices === 'undefined' || typeof navigator.mediaDevices.getUserMedia !== 'function') {\r\n                navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n                navigator.getUserMedia(options.localMediaConstraints, function(stream) {\r\n                    stream.streamid = stream.streamid || stream.id || getRandomString();\r\n                    stream.idInstance = idInstance;\r\n                    streaming(stream);\r\n                }, function(error) {\r\n                    options.onLocalMediaError(error, options.localMediaConstraints);\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (typeof navigator.mediaDevices === 'undefined') {\r\n                navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n                var getUserMediaSuccess = function() {};\r\n                var getUserMediaFailure = function() {};\r\n\r\n                var getUserMediaStream, getUserMediaError;\r\n                navigator.mediaDevices = {\r\n                    getUserMedia: function(hints) {\r\n                        navigator.getUserMedia(hints, function(getUserMediaSuccess) {\r\n                            getUserMediaSuccess(stream);\r\n                            getUserMediaStream = stream;\r\n                        }, function(error) {\r\n                            getUserMediaFailure(error);\r\n                            getUserMediaError = error;\r\n                        });\r\n\r\n                        return {\r\n                            then: function(successCB) {\r\n                                if (getUserMediaStream) {\r\n                                    successCB(getUserMediaStream);\r\n                                    return;\r\n                                }\r\n\r\n                                getUserMediaSuccess = successCB;\r\n\r\n                                return {\r\n                                    then: function(failureCB) {\r\n                                        if (getUserMediaError) {\r\n                                            failureCB(getUserMediaError);\r\n                                            return;\r\n                                        }\r\n\r\n                                        getUserMediaFailure = failureCB;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            if (options.localMediaConstraints.isScreen === true) {\r\n                if (navigator.mediaDevices.getDisplayMedia) {\r\n                    navigator.mediaDevices.getDisplayMedia(options.localMediaConstraints).then(function(stream) {\r\n                        stream.streamid = stream.streamid || stream.id || getRandomString();\r\n                        stream.idInstance = idInstance;\r\n\r\n                        streaming(stream);\r\n                    }).catch(function(error) {\r\n                        options.onLocalMediaError(error, options.localMediaConstraints);\r\n                    });\r\n                } else if (navigator.getDisplayMedia) {\r\n                    navigator.getDisplayMedia(options.localMediaConstraints).then(function(stream) {\r\n                        stream.streamid = stream.streamid || stream.id || getRandomString();\r\n                        stream.idInstance = idInstance;\r\n\r\n                        streaming(stream);\r\n                    }).catch(function(error) {\r\n                        options.onLocalMediaError(error, options.localMediaConstraints);\r\n                    });\r\n                } else {\r\n                    throw new Error('getDisplayMedia API is not availabe in this browser.');\r\n                }\r\n                return;\r\n            }\r\n\r\n            navigator.mediaDevices.getUserMedia(options.localMediaConstraints).then(function(stream) {\r\n                stream.streamid = stream.streamid || stream.id || getRandomString();\r\n                stream.idInstance = idInstance;\r\n\r\n                streaming(stream);\r\n            }).catch(function(error) {\r\n                options.onLocalMediaError(error, options.localMediaConstraints);\r\n            });\r\n        }\r\n    }\r\n\r\n    // StreamsHandler.js\r\n\r\n    var StreamsHandler = (function() {\r\n        function handleType(type) {\r\n            if (!type) {\r\n                return;\r\n            }\r\n\r\n            if (typeof type === 'string' || typeof type === 'undefined') {\r\n                return type;\r\n            }\r\n\r\n            if (type.audio && type.video) {\r\n                return null;\r\n            }\r\n\r\n            if (type.audio) {\r\n                return 'audio';\r\n            }\r\n\r\n            if (type.video) {\r\n                return 'video';\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        function setHandlers(stream, syncAction, connection) {\r\n            if (!stream || !stream.addEventListener) return;\r\n\r\n            if (typeof syncAction == 'undefined' || syncAction == true) {\r\n                var streamEndedEvent = 'ended';\r\n\r\n                if ('oninactive' in stream) {\r\n                    streamEndedEvent = 'inactive';\r\n                }\r\n\r\n                stream.addEventListener(streamEndedEvent, function() {\r\n                    StreamsHandler.onSyncNeeded(this.streamid, streamEndedEvent);\r\n                }, false);\r\n            }\r\n\r\n            stream.mute = function(type, isSyncAction) {\r\n                type = handleType(type);\r\n\r\n                if (typeof isSyncAction !== 'undefined') {\r\n                    syncAction = isSyncAction;\r\n                }\r\n\r\n                if (typeof type == 'undefined' || type == 'audio') {\r\n                    getTracks(stream, 'audio').forEach(function(track) {\r\n                        track.enabled = false;\r\n                        connection.streamEvents[stream.streamid].isAudioMuted = true;\r\n                    });\r\n                }\r\n\r\n                if (typeof type == 'undefined' || type == 'video') {\r\n                    getTracks(stream, 'video').forEach(function(track) {\r\n                        track.enabled = false;\r\n                    });\r\n                }\r\n\r\n                if (typeof syncAction == 'undefined' || syncAction == true) {\r\n                    StreamsHandler.onSyncNeeded(stream.streamid, 'mute', type);\r\n                }\r\n\r\n                connection.streamEvents[stream.streamid].muteType = type || 'both';\r\n\r\n                fireEvent(stream, 'mute', type);\r\n            };\r\n\r\n            stream.unmute = function(type, isSyncAction) {\r\n                type = handleType(type);\r\n\r\n                if (typeof isSyncAction !== 'undefined') {\r\n                    syncAction = isSyncAction;\r\n                }\r\n\r\n                graduallyIncreaseVolume();\r\n\r\n                if (typeof type == 'undefined' || type == 'audio') {\r\n                    getTracks(stream, 'audio').forEach(function(track) {\r\n                        track.enabled = true;\r\n                        connection.streamEvents[stream.streamid].isAudioMuted = false;\r\n                    });\r\n                }\r\n\r\n                if (typeof type == 'undefined' || type == 'video') {\r\n                    getTracks(stream, 'video').forEach(function(track) {\r\n                        track.enabled = true;\r\n                    });\r\n\r\n                    // make sure that video unmute doesn't affects audio\r\n                    if (typeof type !== 'undefined' && type == 'video' && connection.streamEvents[stream.streamid].isAudioMuted) {\r\n                        (function looper(times) {\r\n                            if (!times) {\r\n                                times = 0;\r\n                            }\r\n\r\n                            times++;\r\n\r\n                            // check until five-seconds\r\n                            if (times < 100 && connection.streamEvents[stream.streamid].isAudioMuted) {\r\n                                stream.mute('audio');\r\n\r\n                                setTimeout(function() {\r\n                                    looper(times);\r\n                                }, 50);\r\n                            }\r\n                        })();\r\n                    }\r\n                }\r\n\r\n                if (typeof syncAction == 'undefined' || syncAction == true) {\r\n                    StreamsHandler.onSyncNeeded(stream.streamid, 'unmute', type);\r\n                }\r\n\r\n                connection.streamEvents[stream.streamid].unmuteType = type || 'both';\r\n\r\n                fireEvent(stream, 'unmute', type);\r\n            };\r\n\r\n            function graduallyIncreaseVolume() {\r\n                if (!connection.streamEvents[stream.streamid].mediaElement) {\r\n                    return;\r\n                }\r\n\r\n                var mediaElement = connection.streamEvents[stream.streamid].mediaElement;\r\n                mediaElement.volume = 0;\r\n                afterEach(200, 5, function() {\r\n                    try {\r\n                        mediaElement.volume += .20;\r\n                    } catch (e) {\r\n                        mediaElement.volume = 1;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        function afterEach(setTimeoutInteval, numberOfTimes, callback, startedTimes) {\r\n            startedTimes = (startedTimes || 0) + 1;\r\n            if (startedTimes >= numberOfTimes) return;\r\n\r\n            setTimeout(function() {\r\n                callback();\r\n                afterEach(setTimeoutInteval, numberOfTimes, callback, startedTimes);\r\n            }, setTimeoutInteval);\r\n        }\r\n\r\n        return {\r\n            setHandlers: setHandlers,\r\n            onSyncNeeded: function(streamid, action, type) {}\r\n        };\r\n    })();\r\n\r\n    // TextReceiver.js & TextSender.js\r\n\r\n    function TextReceiver(connection) {\r\n        var content = {};\r\n\r\n        function receive(data, userid, extra) {\r\n            // uuid is used to uniquely identify sending instance\r\n            var uuid = data.uuid;\r\n            if (!content[uuid]) {\r\n                content[uuid] = [];\r\n            }\r\n\r\n            content[uuid].push(data.message);\r\n\r\n            if (data.last) {\r\n                var message = content[uuid].join('');\r\n                if (data.isobject) {\r\n                    message = JSON.parse(message);\r\n                }\r\n\r\n                // latency detection\r\n                var receivingTime = new Date().getTime();\r\n                var latency = receivingTime - data.sendingTime;\r\n\r\n                var e = {\r\n                    data: message,\r\n                    userid: userid,\r\n                    extra: extra,\r\n                    latency: latency\r\n                };\r\n\r\n                if (connection.autoTranslateText) {\r\n                    e.original = e.data;\r\n                    connection.Translator.TranslateText(e.data, function(translatedText) {\r\n                        e.data = translatedText;\r\n                        connection.onmessage(e);\r\n                    });\r\n                } else {\r\n                    connection.onmessage(e);\r\n                }\r\n\r\n                delete content[uuid];\r\n            }\r\n        }\r\n\r\n        return {\r\n            receive: receive\r\n        };\r\n    }\r\n\r\n    // TextSender.js\r\n    var TextSender = {\r\n        send: function(config) {\r\n            var connection = config.connection;\r\n\r\n            var channel = config.channel,\r\n                remoteUserId = config.remoteUserId,\r\n                initialText = config.text,\r\n                packetSize = connection.chunkSize || 1000,\r\n                textToTransfer = '',\r\n                isobject = false;\r\n\r\n            if (!isString(initialText)) {\r\n                isobject = true;\r\n                initialText = JSON.stringify(initialText);\r\n            }\r\n\r\n            // uuid is used to uniquely identify sending instance\r\n            var uuid = getRandomString();\r\n            var sendingTime = new Date().getTime();\r\n\r\n            sendText(initialText);\r\n\r\n            function sendText(textMessage, text) {\r\n                var data = {\r\n                    type: 'text',\r\n                    uuid: uuid,\r\n                    sendingTime: sendingTime\r\n                };\r\n\r\n                if (textMessage) {\r\n                    text = textMessage;\r\n                    data.packets = parseInt(text.length / packetSize);\r\n                }\r\n\r\n                if (text.length > packetSize) {\r\n                    data.message = text.slice(0, packetSize);\r\n                } else {\r\n                    data.message = text;\r\n                    data.last = true;\r\n                    data.isobject = isobject;\r\n                }\r\n\r\n                channel.send(data, remoteUserId);\r\n\r\n                textToTransfer = text.slice(data.message.length);\r\n\r\n                if (textToTransfer.length) {\r\n                    setTimeout(function() {\r\n                        sendText(null, textToTransfer);\r\n                    }, connection.chunkInterval || 100);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // FileProgressBarHandler.js\r\n\r\n    var FileProgressBarHandler = (function() {\r\n        function handle(connection) {\r\n            var progressHelper = {};\r\n\r\n            // www.RTCMultiConnection.org/docs/onFileStart/\r\n            connection.onFileStart = function(file) {\r\n                var div = document.createElement('div');\r\n                div.title = file.name;\r\n                div.innerHTML = '<label>0%</label> <progress></progress>';\r\n\r\n                if (file.remoteUserId) {\r\n                    div.innerHTML += ' (Sharing with:' + file.remoteUserId + ')';\r\n                }\r\n\r\n                if (!connection.filesContainer) {\r\n                    connection.filesContainer = document.body || document.documentElement;\r\n                }\r\n\r\n                connection.filesContainer.insertBefore(div, connection.filesContainer.firstChild);\r\n\r\n                if (!file.remoteUserId) {\r\n                    progressHelper[file.uuid] = {\r\n                        div: div,\r\n                        progress: div.querySelector('progress'),\r\n                        label: div.querySelector('label')\r\n                    };\r\n                    progressHelper[file.uuid].progress.max = file.maxChunks;\r\n                    return;\r\n                }\r\n\r\n                if (!progressHelper[file.uuid]) {\r\n                    progressHelper[file.uuid] = {};\r\n                }\r\n\r\n                progressHelper[file.uuid][file.remoteUserId] = {\r\n                    div: div,\r\n                    progress: div.querySelector('progress'),\r\n                    label: div.querySelector('label')\r\n                };\r\n                progressHelper[file.uuid][file.remoteUserId].progress.max = file.maxChunks;\r\n            };\r\n\r\n            // www.RTCMultiConnection.org/docs/onFileProgress/\r\n            connection.onFileProgress = function(chunk) {\r\n                var helper = progressHelper[chunk.uuid];\r\n                if (!helper) {\r\n                    return;\r\n                }\r\n                if (chunk.remoteUserId) {\r\n                    helper = progressHelper[chunk.uuid][chunk.remoteUserId];\r\n                    if (!helper) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                helper.progress.value = chunk.currentPosition || chunk.maxChunks || helper.progress.max;\r\n                updateLabel(helper.progress, helper.label);\r\n            };\r\n\r\n            // www.RTCMultiConnection.org/docs/onFileEnd/\r\n            connection.onFileEnd = function(file) {\r\n                var helper = progressHelper[file.uuid];\r\n                if (!helper) {\r\n                    console.error('No such progress-helper element exist.', file);\r\n                    return;\r\n                }\r\n\r\n                if (file.remoteUserId) {\r\n                    helper = progressHelper[file.uuid][file.remoteUserId];\r\n                    if (!helper) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                var div = helper.div;\r\n                if (file.type.indexOf('image') != -1) {\r\n                    div.innerHTML = '<a href=\"' + file.url + '\" download=\"' + file.name + '\">Download <strong style=\"color:red;\">' + file.name + '</strong> </a><br /><img src=\"' + file.url + '\" title=\"' + file.name + '\" style=\"max-width: 80%;\">';\r\n                } else {\r\n                    div.innerHTML = '<a href=\"' + file.url + '\" download=\"' + file.name + '\">Download <strong style=\"color:red;\">' + file.name + '</strong> </a><br /><iframe src=\"' + file.url + '\" title=\"' + file.name + '\" style=\"width: 80%;border: 0;height: inherit;margin-top:1em;\"></iframe>';\r\n                }\r\n            };\r\n\r\n            function updateLabel(progress, label) {\r\n                if (progress.position === -1) {\r\n                    return;\r\n                }\r\n\r\n                var position = +progress.position.toFixed(2).split('.')[1] || 100;\r\n                label.innerHTML = position + '%';\r\n            }\r\n        }\r\n\r\n        return {\r\n            handle: handle\r\n        };\r\n    })();\r\n\r\n    // TranslationHandler.js\r\n\r\n    var TranslationHandler = (function() {\r\n        function handle(connection) {\r\n            connection.autoTranslateText = false;\r\n            connection.language = 'en';\r\n            connection.googKey = 'AIzaSyCgB5hmFY74WYB-EoWkhr9cAGr6TiTHrEE';\r\n\r\n            // www.RTCMultiConnection.org/docs/Translator/\r\n            connection.Translator = {\r\n                TranslateText: function(text, callback) {\r\n                    // if(location.protocol === 'https:') return callback(text);\r\n\r\n                    var newScript = document.createElement('script');\r\n                    newScript.type = 'text/javascript';\r\n\r\n                    var sourceText = encodeURIComponent(text); // escape\r\n\r\n                    var randomNumber = 'method' + connection.token();\r\n                    window[randomNumber] = function(response) {\r\n                        if (response.data && response.data.translations[0] && callback) {\r\n                            callback(response.data.translations[0].translatedText);\r\n                            return;\r\n                        }\r\n\r\n                        if (response.error && response.error.message === 'Daily Limit Exceeded') {\r\n                            console.error('Text translation failed. Error message: \"Daily Limit Exceeded.\"');\r\n                            return;\r\n                        }\r\n\r\n                        if (response.error) {\r\n                            console.error(response.error.message);\r\n                            return;\r\n                        }\r\n\r\n                        console.error(response);\r\n                    };\r\n\r\n                    var source = 'https://www.googleapis.com/language/translate/v2?key=' + connection.googKey + '&target=' + (connection.language || 'en-US') + '&callback=window.' + randomNumber + '&q=' + sourceText;\r\n                    newScript.src = source;\r\n                    document.getElementsByTagName('head')[0].appendChild(newScript);\r\n                },\r\n                getListOfLanguages: function(callback) {\r\n                    var xhr = new XMLHttpRequest();\r\n                    xhr.onreadystatechange = function() {\r\n                        if (xhr.readyState == XMLHttpRequest.DONE) {\r\n                            var response = JSON.parse(xhr.responseText);\r\n\r\n                            if (response && response.data && response.data.languages) {\r\n                                callback(response.data.languages);\r\n                                return;\r\n                            }\r\n\r\n                            if (response.error && response.error.message === 'Daily Limit Exceeded') {\r\n                                console.error('Text translation failed. Error message: \"Daily Limit Exceeded.\"');\r\n                                return;\r\n                            }\r\n\r\n                            if (response.error) {\r\n                                console.error(response.error.message);\r\n                                return;\r\n                            }\r\n\r\n                            console.error(response);\r\n                        }\r\n                    }\r\n                    var url = 'https://www.googleapis.com/language/translate/v2/languages?key=' + connection.googKey + '&target=en';\r\n                    xhr.open('GET', url, true);\r\n                    xhr.send(null);\r\n                }\r\n            };\r\n        }\r\n\r\n        return {\r\n            handle: handle\r\n        };\r\n    })();\r\n\r\n    // _____________________\r\n    // RTCMultiConnection.js\r\n\r\n    (function(connection) {\r\n        forceOptions = forceOptions || {\r\n            useDefaultDevices: true\r\n        };\r\n\r\n        connection.channel = connection.sessionid = (roomid || location.href.replace(/\\/|:|#|\\?|\\$|\\^|%|\\.|`|~|!|\\+|@|\\[|\\||]|\\|*. /g, '').split('\\n').join('').split('\\r').join('')) + '';\r\n\r\n        var mPeer = new MultiPeers(connection);\r\n\r\n        var preventDuplicateOnStreamEvents = {};\r\n        mPeer.onGettingLocalMedia = function(stream, callback) {\r\n            callback = callback || function() {};\r\n\r\n            if (preventDuplicateOnStreamEvents[stream.streamid]) {\r\n                callback();\r\n                return;\r\n            }\r\n            preventDuplicateOnStreamEvents[stream.streamid] = true;\r\n\r\n            try {\r\n                stream.type = 'local';\r\n            } catch (e) {}\r\n\r\n            connection.setStreamEndHandler(stream);\r\n\r\n            getRMCMediaElement(stream, function(mediaElement) {\r\n                mediaElement.id = stream.streamid;\r\n                mediaElement.muted = true;\r\n                mediaElement.volume = 0;\r\n\r\n                if (connection.attachStreams.indexOf(stream) === -1) {\r\n                    connection.attachStreams.push(stream);\r\n                }\r\n\r\n                if (typeof StreamsHandler !== 'undefined') {\r\n                    StreamsHandler.setHandlers(stream, true, connection);\r\n                }\r\n\r\n                connection.streamEvents[stream.streamid] = {\r\n                    stream: stream,\r\n                    type: 'local',\r\n                    mediaElement: mediaElement,\r\n                    userid: connection.userid,\r\n                    extra: connection.extra,\r\n                    streamid: stream.streamid,\r\n                    isAudioMuted: true\r\n                };\r\n\r\n                try {\r\n                    setHarkEvents(connection, connection.streamEvents[stream.streamid]);\r\n                    setMuteHandlers(connection, connection.streamEvents[stream.streamid]);\r\n\r\n                    connection.onstream(connection.streamEvents[stream.streamid]);\r\n                } catch (e) {\r\n                    //\r\n                }\r\n\r\n                callback();\r\n            }, connection);\r\n        };\r\n\r\n        mPeer.onGettingRemoteMedia = function(stream, remoteUserId) {\r\n            try {\r\n                stream.type = 'remote';\r\n            } catch (e) {}\r\n\r\n            connection.setStreamEndHandler(stream, 'remote-stream');\r\n\r\n            getRMCMediaElement(stream, function(mediaElement) {\r\n                mediaElement.id = stream.streamid;\r\n\r\n                if (typeof StreamsHandler !== 'undefined') {\r\n                    StreamsHandler.setHandlers(stream, false, connection);\r\n                }\r\n\r\n                connection.streamEvents[stream.streamid] = {\r\n                    stream: stream,\r\n                    type: 'remote',\r\n                    userid: remoteUserId,\r\n                    extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {},\r\n                    mediaElement: mediaElement,\r\n                    streamid: stream.streamid\r\n                };\r\n\r\n                setMuteHandlers(connection, connection.streamEvents[stream.streamid]);\r\n\r\n                connection.onstream(connection.streamEvents[stream.streamid]);\r\n            }, connection);\r\n        };\r\n\r\n        mPeer.onRemovingRemoteMedia = function(stream, remoteUserId) {\r\n            var streamEvent = connection.streamEvents[stream.streamid];\r\n            if (!streamEvent) {\r\n                streamEvent = {\r\n                    stream: stream,\r\n                    type: 'remote',\r\n                    userid: remoteUserId,\r\n                    extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {},\r\n                    streamid: stream.streamid,\r\n                    mediaElement: connection.streamEvents[stream.streamid] ? connection.streamEvents[stream.streamid].mediaElement : null\r\n                };\r\n            }\r\n\r\n            if (connection.peersBackup[streamEvent.userid]) {\r\n                streamEvent.extra = connection.peersBackup[streamEvent.userid].extra;\r\n            }\r\n\r\n            connection.onstreamended(streamEvent);\r\n\r\n            delete connection.streamEvents[stream.streamid];\r\n        };\r\n\r\n        mPeer.onNegotiationNeeded = function(message, remoteUserId, callback) {\r\n            callback = callback || function() {};\r\n\r\n            remoteUserId = remoteUserId || message.remoteUserId;\r\n            message = message || '';\r\n\r\n            // usually a message looks like this\r\n            var messageToDeliver = {\r\n                remoteUserId: remoteUserId,\r\n                message: message,\r\n                sender: connection.userid\r\n            };\r\n\r\n            if (message.remoteUserId && message.message && message.sender) {\r\n                // if a code is manually passing required data\r\n                messageToDeliver = message;\r\n            }\r\n\r\n            connectSocket(function() {\r\n                connection.socket.emit(connection.socketMessageEvent, messageToDeliver, callback);\r\n            });\r\n        };\r\n\r\n        function onUserLeft(remoteUserId) {\r\n            connection.deletePeer(remoteUserId);\r\n        }\r\n\r\n        mPeer.onUserLeft = onUserLeft;\r\n        mPeer.disconnectWith = function(remoteUserId, callback) {\r\n            if (connection.socket) {\r\n                connection.socket.emit('disconnect-with', remoteUserId, callback || function() {});\r\n            }\r\n\r\n            connection.deletePeer(remoteUserId);\r\n        };\r\n\r\n        connection.socketOptions = {\r\n            // 'force new connection': true, // For SocketIO version < 1.0\r\n            // 'forceNew': true, // For SocketIO version >= 1.0\r\n            'transport': 'polling' // fixing transport:unknown issues\r\n        };\r\n\r\n        function connectSocket(connectCallback) {\r\n            connection.socketAutoReConnect = true;\r\n\r\n            if (connection.socket) { // todo: check here readySate/etc. to make sure socket is still opened\r\n                if (connectCallback) {\r\n                    connectCallback(connection.socket);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (typeof SocketConnection === 'undefined') {\r\n                if (typeof FirebaseConnection !== 'undefined') {\r\n                    window.SocketConnection = FirebaseConnection;\r\n                } else if (typeof PubNubConnection !== 'undefined') {\r\n                    window.SocketConnection = PubNubConnection;\r\n                } else {\r\n                    throw 'SocketConnection.js seems missed.';\r\n                }\r\n            }\r\n\r\n            new SocketConnection(connection, function(s) {\r\n                if (connectCallback) {\r\n                    connectCallback(connection.socket);\r\n                }\r\n            });\r\n        }\r\n\r\n        // 1st paramter is roomid\r\n        // 2rd paramter is a callback function\r\n        connection.openOrJoin = function(roomid, callback) {\r\n            callback = callback || function() {};\r\n\r\n            connection.checkPresence(roomid, function(isRoomExist, roomid) {\r\n                if (isRoomExist) {\r\n                    connection.sessionid = roomid;\r\n\r\n                    var localPeerSdpConstraints = false;\r\n                    var remotePeerSdpConstraints = false;\r\n                    var isOneWay = !!connection.session.oneway;\r\n                    var isDataOnly = isData(connection.session);\r\n\r\n                    remotePeerSdpConstraints = {\r\n                        OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    }\r\n\r\n                    localPeerSdpConstraints = {\r\n                        OfferToReceiveAudio: isOneWay ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: isOneWay ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    }\r\n\r\n                    var connectionDescription = {\r\n                        remoteUserId: connection.sessionid,\r\n                        message: {\r\n                            newParticipationRequest: true,\r\n                            isOneWay: isOneWay,\r\n                            isDataOnly: isDataOnly,\r\n                            localPeerSdpConstraints: localPeerSdpConstraints,\r\n                            remotePeerSdpConstraints: remotePeerSdpConstraints\r\n                        },\r\n                        sender: connection.userid\r\n                    };\r\n\r\n                    beforeJoin(connectionDescription.message, function() {\r\n                        joinRoom(connectionDescription, callback);\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                connection.waitingForLocalMedia = true;\r\n                connection.isInitiator = true;\r\n\r\n                connection.sessionid = roomid || connection.sessionid;\r\n\r\n                if (isData(connection.session)) {\r\n                    openRoom(callback);\r\n                    return;\r\n                }\r\n\r\n                connection.captureUserMedia(function() {\r\n                    openRoom(callback);\r\n                });\r\n            });\r\n        };\r\n\r\n        // don't allow someone to join this person until he has the media\r\n        connection.waitingForLocalMedia = false;\r\n\r\n        connection.open = function(roomid, callback) {\r\n            callback = callback || function() {};\r\n\r\n            connection.waitingForLocalMedia = true;\r\n            connection.isInitiator = true;\r\n\r\n            connection.sessionid = roomid || connection.sessionid;\r\n\r\n            connectSocket(function() {\r\n                if (isData(connection.session)) {\r\n                    openRoom(callback);\r\n                    return;\r\n                }\r\n\r\n                connection.captureUserMedia(function() {\r\n                    openRoom(callback);\r\n                });\r\n            });\r\n        };\r\n\r\n        // this object keeps extra-data records for all connected users\r\n        // this object is never cleared so you can always access extra-data even if a user left\r\n        connection.peersBackup = {};\r\n\r\n        connection.deletePeer = function(remoteUserId) {\r\n            if (!remoteUserId || !connection.peers[remoteUserId]) {\r\n                return;\r\n            }\r\n\r\n            var eventObject = {\r\n                userid: remoteUserId,\r\n                extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {}\r\n            };\r\n\r\n            if (connection.peersBackup[eventObject.userid]) {\r\n                eventObject.extra = connection.peersBackup[eventObject.userid].extra;\r\n            }\r\n\r\n            connection.onleave(eventObject);\r\n\r\n            if (!!connection.peers[remoteUserId]) {\r\n                connection.peers[remoteUserId].streams.forEach(function(stream) {\r\n                    stream.stop();\r\n                });\r\n\r\n                var peer = connection.peers[remoteUserId].peer;\r\n                if (peer && peer.iceConnectionState !== 'closed') {\r\n                    try {\r\n                        peer.close();\r\n                    } catch (e) {}\r\n                }\r\n\r\n                if (connection.peers[remoteUserId]) {\r\n                    connection.peers[remoteUserId].peer = null;\r\n                    delete connection.peers[remoteUserId];\r\n                }\r\n            }\r\n        }\r\n\r\n        connection.rejoin = function(connectionDescription) {\r\n            if (connection.isInitiator || !connectionDescription || !Object.keys(connectionDescription).length) {\r\n                return;\r\n            }\r\n\r\n            var extra = {};\r\n\r\n            if (connection.peers[connectionDescription.remoteUserId]) {\r\n                extra = connection.peers[connectionDescription.remoteUserId].extra;\r\n                connection.deletePeer(connectionDescription.remoteUserId);\r\n            }\r\n\r\n            if (connectionDescription && connectionDescription.remoteUserId) {\r\n                connection.join(connectionDescription.remoteUserId);\r\n\r\n                connection.onReConnecting({\r\n                    userid: connectionDescription.remoteUserId,\r\n                    extra: extra\r\n                });\r\n            }\r\n        };\r\n\r\n        connection.join = function(remoteUserId, options) {\r\n            connection.sessionid = (remoteUserId ? remoteUserId.sessionid || remoteUserId.remoteUserId || remoteUserId : false) || connection.sessionid;\r\n            connection.sessionid += '';\r\n\r\n            var localPeerSdpConstraints = false;\r\n            var remotePeerSdpConstraints = false;\r\n            var isOneWay = false;\r\n            var isDataOnly = false;\r\n\r\n            if ((remoteUserId && remoteUserId.session) || !remoteUserId || typeof remoteUserId === 'string') {\r\n                var session = remoteUserId ? remoteUserId.session || connection.session : connection.session;\r\n\r\n                isOneWay = !!session.oneway;\r\n                isDataOnly = isData(session);\r\n\r\n                remotePeerSdpConstraints = {\r\n                    OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                    OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                };\r\n\r\n                localPeerSdpConstraints = {\r\n                    OfferToReceiveAudio: isOneWay ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                    OfferToReceiveVideo: isOneWay ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                };\r\n            }\r\n\r\n            options = options || {};\r\n\r\n            var cb = function() {};\r\n            if (typeof options === 'function') {\r\n                cb = options;\r\n                options = {};\r\n            }\r\n\r\n            if (typeof options.localPeerSdpConstraints !== 'undefined') {\r\n                localPeerSdpConstraints = options.localPeerSdpConstraints;\r\n            }\r\n\r\n            if (typeof options.remotePeerSdpConstraints !== 'undefined') {\r\n                remotePeerSdpConstraints = options.remotePeerSdpConstraints;\r\n            }\r\n\r\n            if (typeof options.isOneWay !== 'undefined') {\r\n                isOneWay = options.isOneWay;\r\n            }\r\n\r\n            if (typeof options.isDataOnly !== 'undefined') {\r\n                isDataOnly = options.isDataOnly;\r\n            }\r\n\r\n            var connectionDescription = {\r\n                remoteUserId: connection.sessionid,\r\n                message: {\r\n                    newParticipationRequest: true,\r\n                    isOneWay: isOneWay,\r\n                    isDataOnly: isDataOnly,\r\n                    localPeerSdpConstraints: localPeerSdpConstraints,\r\n                    remotePeerSdpConstraints: remotePeerSdpConstraints\r\n                },\r\n                sender: connection.userid\r\n            };\r\n\r\n            beforeJoin(connectionDescription.message, function() {\r\n                connectSocket(function() {\r\n                    joinRoom(connectionDescription, cb);\r\n                });\r\n            });\r\n            return connectionDescription;\r\n        };\r\n\r\n        function joinRoom(connectionDescription, cb) {\r\n            connection.socket.emit('join-room', {\r\n                sessionid: connection.sessionid,\r\n                session: connection.session,\r\n                mediaConstraints: connection.mediaConstraints,\r\n                sdpConstraints: connection.sdpConstraints,\r\n                streams: getStreamInfoForAdmin(),\r\n                extra: connection.extra,\r\n                password: typeof connection.password !== 'undefined' && typeof connection.password !== 'object' ? connection.password : ''\r\n            }, function(isRoomJoined, error) {\r\n                if (isRoomJoined === true) {\r\n                    if (connection.enableLogs) {\r\n                        console.log('isRoomJoined: ', isRoomJoined, ' roomid: ', connection.sessionid);\r\n                    }\r\n\r\n                    if (!!connection.peers[connection.sessionid]) {\r\n                        // on socket disconnect & reconnect\r\n                        return;\r\n                    }\r\n\r\n                    mPeer.onNegotiationNeeded(connectionDescription);\r\n                }\r\n\r\n                if (isRoomJoined === false) {\r\n                    if (connection.enableLogs) {\r\n                        console.warn('isRoomJoined: ', error, ' roomid: ', connection.sessionid);\r\n                    }\r\n\r\n                    // [disabled] retry after 3 seconds\r\n                    false && setTimeout(function() {\r\n                        joinRoom(connectionDescription, cb);\r\n                    }, 3000);\r\n                }\r\n\r\n                cb(isRoomJoined, connection.sessionid, error);\r\n            });\r\n        }\r\n\r\n        connection.publicRoomIdentifier = '';\r\n\r\n        function openRoom(callback) {\r\n            if (connection.enableLogs) {\r\n                console.log('Sending open-room signal to socket.io');\r\n            }\r\n\r\n            connection.waitingForLocalMedia = false;\r\n            connection.socket.emit('open-room', {\r\n                sessionid: connection.sessionid,\r\n                session: connection.session,\r\n                mediaConstraints: connection.mediaConstraints,\r\n                sdpConstraints: connection.sdpConstraints,\r\n                streams: getStreamInfoForAdmin(),\r\n                extra: connection.extra,\r\n                identifier: connection.publicRoomIdentifier,\r\n                password: typeof connection.password !== 'undefined' && typeof connection.password !== 'object' ? connection.password : ''\r\n            }, function(isRoomOpened, error) {\r\n                if (isRoomOpened === true) {\r\n                    if (connection.enableLogs) {\r\n                        console.log('isRoomOpened: ', isRoomOpened, ' roomid: ', connection.sessionid);\r\n                    }\r\n                    callback(isRoomOpened, connection.sessionid);\r\n                }\r\n\r\n                if (isRoomOpened === false) {\r\n                    if (connection.enableLogs) {\r\n                        console.warn('isRoomOpened: ', error, ' roomid: ', connection.sessionid);\r\n                    }\r\n\r\n                    callback(isRoomOpened, connection.sessionid, error);\r\n                }\r\n            });\r\n        }\r\n\r\n        function getStreamInfoForAdmin() {\r\n            try {\r\n                return connection.streamEvents.selectAll('local').map(function(event) {\r\n                    return {\r\n                        streamid: event.streamid,\r\n                        tracks: event.stream.getTracks().length\r\n                    };\r\n                });\r\n            } catch (e) {\r\n                return [];\r\n            }\r\n        }\r\n\r\n        function beforeJoin(userPreferences, callback) {\r\n            if (connection.dontCaptureUserMedia || userPreferences.isDataOnly) {\r\n                callback();\r\n                return;\r\n            }\r\n\r\n            var localMediaConstraints = {};\r\n\r\n            if (userPreferences.localPeerSdpConstraints.OfferToReceiveAudio) {\r\n                localMediaConstraints.audio = connection.mediaConstraints.audio;\r\n            }\r\n\r\n            if (userPreferences.localPeerSdpConstraints.OfferToReceiveVideo) {\r\n                localMediaConstraints.video = connection.mediaConstraints.video;\r\n            }\r\n\r\n            var session = userPreferences.session || connection.session;\r\n\r\n            if (session.oneway && session.audio !== 'two-way' && session.video !== 'two-way' && session.screen !== 'two-way') {\r\n                callback();\r\n                return;\r\n            }\r\n\r\n            if (session.oneway && session.audio && session.audio === 'two-way') {\r\n                session = {\r\n                    audio: true\r\n                };\r\n            }\r\n\r\n            if (session.audio || session.video || session.screen) {\r\n                if (session.screen) {\r\n                    if (DetectRTC.browser.name === 'Edge') {\r\n                        navigator.getDisplayMedia({\r\n                            video: true,\r\n                            audio: isAudioPlusTab(connection)\r\n                        }).then(function(screen) {\r\n                            screen.isScreen = true;\r\n                            mPeer.onGettingLocalMedia(screen);\r\n\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                connection.invokeGetUserMedia(null, callback);\r\n                            } else {\r\n                                callback(screen);\r\n                            }\r\n                        }, function(error) {\r\n                            console.error('Unable to capture screen on Edge. HTTPs and version 17+ is required.');\r\n                        });\r\n                    } else {\r\n                        connection.invokeGetUserMedia({\r\n                            audio: isAudioPlusTab(connection),\r\n                            video: true,\r\n                            isScreen: true\r\n                        }, (session.audio || session.video) && !isAudioPlusTab(connection) ? connection.invokeGetUserMedia(null, callback) : callback);\r\n                    }\r\n                } else if (session.audio || session.video) {\r\n                    connection.invokeGetUserMedia(null, callback, session);\r\n                }\r\n            }\r\n        }\r\n\r\n        connection.getUserMedia = connection.captureUserMedia = function(callback, sessionForced) {\r\n            callback = callback || function() {};\r\n            var session = sessionForced || connection.session;\r\n\r\n            if (connection.dontCaptureUserMedia || isData(session)) {\r\n                callback();\r\n                return;\r\n            }\r\n\r\n            if (session.audio || session.video || session.screen) {\r\n                if (session.screen) {\r\n                    if (DetectRTC.browser.name === 'Edge') {\r\n                        navigator.getDisplayMedia({\r\n                            video: true,\r\n                            audio: isAudioPlusTab(connection)\r\n                        }).then(function(screen) {\r\n                            screen.isScreen = true;\r\n                            mPeer.onGettingLocalMedia(screen);\r\n\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                var nonScreenSession = {};\r\n                                for (var s in session) {\r\n                                    if (s !== 'screen') {\r\n                                        nonScreenSession[s] = session[s];\r\n                                    }\r\n                                }\r\n                                connection.invokeGetUserMedia(sessionForced, callback, nonScreenSession);\r\n                                return;\r\n                            }\r\n                            callback(screen);\r\n                        }, function(error) {\r\n                            console.error('Unable to capture screen on Edge. HTTPs and version 17+ is required.');\r\n                        });\r\n                    } else {\r\n                        connection.invokeGetUserMedia({\r\n                            audio: isAudioPlusTab(connection),\r\n                            video: true,\r\n                            isScreen: true\r\n                        }, function(stream) {\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                var nonScreenSession = {};\r\n                                for (var s in session) {\r\n                                    if (s !== 'screen') {\r\n                                        nonScreenSession[s] = session[s];\r\n                                    }\r\n                                }\r\n                                connection.invokeGetUserMedia(sessionForced, callback, nonScreenSession);\r\n                                return;\r\n                            }\r\n                            callback(stream);\r\n                        });\r\n                    }\r\n                } else if (session.audio || session.video) {\r\n                    connection.invokeGetUserMedia(sessionForced, callback, session);\r\n                }\r\n            }\r\n        };\r\n\r\n        connection.onbeforeunload = function(arg1, dontCloseSocket) {\r\n            if (!connection.closeBeforeUnload) {\r\n                return;\r\n            }\r\n\r\n            connection.peers.getAllParticipants().forEach(function(participant) {\r\n                mPeer.onNegotiationNeeded({\r\n                    userLeft: true\r\n                }, participant);\r\n\r\n                if (connection.peers[participant] && connection.peers[participant].peer) {\r\n                    connection.peers[participant].peer.close();\r\n                }\r\n\r\n                delete connection.peers[participant];\r\n            });\r\n\r\n            if (!dontCloseSocket) {\r\n                connection.closeSocket();\r\n            }\r\n\r\n            connection.isInitiator = false;\r\n        };\r\n\r\n        if (!window.ignoreBeforeUnload) {\r\n            // user can implement its own version of window.onbeforeunload\r\n            connection.closeBeforeUnload = true;\r\n            window.addEventListener('beforeunload', connection.onbeforeunload, false);\r\n        } else {\r\n            connection.closeBeforeUnload = false;\r\n        }\r\n\r\n        connection.userid = getRandomString();\r\n        connection.changeUserId = function(newUserId, callback) {\r\n            callback = callback || function() {};\r\n            connection.userid = newUserId || getRandomString();\r\n            connection.socket.emit('changed-uuid', connection.userid, callback);\r\n        };\r\n\r\n        connection.extra = {};\r\n        connection.attachStreams = [];\r\n\r\n        connection.session = {\r\n            audio: true,\r\n            video: true\r\n        };\r\n\r\n        connection.enableFileSharing = false;\r\n\r\n        // all values in kbps\r\n        connection.bandwidth = {\r\n            screen: false,\r\n            audio: false,\r\n            video: false\r\n        };\r\n\r\n        connection.codecs = {\r\n            audio: 'opus',\r\n            video: 'VP9'\r\n        };\r\n\r\n        connection.processSdp = function(sdp) {\r\n            // ignore SDP modification if unified-pan is supported\r\n            if (isUnifiedPlanSupportedDefault()) {\r\n                return sdp;\r\n            }\r\n\r\n            if (DetectRTC.browser.name === 'Safari') {\r\n                return sdp;\r\n            }\r\n\r\n            if (connection.codecs.video.toUpperCase() === 'VP8') {\r\n                sdp = CodecsHandler.preferCodec(sdp, 'vp8');\r\n            }\r\n\r\n            if (connection.codecs.video.toUpperCase() === 'VP9') {\r\n                sdp = CodecsHandler.preferCodec(sdp, 'vp9');\r\n            }\r\n\r\n            if (connection.codecs.video.toUpperCase() === 'H264') {\r\n                sdp = CodecsHandler.preferCodec(sdp, 'h264');\r\n            }\r\n\r\n            if (connection.codecs.audio === 'G722') {\r\n                sdp = CodecsHandler.removeNonG722(sdp);\r\n            }\r\n\r\n            if (DetectRTC.browser.name === 'Firefox') {\r\n                return sdp;\r\n            }\r\n\r\n            if (connection.bandwidth.video || connection.bandwidth.screen) {\r\n                sdp = CodecsHandler.setApplicationSpecificBandwidth(sdp, connection.bandwidth, !!connection.session.screen);\r\n            }\r\n\r\n            if (connection.bandwidth.video) {\r\n                sdp = CodecsHandler.setVideoBitrates(sdp, {\r\n                    min: connection.bandwidth.video * 8 * 1024,\r\n                    max: connection.bandwidth.video * 8 * 1024\r\n                });\r\n            }\r\n\r\n            if (connection.bandwidth.audio) {\r\n                sdp = CodecsHandler.setOpusAttributes(sdp, {\r\n                    maxaveragebitrate: connection.bandwidth.audio * 8 * 1024,\r\n                    maxplaybackrate: connection.bandwidth.audio * 8 * 1024,\r\n                    stereo: 1,\r\n                    maxptime: 3\r\n                });\r\n            }\r\n\r\n            return sdp;\r\n        };\r\n\r\n        if (typeof CodecsHandler !== 'undefined') {\r\n            connection.BandwidthHandler = connection.CodecsHandler = CodecsHandler;\r\n        }\r\n\r\n        connection.mediaConstraints = {\r\n            audio: {\r\n                mandatory: {},\r\n                optional: connection.bandwidth.audio ? [{\r\n                    bandwidth: connection.bandwidth.audio * 8 * 1024 || 128 * 8 * 1024\r\n                }] : []\r\n            },\r\n            video: {\r\n                mandatory: {},\r\n                optional: connection.bandwidth.video ? [{\r\n                    bandwidth: connection.bandwidth.video * 8 * 1024 || 128 * 8 * 1024\r\n                }, {\r\n                    facingMode: 'user'\r\n                }] : [{\r\n                    facingMode: 'user'\r\n                }]\r\n            }\r\n        };\r\n\r\n        if (DetectRTC.browser.name === 'Firefox') {\r\n            connection.mediaConstraints = {\r\n                audio: true,\r\n                video: true\r\n            };\r\n        }\r\n\r\n        if (!forceOptions.useDefaultDevices && !DetectRTC.isMobileDevice) {\r\n            DetectRTC.load(function() {\r\n                var lastAudioDevice, lastVideoDevice;\r\n                // it will force RTCMultiConnection to capture last-devices\r\n                // i.e. if external microphone is attached to system, we should prefer it over built-in devices.\r\n                DetectRTC.MediaDevices.forEach(function(device) {\r\n                    if (device.kind === 'audioinput' && connection.mediaConstraints.audio !== false) {\r\n                        lastAudioDevice = device;\r\n                    }\r\n\r\n                    if (device.kind === 'videoinput' && connection.mediaConstraints.video !== false) {\r\n                        lastVideoDevice = device;\r\n                    }\r\n                });\r\n\r\n                if (lastAudioDevice) {\r\n                    if (DetectRTC.browser.name === 'Firefox') {\r\n                        if (connection.mediaConstraints.audio !== true) {\r\n                            connection.mediaConstraints.audio.deviceId = lastAudioDevice.id;\r\n                        } else {\r\n                            connection.mediaConstraints.audio = {\r\n                                deviceId: lastAudioDevice.id\r\n                            }\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    if (connection.mediaConstraints.audio == true) {\r\n                        connection.mediaConstraints.audio = {\r\n                            mandatory: {},\r\n                            optional: []\r\n                        }\r\n                    }\r\n\r\n                    if (!connection.mediaConstraints.audio.optional) {\r\n                        connection.mediaConstraints.audio.optional = [];\r\n                    }\r\n\r\n                    var optional = [{\r\n                        sourceId: lastAudioDevice.id\r\n                    }];\r\n\r\n                    connection.mediaConstraints.audio.optional = optional.concat(connection.mediaConstraints.audio.optional);\r\n                }\r\n\r\n                if (lastVideoDevice) {\r\n                    if (DetectRTC.browser.name === 'Firefox') {\r\n                        if (connection.mediaConstraints.video !== true) {\r\n                            connection.mediaConstraints.video.deviceId = lastVideoDevice.id;\r\n                        } else {\r\n                            connection.mediaConstraints.video = {\r\n                                deviceId: lastVideoDevice.id\r\n                            }\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    if (connection.mediaConstraints.video == true) {\r\n                        connection.mediaConstraints.video = {\r\n                            mandatory: {},\r\n                            optional: []\r\n                        }\r\n                    }\r\n\r\n                    if (!connection.mediaConstraints.video.optional) {\r\n                        connection.mediaConstraints.video.optional = [];\r\n                    }\r\n\r\n                    var optional = [{\r\n                        sourceId: lastVideoDevice.id\r\n                    }];\r\n\r\n                    connection.mediaConstraints.video.optional = optional.concat(connection.mediaConstraints.video.optional);\r\n                }\r\n            });\r\n        }\r\n\r\n        connection.sdpConstraints = {\r\n            mandatory: {\r\n                OfferToReceiveAudio: true,\r\n                OfferToReceiveVideo: true\r\n            },\r\n            optional: [{\r\n                VoiceActivityDetection: false\r\n            }]\r\n        };\r\n\r\n        connection.sdpSemantics = null; // \"unified-plan\" or \"plan-b\", ref: webrtc.org/web-apis/chrome/unified-plan/\r\n        connection.iceCandidatePoolSize = null; // 0\r\n        connection.bundlePolicy = null; // max-bundle\r\n        connection.rtcpMuxPolicy = null; // \"require\" or \"negotiate\"\r\n        connection.iceTransportPolicy = null; // \"relay\" or \"all\"\r\n        connection.optionalArgument = {\r\n            optional: [{\r\n                DtlsSrtpKeyAgreement: true\r\n            }, {\r\n                googImprovedWifiBwe: true\r\n            }, {\r\n                googScreencastMinBitrate: 300\r\n            }, {\r\n                googIPv6: true\r\n            }, {\r\n                googDscp: true\r\n            }, {\r\n                googCpuUnderuseThreshold: 55\r\n            }, {\r\n                googCpuOveruseThreshold: 85\r\n            }, {\r\n                googSuspendBelowMinBitrate: true\r\n            }, {\r\n                googCpuOveruseDetection: true\r\n            }],\r\n            mandatory: {}\r\n        };\r\n\r\n        connection.iceServers = IceServersHandler.getIceServers(connection);\r\n\r\n        connection.candidates = {\r\n            host: true,\r\n            stun: true,\r\n            turn: true\r\n        };\r\n\r\n        connection.iceProtocols = {\r\n            tcp: true,\r\n            udp: true\r\n        };\r\n\r\n        // EVENTs\r\n        connection.onopen = function(event) {\r\n            if (!!connection.enableLogs) {\r\n                console.info('Data connection has been opened between you & ', event.userid);\r\n            }\r\n        };\r\n\r\n        connection.onclose = function(event) {\r\n            if (!!connection.enableLogs) {\r\n                console.warn('Data connection has been closed between you & ', event.userid);\r\n            }\r\n        };\r\n\r\n        connection.onerror = function(error) {\r\n            if (!!connection.enableLogs) {\r\n                console.error(error.userid, 'data-error', error);\r\n            }\r\n        };\r\n\r\n        connection.onmessage = function(event) {\r\n            if (!!connection.enableLogs) {\r\n                console.debug('data-message', event.userid, event.data);\r\n            }\r\n        };\r\n\r\n        connection.send = function(data, remoteUserId) {\r\n            connection.peers.send(data, remoteUserId);\r\n        };\r\n\r\n        connection.close = connection.disconnect = connection.leave = function() {\r\n            connection.onbeforeunload(false, true);\r\n        };\r\n\r\n        connection.closeEntireSession = function(callback) {\r\n            callback = callback || function() {};\r\n            connection.socket.emit('close-entire-session', function looper() {\r\n                if (connection.getAllParticipants().length) {\r\n                    setTimeout(looper, 100);\r\n                    return;\r\n                }\r\n\r\n                connection.onEntireSessionClosed({\r\n                    sessionid: connection.sessionid,\r\n                    userid: connection.userid,\r\n                    extra: connection.extra\r\n                });\r\n\r\n                connection.changeUserId(null, function() {\r\n                    connection.close();\r\n                    callback();\r\n                });\r\n            });\r\n        };\r\n\r\n        connection.onEntireSessionClosed = function(event) {\r\n            if (!connection.enableLogs) return;\r\n            console.info('Entire session is closed: ', event.sessionid, event.extra);\r\n        };\r\n\r\n        connection.onstream = function(e) {\r\n            var parentNode = connection.videosContainer;\r\n            parentNode.insertBefore(e.mediaElement, parentNode.firstChild);\r\n            var played = e.mediaElement.play();\r\n\r\n            if (typeof played !== 'undefined') {\r\n                played.catch(function() {\r\n                    /*** iOS 11 doesn't allow automatic play and rejects ***/\r\n                }).then(function() {\r\n                    setTimeout(function() {\r\n                        e.mediaElement.play();\r\n                    }, 2000);\r\n                });\r\n                return;\r\n            }\r\n\r\n            setTimeout(function() {\r\n                e.mediaElement.play();\r\n            }, 2000);\r\n        };\r\n\r\n        connection.onstreamended = function(e) {\r\n            if (!e.mediaElement) {\r\n                e.mediaElement = document.getElementById(e.streamid);\r\n            }\r\n\r\n            if (!e.mediaElement || !e.mediaElement.parentNode) {\r\n                return;\r\n            }\r\n\r\n            e.mediaElement.parentNode.removeChild(e.mediaElement);\r\n        };\r\n\r\n        connection.direction = 'many-to-many';\r\n\r\n        connection.removeStream = function(streamid, remoteUserId) {\r\n            var stream;\r\n            connection.attachStreams.forEach(function(localStream) {\r\n                if (localStream.id === streamid) {\r\n                    stream = localStream;\r\n                }\r\n            });\r\n\r\n            if (!stream) {\r\n                console.warn('No such stream exist.', streamid);\r\n                return;\r\n            }\r\n\r\n            connection.peers.getAllParticipants().forEach(function(participant) {\r\n                if (remoteUserId && participant !== remoteUserId) {\r\n                    return;\r\n                }\r\n\r\n                var user = connection.peers[participant];\r\n                try {\r\n                    user.peer.removeStream(stream);\r\n                } catch (e) {}\r\n            });\r\n\r\n            connection.renegotiate();\r\n        };\r\n\r\n        connection.addStream = function(session, remoteUserId) {\r\n            if (!!session.getTracks) {\r\n                if (connection.attachStreams.indexOf(session) === -1) {\r\n                    if (!session.streamid) {\r\n                        session.streamid = session.id;\r\n                    }\r\n\r\n                    connection.attachStreams.push(session);\r\n                }\r\n                connection.renegotiate(remoteUserId);\r\n                return;\r\n            }\r\n\r\n            if (isData(session)) {\r\n                connection.renegotiate(remoteUserId);\r\n                return;\r\n            }\r\n\r\n            if (session.audio || session.video || session.screen) {\r\n                if (session.screen) {\r\n                    if (DetectRTC.browser.name === 'Edge') {\r\n                        navigator.getDisplayMedia({\r\n                            video: true,\r\n                            audio: isAudioPlusTab(connection)\r\n                        }).then(function(screen) {\r\n                            screen.isScreen = true;\r\n                            mPeer.onGettingLocalMedia(screen);\r\n\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                connection.invokeGetUserMedia(null, function(stream) {\r\n                                    gumCallback(stream);\r\n                                });\r\n                            } else {\r\n                                gumCallback(screen);\r\n                            }\r\n                        }, function(error) {\r\n                            console.error('Unable to capture screen on Edge. HTTPs and version 17+ is required.');\r\n                        });\r\n                    } else {\r\n                        connection.invokeGetUserMedia({\r\n                            audio: isAudioPlusTab(connection),\r\n                            video: true,\r\n                            isScreen: true\r\n                        }, function(stream) {\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                connection.invokeGetUserMedia(null, function(stream) {\r\n                                    gumCallback(stream);\r\n                                });\r\n                            } else {\r\n                                gumCallback(stream);\r\n                            }\r\n                        });\r\n                    }\r\n                } else if (session.audio || session.video) {\r\n                    connection.invokeGetUserMedia(null, gumCallback);\r\n                }\r\n            }\r\n\r\n            function gumCallback(stream) {\r\n                if (session.streamCallback) {\r\n                    session.streamCallback(stream);\r\n                }\r\n\r\n                connection.renegotiate(remoteUserId);\r\n            }\r\n        };\r\n\r\n        connection.invokeGetUserMedia = function(localMediaConstraints, callback, session) {\r\n            if (!session) {\r\n                session = connection.session;\r\n            }\r\n\r\n            if (!localMediaConstraints) {\r\n                localMediaConstraints = connection.mediaConstraints;\r\n            }\r\n\r\n            getUserMediaHandler({\r\n                onGettingLocalMedia: function(stream) {\r\n                    var videoConstraints = localMediaConstraints.video;\r\n                    if (videoConstraints) {\r\n                        if (videoConstraints.mediaSource || videoConstraints.mozMediaSource) {\r\n                            stream.isScreen = true;\r\n                        } else if (videoConstraints.mandatory && videoConstraints.mandatory.chromeMediaSource) {\r\n                            stream.isScreen = true;\r\n                        }\r\n                    }\r\n\r\n                    if (!stream.isScreen) {\r\n                        stream.isVideo = !!getTracks(stream, 'video').length;\r\n                        stream.isAudio = !stream.isVideo && getTracks(stream, 'audio').length;\r\n                    }\r\n\r\n                    mPeer.onGettingLocalMedia(stream, function() {\r\n                        if (typeof callback === 'function') {\r\n                            callback(stream);\r\n                        }\r\n                    });\r\n                },\r\n                onLocalMediaError: function(error, constraints) {\r\n                    mPeer.onLocalMediaError(error, constraints);\r\n                },\r\n                localMediaConstraints: localMediaConstraints || {\r\n                    audio: session.audio ? localMediaConstraints.audio : false,\r\n                    video: session.video ? localMediaConstraints.video : false\r\n                }\r\n            });\r\n        };\r\n\r\n        function applyConstraints(stream, mediaConstraints) {\r\n            if (!stream) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('No stream to applyConstraints.');\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (mediaConstraints.audio) {\r\n                getTracks(stream, 'audio').forEach(function(track) {\r\n                    track.applyConstraints(mediaConstraints.audio);\r\n                });\r\n            }\r\n\r\n            if (mediaConstraints.video) {\r\n                getTracks(stream, 'video').forEach(function(track) {\r\n                    track.applyConstraints(mediaConstraints.video);\r\n                });\r\n            }\r\n        }\r\n\r\n        connection.applyConstraints = function(mediaConstraints, streamid) {\r\n            if (!MediaStreamTrack || !MediaStreamTrack.prototype.applyConstraints) {\r\n                alert('track.applyConstraints is NOT supported in your browser.');\r\n                return;\r\n            }\r\n\r\n            if (streamid) {\r\n                var stream;\r\n                if (connection.streamEvents[streamid]) {\r\n                    stream = connection.streamEvents[streamid].stream;\r\n                }\r\n                applyConstraints(stream, mediaConstraints);\r\n                return;\r\n            }\r\n\r\n            connection.attachStreams.forEach(function(stream) {\r\n                applyConstraints(stream, mediaConstraints);\r\n            });\r\n        };\r\n\r\n        function replaceTrack(track, remoteUserId, isVideoTrack) {\r\n            if (remoteUserId) {\r\n                mPeer.replaceTrack(track, remoteUserId, isVideoTrack);\r\n                return;\r\n            }\r\n\r\n            connection.peers.getAllParticipants().forEach(function(participant) {\r\n                mPeer.replaceTrack(track, participant, isVideoTrack);\r\n            });\r\n        }\r\n\r\n        connection.replaceTrack = function(session, remoteUserId, isVideoTrack) {\r\n            session = session || {};\r\n\r\n            if (!RTCPeerConnection.prototype.getSenders) {\r\n                connection.addStream(session);\r\n                return;\r\n            }\r\n\r\n            if (session instanceof MediaStreamTrack) {\r\n                replaceTrack(session, remoteUserId, isVideoTrack);\r\n                return;\r\n            }\r\n\r\n            if (session instanceof MediaStream) {\r\n                if (getTracks(session, 'video').length) {\r\n                    replaceTrack(getTracks(session, 'video')[0], remoteUserId, true);\r\n                }\r\n\r\n                if (getTracks(session, 'audio').length) {\r\n                    replaceTrack(getTracks(session, 'audio')[0], remoteUserId, false);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (isData(session)) {\r\n                throw 'connection.replaceTrack requires audio and/or video and/or screen.';\r\n                return;\r\n            }\r\n\r\n            if (session.audio || session.video || session.screen) {\r\n                if (session.screen) {\r\n                    if (DetectRTC.browser.name === 'Edge') {\r\n                        navigator.getDisplayMedia({\r\n                            video: true,\r\n                            audio: isAudioPlusTab(connection)\r\n                        }).then(function(screen) {\r\n                            screen.isScreen = true;\r\n                            mPeer.onGettingLocalMedia(screen);\r\n\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                connection.invokeGetUserMedia(null, gumCallback);\r\n                            } else {\r\n                                gumCallback(screen);\r\n                            }\r\n                        }, function(error) {\r\n                            console.error('Unable to capture screen on Edge. HTTPs and version 17+ is required.');\r\n                        });\r\n                    } else {\r\n                        connection.invokeGetUserMedia({\r\n                            audio: isAudioPlusTab(connection),\r\n                            video: true,\r\n                            isScreen: true\r\n                        }, (session.audio || session.video) && !isAudioPlusTab(connection) ? connection.invokeGetUserMedia(null, gumCallback) : gumCallback);\r\n                    }\r\n                } else if (session.audio || session.video) {\r\n                    connection.invokeGetUserMedia(null, gumCallback);\r\n                }\r\n            }\r\n\r\n            function gumCallback(stream) {\r\n                connection.replaceTrack(stream, remoteUserId, isVideoTrack || session.video || session.screen);\r\n            }\r\n        };\r\n\r\n        connection.resetTrack = function(remoteUsersIds, isVideoTrack) {\r\n            if (!remoteUsersIds) {\r\n                remoteUsersIds = connection.getAllParticipants();\r\n            }\r\n\r\n            if (typeof remoteUsersIds == 'string') {\r\n                remoteUsersIds = [remoteUsersIds];\r\n            }\r\n\r\n            remoteUsersIds.forEach(function(participant) {\r\n                var peer = connection.peers[participant].peer;\r\n\r\n                if ((typeof isVideoTrack === 'undefined' || isVideoTrack === true) && peer.lastVideoTrack) {\r\n                    connection.replaceTrack(peer.lastVideoTrack, participant, true);\r\n                }\r\n\r\n                if ((typeof isVideoTrack === 'undefined' || isVideoTrack === false) && peer.lastAudioTrack) {\r\n                    connection.replaceTrack(peer.lastAudioTrack, participant, false);\r\n                }\r\n            });\r\n        };\r\n\r\n        connection.renegotiate = function(remoteUserId) {\r\n            if (remoteUserId) {\r\n                mPeer.renegotiatePeer(remoteUserId);\r\n                return;\r\n            }\r\n\r\n            connection.peers.getAllParticipants().forEach(function(participant) {\r\n                mPeer.renegotiatePeer(participant);\r\n            });\r\n        };\r\n\r\n        connection.setStreamEndHandler = function(stream, isRemote) {\r\n            if (!stream || !stream.addEventListener) return;\r\n\r\n            isRemote = !!isRemote;\r\n\r\n            if (stream.alreadySetEndHandler) {\r\n                return;\r\n            }\r\n            stream.alreadySetEndHandler = true;\r\n\r\n            var streamEndedEvent = 'ended';\r\n\r\n            if ('oninactive' in stream) {\r\n                streamEndedEvent = 'inactive';\r\n            }\r\n\r\n            stream.addEventListener(streamEndedEvent, function() {\r\n                if (stream.idInstance) {\r\n                    currentUserMediaRequest.remove(stream.idInstance);\r\n                }\r\n\r\n                if (!isRemote) {\r\n                    // reset attachStreams\r\n                    var streams = [];\r\n                    connection.attachStreams.forEach(function(s) {\r\n                        if (s.id != stream.id) {\r\n                            streams.push(s);\r\n                        }\r\n                    });\r\n                    connection.attachStreams = streams;\r\n                }\r\n\r\n                // connection.renegotiate();\r\n\r\n                var streamEvent = connection.streamEvents[stream.streamid];\r\n                if (!streamEvent) {\r\n                    streamEvent = {\r\n                        stream: stream,\r\n                        streamid: stream.streamid,\r\n                        type: isRemote ? 'remote' : 'local',\r\n                        userid: connection.userid,\r\n                        extra: connection.extra,\r\n                        mediaElement: connection.streamEvents[stream.streamid] ? connection.streamEvents[stream.streamid].mediaElement : null\r\n                    };\r\n                }\r\n\r\n                if (isRemote && connection.peers[streamEvent.userid]) {\r\n                    // reset remote \"streams\"\r\n                    var peer = connection.peers[streamEvent.userid].peer;\r\n                    var streams = [];\r\n                    peer.getRemoteStreams().forEach(function(s) {\r\n                        if (s.id != stream.id) {\r\n                            streams.push(s);\r\n                        }\r\n                    });\r\n                    connection.peers[streamEvent.userid].streams = streams;\r\n                }\r\n\r\n                if (streamEvent.userid === connection.userid && streamEvent.type === 'remote') {\r\n                    return;\r\n                }\r\n\r\n                if (connection.peersBackup[streamEvent.userid]) {\r\n                    streamEvent.extra = connection.peersBackup[streamEvent.userid].extra;\r\n                }\r\n\r\n                connection.onstreamended(streamEvent);\r\n\r\n                delete connection.streamEvents[stream.streamid];\r\n            }, false);\r\n        };\r\n\r\n        connection.onMediaError = function(error, constraints) {\r\n            if (!!connection.enableLogs) {\r\n                console.error(error, constraints);\r\n            }\r\n        };\r\n\r\n        connection.autoCloseEntireSession = false;\r\n\r\n        connection.filesContainer = connection.videosContainer = document.body || document.documentElement;\r\n        connection.isInitiator = false;\r\n\r\n        connection.shareFile = mPeer.shareFile;\r\n        if (typeof FileProgressBarHandler !== 'undefined') {\r\n            FileProgressBarHandler.handle(connection);\r\n        }\r\n\r\n        if (typeof TranslationHandler !== 'undefined') {\r\n            TranslationHandler.handle(connection);\r\n        }\r\n\r\n        connection.token = getRandomString;\r\n\r\n        connection.onNewParticipant = function(participantId, userPreferences) {\r\n            connection.acceptParticipationRequest(participantId, userPreferences);\r\n        };\r\n\r\n        connection.acceptParticipationRequest = function(participantId, userPreferences) {\r\n            if (userPreferences.successCallback) {\r\n                userPreferences.successCallback();\r\n                delete userPreferences.successCallback;\r\n            }\r\n\r\n            mPeer.createNewPeer(participantId, userPreferences);\r\n        };\r\n\r\n        if (typeof StreamsHandler !== 'undefined') {\r\n            connection.StreamsHandler = StreamsHandler;\r\n        }\r\n\r\n        connection.onleave = function(userid) {};\r\n\r\n        connection.invokeSelectFileDialog = function(callback) {\r\n            var selector = new FileSelector();\r\n            selector.accept = '*.*';\r\n            selector.selectSingleFile(callback);\r\n        };\r\n\r\n        connection.onmute = function(e) {\r\n            if (!e || !e.mediaElement) {\r\n                return;\r\n            }\r\n\r\n            if (e.muteType === 'both' || e.muteType === 'video') {\r\n                e.mediaElement.src = null;\r\n                var paused = e.mediaElement.pause();\r\n                if (typeof paused !== 'undefined') {\r\n                    paused.then(function() {\r\n                        e.mediaElement.poster = e.snapshot || 'https://cdn.webrtc-experiment.com/images/muted.png';\r\n                    });\r\n                } else {\r\n                    e.mediaElement.poster = e.snapshot || 'https://cdn.webrtc-experiment.com/images/muted.png';\r\n                }\r\n            } else if (e.muteType === 'audio') {\r\n                e.mediaElement.muted = true;\r\n            }\r\n        };\r\n\r\n        connection.onunmute = function(e) {\r\n            if (!e || !e.mediaElement || !e.stream) {\r\n                return;\r\n            }\r\n\r\n            if (e.unmuteType === 'both' || e.unmuteType === 'video') {\r\n                e.mediaElement.poster = null;\r\n                e.mediaElement.srcObject = e.stream;\r\n                e.mediaElement.play();\r\n            } else if (e.unmuteType === 'audio') {\r\n                e.mediaElement.muted = false;\r\n            }\r\n        };\r\n\r\n        connection.onExtraDataUpdated = function(event) {\r\n            event.status = 'online';\r\n            connection.onUserStatusChanged(event, true);\r\n        };\r\n\r\n        connection.getAllParticipants = function(sender) {\r\n            return connection.peers.getAllParticipants(sender);\r\n        };\r\n\r\n        if (typeof StreamsHandler !== 'undefined') {\r\n            StreamsHandler.onSyncNeeded = function(streamid, action, type) {\r\n                connection.peers.getAllParticipants().forEach(function(participant) {\r\n                    mPeer.onNegotiationNeeded({\r\n                        streamid: streamid,\r\n                        action: action,\r\n                        streamSyncNeeded: true,\r\n                        type: type || 'both'\r\n                    }, participant);\r\n                });\r\n            };\r\n        }\r\n\r\n        connection.connectSocket = function(callback) {\r\n            connectSocket(callback);\r\n        };\r\n\r\n        connection.closeSocket = function() {\r\n            try {\r\n                io.sockets = {};\r\n            } catch (e) {};\r\n\r\n            if (!connection.socket) return;\r\n\r\n            if (typeof connection.socket.disconnect === 'function') {\r\n                connection.socket.disconnect();\r\n            }\r\n\r\n            if (typeof connection.socket.resetProps === 'function') {\r\n                connection.socket.resetProps();\r\n            }\r\n\r\n            connection.socket = null;\r\n        };\r\n\r\n        connection.getSocket = function(callback) {\r\n            if (!callback && connection.enableLogs) {\r\n                console.warn('getSocket.callback paramter is required.');\r\n            }\r\n\r\n            callback = callback || function() {};\r\n\r\n            if (!connection.socket) {\r\n                connectSocket(function() {\r\n                    callback(connection.socket);\r\n                });\r\n            } else {\r\n                callback(connection.socket);\r\n            }\r\n\r\n            return connection.socket; // callback is preferred over return-statement\r\n        };\r\n\r\n        connection.getRemoteStreams = mPeer.getRemoteStreams;\r\n\r\n        var skipStreams = ['selectFirst', 'selectAll', 'forEach'];\r\n\r\n        connection.streamEvents = {\r\n            selectFirst: function(options) {\r\n                return connection.streamEvents.selectAll(options)[0];\r\n            },\r\n            selectAll: function(options) {\r\n                if (!options) {\r\n                    // default will always be all streams\r\n                    options = {\r\n                        local: true,\r\n                        remote: true,\r\n                        isScreen: true,\r\n                        isAudio: true,\r\n                        isVideo: true\r\n                    };\r\n                }\r\n\r\n                if (options == 'local') {\r\n                    options = {\r\n                        local: true\r\n                    };\r\n                }\r\n\r\n                if (options == 'remote') {\r\n                    options = {\r\n                        remote: true\r\n                    };\r\n                }\r\n\r\n                if (options == 'screen') {\r\n                    options = {\r\n                        isScreen: true\r\n                    };\r\n                }\r\n\r\n                if (options == 'audio') {\r\n                    options = {\r\n                        isAudio: true\r\n                    };\r\n                }\r\n\r\n                if (options == 'video') {\r\n                    options = {\r\n                        isVideo: true\r\n                    };\r\n                }\r\n\r\n                var streams = [];\r\n                Object.keys(connection.streamEvents).forEach(function(key) {\r\n                    var event = connection.streamEvents[key];\r\n\r\n                    if (skipStreams.indexOf(key) !== -1) return;\r\n                    var ignore = true;\r\n\r\n                    if (options.local && event.type === 'local') {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (options.remote && event.type === 'remote') {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (options.isScreen && event.stream.isScreen) {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (options.isVideo && event.stream.isVideo) {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (options.isAudio && event.stream.isAudio) {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (options.userid && event.userid === options.userid) {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (ignore === false) {\r\n                        streams.push(event);\r\n                    }\r\n                });\r\n\r\n                return streams;\r\n            }\r\n        };\r\n\r\n        connection.socketURL = '/'; // generated via config.json\r\n        connection.socketMessageEvent = 'RTCMultiConnection-Message'; // generated via config.json\r\n        connection.socketCustomEvent = 'RTCMultiConnection-Custom-Message'; // generated via config.json\r\n        connection.DetectRTC = DetectRTC;\r\n\r\n        connection.setCustomSocketEvent = function(customEvent) {\r\n            if (customEvent) {\r\n                connection.socketCustomEvent = customEvent;\r\n            }\r\n\r\n            if (!connection.socket) {\r\n                return;\r\n            }\r\n\r\n            connection.socket.emit('set-custom-socket-event-listener', connection.socketCustomEvent);\r\n        };\r\n\r\n        connection.getNumberOfBroadcastViewers = function(broadcastId, callback) {\r\n            if (!connection.socket || !broadcastId || !callback) return;\r\n\r\n            connection.socket.emit('get-number-of-users-in-specific-broadcast', broadcastId, callback);\r\n        };\r\n\r\n        connection.onNumberOfBroadcastViewersUpdated = function(event) {\r\n            if (!connection.enableLogs || !connection.isInitiator) return;\r\n            console.info('Number of broadcast (', event.broadcastId, ') viewers', event.numberOfBroadcastViewers);\r\n        };\r\n\r\n        connection.onUserStatusChanged = function(event, dontWriteLogs) {\r\n            if (!!connection.enableLogs && !dontWriteLogs) {\r\n                console.info(event.userid, event.status);\r\n            }\r\n        };\r\n\r\n        connection.getUserMediaHandler = getUserMediaHandler;\r\n        connection.multiPeersHandler = mPeer;\r\n        connection.enableLogs = true;\r\n        connection.setCustomSocketHandler = function(customSocketHandler) {\r\n            if (typeof SocketConnection !== 'undefined') {\r\n                SocketConnection = customSocketHandler;\r\n            }\r\n        };\r\n\r\n        // default value should be 15k because [old]Firefox's receiving limit is 16k!\r\n        // however 64k works chrome-to-chrome\r\n        connection.chunkSize = 40 * 1000;\r\n\r\n        connection.maxParticipantsAllowed = 1000;\r\n\r\n        // eject or leave single user\r\n        connection.disconnectWith = mPeer.disconnectWith;\r\n\r\n        // check if room exist on server\r\n        // we will pass roomid to the server and wait for callback (i.e. server's response)\r\n        connection.checkPresence = function(roomid, callback) {\r\n            roomid = roomid || connection.sessionid;\r\n\r\n            if (SocketConnection.name === 'SSEConnection') {\r\n                SSEConnection.checkPresence(roomid, function(isRoomExist, _roomid, extra) {\r\n                    if (!connection.socket) {\r\n                        if (!isRoomExist) {\r\n                            connection.userid = _roomid;\r\n                        }\r\n\r\n                        connection.connectSocket(function() {\r\n                            callback(isRoomExist, _roomid, extra);\r\n                        });\r\n                        return;\r\n                    }\r\n                    callback(isRoomExist, _roomid);\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (!connection.socket) {\r\n                connection.connectSocket(function() {\r\n                    connection.checkPresence(roomid, callback);\r\n                });\r\n                return;\r\n            }\r\n\r\n            connection.socket.emit('check-presence', roomid + '', function(isRoomExist, _roomid, extra) {\r\n                if (connection.enableLogs) {\r\n                    console.log('checkPresence.isRoomExist: ', isRoomExist, ' roomid: ', _roomid);\r\n                }\r\n                callback(isRoomExist, _roomid, extra);\r\n            });\r\n        };\r\n\r\n        connection.onReadyForOffer = function(remoteUserId, userPreferences) {\r\n            connection.multiPeersHandler.createNewPeer(remoteUserId, userPreferences);\r\n        };\r\n\r\n        connection.setUserPreferences = function(userPreferences) {\r\n            if (connection.dontAttachStream) {\r\n                userPreferences.dontAttachLocalStream = true;\r\n            }\r\n\r\n            if (connection.dontGetRemoteStream) {\r\n                userPreferences.dontGetRemoteStream = true;\r\n            }\r\n\r\n            return userPreferences;\r\n        };\r\n\r\n        connection.updateExtraData = function() {\r\n            connection.socket.emit('extra-data-updated', connection.extra);\r\n        };\r\n\r\n        connection.enableScalableBroadcast = false;\r\n        connection.maxRelayLimitPerUser = 3; // each broadcast should serve only 3 users\r\n\r\n        connection.dontCaptureUserMedia = false;\r\n        connection.dontAttachStream = false;\r\n        connection.dontGetRemoteStream = false;\r\n\r\n        connection.onReConnecting = function(event) {\r\n            if (connection.enableLogs) {\r\n                console.info('ReConnecting with', event.userid, '...');\r\n            }\r\n        };\r\n\r\n        connection.beforeAddingStream = function(stream) {\r\n            return stream;\r\n        };\r\n\r\n        connection.beforeRemovingStream = function(stream) {\r\n            return stream;\r\n        };\r\n\r\n        if (typeof isChromeExtensionAvailable !== 'undefined') {\r\n            connection.checkIfChromeExtensionAvailable = isChromeExtensionAvailable;\r\n        }\r\n\r\n        if (typeof isFirefoxExtensionAvailable !== 'undefined') {\r\n            connection.checkIfChromeExtensionAvailable = isFirefoxExtensionAvailable;\r\n        }\r\n\r\n        if (typeof getChromeExtensionStatus !== 'undefined') {\r\n            connection.getChromeExtensionStatus = getChromeExtensionStatus;\r\n        }\r\n\r\n        connection.modifyScreenConstraints = function(screen_constraints) {\r\n            return screen_constraints;\r\n        };\r\n\r\n        connection.onPeerStateChanged = function(state) {\r\n            if (connection.enableLogs) {\r\n                if (state.iceConnectionState.search(/closed|failed/gi) !== -1) {\r\n                    console.error('Peer connection is closed between you & ', state.userid, state.extra, 'state:', state.iceConnectionState);\r\n                }\r\n            }\r\n        };\r\n\r\n        connection.isOnline = true;\r\n\r\n        listenEventHandler('online', function() {\r\n            connection.isOnline = true;\r\n        });\r\n\r\n        listenEventHandler('offline', function() {\r\n            connection.isOnline = false;\r\n        });\r\n\r\n        connection.isLowBandwidth = false;\r\n        if (navigator && navigator.connection && navigator.connection.type) {\r\n            connection.isLowBandwidth = navigator.connection.type.toString().toLowerCase().search(/wifi|cell/g) !== -1;\r\n            if (connection.isLowBandwidth) {\r\n                connection.bandwidth = {\r\n                    audio: false,\r\n                    video: false,\r\n                    screen: false\r\n                };\r\n\r\n                if (connection.mediaConstraints.audio && connection.mediaConstraints.audio.optional && connection.mediaConstraints.audio.optional.length) {\r\n                    var newArray = [];\r\n                    connection.mediaConstraints.audio.optional.forEach(function(opt) {\r\n                        if (typeof opt.bandwidth === 'undefined') {\r\n                            newArray.push(opt);\r\n                        }\r\n                    });\r\n                    connection.mediaConstraints.audio.optional = newArray;\r\n                }\r\n\r\n                if (connection.mediaConstraints.video && connection.mediaConstraints.video.optional && connection.mediaConstraints.video.optional.length) {\r\n                    var newArray = [];\r\n                    connection.mediaConstraints.video.optional.forEach(function(opt) {\r\n                        if (typeof opt.bandwidth === 'undefined') {\r\n                            newArray.push(opt);\r\n                        }\r\n                    });\r\n                    connection.mediaConstraints.video.optional = newArray;\r\n                }\r\n            }\r\n        }\r\n\r\n        connection.getExtraData = function(remoteUserId, callback) {\r\n            if (!remoteUserId) throw 'remoteUserId is required.';\r\n\r\n            if (typeof callback === 'function') {\r\n                connection.socket.emit('get-remote-user-extra-data', remoteUserId, function(extra, remoteUserId, error) {\r\n                    callback(extra, remoteUserId, error);\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (!connection.peers[remoteUserId]) {\r\n                if (connection.peersBackup[remoteUserId]) {\r\n                    return connection.peersBackup[remoteUserId].extra;\r\n                }\r\n                return {};\r\n            }\r\n\r\n            return connection.peers[remoteUserId].extra;\r\n        };\r\n\r\n        if (!!forceOptions.autoOpenOrJoin) {\r\n            connection.openOrJoin(connection.sessionid);\r\n        }\r\n\r\n        connection.onUserIdAlreadyTaken = function(useridAlreadyTaken, yourNewUserId) {\r\n            // via #683\r\n            connection.close();\r\n            connection.closeSocket();\r\n\r\n            connection.isInitiator = false;\r\n            connection.userid = connection.token();\r\n\r\n            connection.join(connection.sessionid);\r\n\r\n            if (connection.enableLogs) {\r\n                console.warn('Userid already taken.', useridAlreadyTaken, 'Your new userid:', connection.userid);\r\n            }\r\n        };\r\n\r\n        connection.trickleIce = true;\r\n        connection.version = '3.6.9';\r\n\r\n        connection.onSettingLocalDescription = function(event) {\r\n            if (connection.enableLogs) {\r\n                console.info('Set local description for remote user', event.userid);\r\n            }\r\n        };\r\n\r\n        connection.resetScreen = function() {\r\n            sourceId = null;\r\n            if (DetectRTC && DetectRTC.screen) {\r\n                delete DetectRTC.screen.sourceId;\r\n            }\r\n\r\n            currentUserMediaRequest = {\r\n                streams: [],\r\n                mutex: false,\r\n                queueRequests: []\r\n            };\r\n        };\r\n\r\n        // if disabled, \"event.mediaElement\" for \"onstream\" will be NULL\r\n        connection.autoCreateMediaElement = true;\r\n\r\n        // set password\r\n        connection.password = null;\r\n\r\n        // set password\r\n        connection.setPassword = function(password, callback) {\r\n            callback = callback || function() {};\r\n            if (connection.socket) {\r\n                connection.socket.emit('set-password', password, callback);\r\n            } else {\r\n                connection.password = password;\r\n                callback(true, connection.sessionid, null);\r\n            }\r\n        };\r\n\r\n        connection.onSocketDisconnect = function(event) {\r\n            if (connection.enableLogs) {\r\n                console.warn('socket.io connection is closed');\r\n            }\r\n        };\r\n\r\n        connection.onSocketError = function(event) {\r\n            if (connection.enableLogs) {\r\n                console.warn('socket.io connection is failed');\r\n            }\r\n        };\r\n\r\n        // error messages\r\n        connection.errors = {\r\n            ROOM_NOT_AVAILABLE: 'Room not available',\r\n            INVALID_PASSWORD: 'Invalid password',\r\n            USERID_NOT_AVAILABLE: 'User ID does not exist',\r\n            ROOM_PERMISSION_DENIED: 'Room permission denied',\r\n            ROOM_FULL: 'Room full',\r\n            DID_NOT_JOIN_ANY_ROOM: 'Did not join any room yet',\r\n            INVALID_SOCKET: 'Invalid socket',\r\n            PUBLIC_IDENTIFIER_MISSING: 'publicRoomIdentifier is required',\r\n            INVALID_ADMIN_CREDENTIAL: 'Invalid username or password attempted'\r\n        };\r\n    })(this);\r\n\r\n};\r\n\r\nif (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n    module.exports = exports = RTCMultiConnection;\r\n}\r\n\r\nif (typeof define === 'function' && define.amd) {\r\n    define('RTCMultiConnection', [], function() {\r\n        return RTCMultiConnection;\r\n    });\r\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"main\"},[_c('video',{attrs:{\"id\":\"vidIntro\",\"src\":require(\"@/assets/animations/presentation_room.mp4\"),\"preload\":\"true\",\"autoplay\":\"\",\"loop\":\"\"}}),_c('transition',{attrs:{\"name\":\"slide\"}},[(_vm.ShowMenu)?_c('div',{staticClass:\"menu\"},[_c('div',{staticClass:\"bs-title\"},[_c('img',{attrs:{\"src\":require(\"@/assets/ui/logo_black_solid.svg\")}})]),_c('div',{staticClass:\"columns game-options\"},[_c('div',{staticClass:\"column\"},[_c('div',{staticClass:\"game-option\",on:{\"click\":_vm.startBattleMode}},[_c('h4',[_vm._v(\"BATTLE MODE\")]),_c('p',[_vm._v(\"A three-round match between two witty teams for one unholy prize.\")])]),_c('div',{staticClass:\"game-option\",on:{\"click\":_vm.startPartyMode}},[_c('h4',[_vm._v(\"PARTY MODE\")]),_c('p',[_vm._v(\"A never-ending series of BattleSlides.\")])])]),_c('div',{staticClass:\"column\"},[_c('div',{staticClass:\"files\"},[_c('h4',[_vm._v(\"ADD CUSTOM CONTENT\")]),_c('p',[_vm._v(\"Simply go to cutt.ly/battleslides!\")]),_c('br'),_c('p',[_vm._v(\"WARNING: Any content you add* will probably be seen by all the jokers playing this game with you :)\")]),_c('div',{staticClass:\"columns files-status\"},[_c('div',{staticClass:\"column\"},[_c('div',[_vm._v(\"Audience: \"+_vm._s(_vm.AudienceCount))])]),_c('div',{staticClass:\"column\"},[_c('div',[_vm._v(\"Items Received: \"+_vm._s(_vm.FilesReceived))])])])])])])]):_vm._e()]),_c('transition',{attrs:{\"name\":\"slide\"}},[(_vm.ShowWelcome)?_c('div',{staticClass:\"welcome\"},[_c('img',{attrs:{\"src\":require(\"@/assets/images/welcome_image.png\")}})]):_vm._e()])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"main\">\n    <!-- <transition name=\"fade\">\n      <div v-if=\"ShowOverlay\" class=\"white-overlay\"></div>\n    </transition> -->\n   \n    <video id=\"vidIntro\" src=\"@/assets/animations/presentation_room.mp4\" preload=\"true\" autoplay loop />\n\n    <transition name=\"slide\">\n    <div class=\"menu\" v-if=\"ShowMenu\">\n      <div class=\"bs-title\"><img src=\"@/assets/ui/logo_black_solid.svg\" /></div>\n    \n      <div class=\"columns game-options\">\n        <div class=\"column\">\n          <div @click=\"startBattleMode\" class=\"game-option\">\n            <h4>BATTLE MODE</h4>\n            <p>A three-round match between two witty teams for one unholy prize.</p>\n          </div>\n          <div @click=\"startPartyMode\" class=\"game-option\">\n            <h4>PARTY MODE</h4>\n            <p>A never-ending series of BattleSlides.</p>\n          </div>\n        </div>\n\n        <div class=\"column\">\n          <div class=\"files\">\n          <h4>ADD CUSTOM CONTENT</h4>\n          <p>Simply go to cutt.ly/battleslides!</p>\n          <br>\n          <p>WARNING: Any content you add* will probably be seen by all the jokers playing this game with you :)</p>\n          \n          <div class=\"columns files-status\">\n            <div class=\"column\">\n              <div>Audience: {{AudienceCount}}</div>\n            </div>\n            <div class=\"column\">\n              <div>Items Received: {{FilesReceived}}</div>\n            </div>\n          </div>\n        </div>\n        </div>\n        \n      </div>\n      \n    </div> \n    </transition>\n\n    <transition name=\"slide\">\n      <div class=\"welcome\" v-if=\"ShowWelcome\">\n        <img src=\"@/assets/images/welcome_image.png\" />\n      </div>\n    </transition>\n\n  </div>\n</template>\n\n<script>\nimport setGameMode, { GAME_MODE_BATTLE, GAME_MODE_PARTY, GameSettings } from \"../common/GameSettings\";\nimport router from '../router';\nimport {FileSelector} from \"../common/FileSelector\";\n\nexport default {\n  name: \"title-screen\",\n  data: () => {\n    return {\n      FilesReceived: 0,\n      AudienceCount: 0,\n      ShowOverlay: true,\n      ShowMenu: true,\n      ShowWelcome: false\n    }\n  },\n  mounted() {\n\n    window.getExternalIceServers = true;\n    const vue = this;\n    this.ShowOverlay = false;\n\n    GameSettings.CleanSlideData();\n\n    window.onerror = console.error = function() {\n            var error = JSON.stringify(arguments);\n            if(error.indexOf('Blocked a frame with origin') !== -1) {\n                return;\n            }\n            alert('Error:\\n' + error);\n        };\n        function setupFileTransfer() {\n          joinARoom(\"battleslides-1234\");\n        }\n        \n        var connection;\n        function joinARoom(roomId) {\n          var lastSelectedFile;\n          var room_id = '';\n          // 60k -- assuming receiving client is chrome\n          var chunk_size = 60 * 1000;\n          function setupWebRTCConnection() {\n              if (connection) {\n                  return;\n              }\n              const RTCMultiConnection = require('rtcmulticonnection');\n              const fbr = require(\"fbr\");\n  \n              connection = new RTCMultiConnection();\n              // to make sure, \"connection-reconnect\" doesn't sends files again\n              connection.fileReceived = {};\n              // by default, socket.io server is assumed to be deployed on your own URL\n              //connection.socketURL = '/';\n              // comment-out below line if you do not have your own socket.io server\n              connection.socketURL = 'https://rtcmulticonnection.herokuapp.com:443/';\n              connection.socketMessageEvent = 'file-sharing-demo';\n              connection.chunkSize = chunk_size;\n              connection.sdpConstraints.mandatory = {\n                  OfferToReceiveAudio: false,\n                  OfferToReceiveVideo: false\n              };\n              connection.enableFileSharing = true;\n              if (room_id && room_id.length) {\n                  connection.userid = room_id;\n              }\n              connection.channel = connection.sessionid = roomId;\n              connection.session = {\n                  data: true,\n                  // oneway: true --- to make it one-to-many\n              };\n              // https://www.rtcmulticonnection.org/docs/iceServers/\n              // use your own TURN-server here!\n              connection.iceServers = [{\n                  'urls': [\n                      'stun:stun.l.google.com:19302',\n                      'stun:stun1.l.google.com:19302',\n                      'stun:stun2.l.google.com:19302',\n                      'stun:stun.l.google.com:19302?transport=udp',\n                  ]\n              }];\n              //connection.filesContainer = logsDiv;\n              connection.connectedWith = {};\n              connection.onmessage = function(event) {\n                  if(event.data.doYouWannaReceiveThisFile) {\n                      if(!connection.fileReceived[event.data.fileName]) {\n                          connection.send({\n                              yesIWannaReceive:true,\n                              fileName: event.data.fileName\n                          });\n                      }\n                  }\n                  if(event.data.yesIWannaReceive && !!lastSelectedFile) {\n                      connection.shareFile(lastSelectedFile, event.userid);\n                  }\n              };\n              connection.onopen = function(e) {\n                  try {\n                      chrome.power.requestKeepAwake('display');\n                  }\n                  catch(e) {}\n                  if (connection.connectedWith[e.userid]) return;\n                  connection.connectedWith[e.userid] = true;\n                  var message = '<b>' + e.userid + '</b><br>is connected.';\n                  console.log(message);\n                  if (!lastSelectedFile) return;\n                  // already shared the file\n                  var file = lastSelectedFile;\n                  setTimeout(function() {\n                      console.log('Sharing file<br><b>' + file.name + '</b><br>Size: <b>' + bytesToSize(file.size) + '<b><br>With <b>' + connection.getAllParticipants().length + '</b> users');\n                      connection.send({\n                          doYouWannaReceiveThisFile: true,\n                          fileName: file.size + file.name\n                      });\n                  }, 500);\n              };\n              connection.onclose = function(e) {\n                  incrementOrDecrementUsers();\n                  if (connection.connectedWith[e.userid]) return;\n                  console.log('Data connection has been closed between you and <b>' + e.userid + '</b>. Re-Connecting..');\n                  connection.join(roomId);\n              };\n              connection.onerror = function(e) {\n                  if (connection.connectedWith[e.userid]) return;\n                  console.log('Data connection failed. between you and <b>' + e.userid + '</b>. Retrying..');\n              };\n              setFileProgressHandlers(connection);\n              connection.onUserStatusChanged = function(user) {\n                  incrementOrDecrementUsers();\n              };\n              connection.onleave = function(user) {\n                  user.status = 'offline';\n                  connection.onUserStatusChanged(user);\n                  incrementOrDecrementUsers();\n              };\n              var message = 'Connecting room:<br><b>' + connection.channel + '</b>';\n              console.log(message);\n              connection.openOrJoin(connection.channel, function(isRoomExist, roomid) {\n                  var message = 'Successfully connected to room: <b>' + roomid + '</b><hr>Other users can join you on iPhone/Android using \"' + roomid + '\" or desktop (Windows/MacOSX/Ubuntu) users can join using this (secure/private) URL: <a href=\"./file-sharing.html#' + roomid + '\" target=\"_blank\">file-sharing.html#' + roomid + '</a>';\n                  // if (isRoomEists) { }\n                  console.log(message);\n                  connection.getSocket(function(socket) {\n                    socket.on('disconnect', function() {\n                      console.log('Seems disconnected.');\n                    });\n                    socket.on('connect', function() {\n                      location.reload();\n                    });\n                    socket.on('error', function() {\n                      location.reload();\n                    });\n                  });\n                  window.addEventListener('offline', function() {\n                    console.log('Seems disconnected.');\n                  }, false);\n              });\n              window.connection = connection;\n          }\n          function setFileProgressHandlers(connection) {\n              //var progressHelper = {};\n              // www.RTCMultiConnection.org/docs/onFileStart/\n              connection.onFileStart = function(file) {\n                  if (connection.fileReceived[file.size + file.name]) return;\n                  let message = '';\n                  if (file.userid == connection.userid) {\n                      message += 'Sharing with:' + file.remoteUserId;\n                  } else {\n                      message += 'Receiving from:' + file.userid;\n                  }\n                  // message += '<br><b>' + file.name + '</b>.';\n                  // message += '<br>Size: <b>' + bytesToSize(file.size) + '</b>';\n                  // message += '<br><label>0%</label> <progress></progress>';\n                  // if(file.userid !== connection.userid) {\n                  //     message += '<br><button id=\"resend\">Receive Again?</button>';\n                  // }\n                  // if (!file.remoteUserId) {\n                  //     progressHelper[file.uuid] = {\n                  //         div: div,\n                  //         progress: div.querySelector('progress'),\n                  //         label: div.querySelector('label')\n                  //     };\n                  //     progressHelper[file.uuid].progress.max = file.maxChunks;\n                  //     return;\n                  // }\n                  // if (!progressHelper[file.uuid]) {\n                  //     progressHelper[file.uuid] = {};\n                  // }\n                  // progressHelper[file.uuid][file.remoteUserId] = {\n                  //     div: div,\n                  //     progress: div.querySelector('progress'),\n                  //     label: div.querySelector('label')\n                  // };\n                  // progressHelper[file.uuid][file.remoteUserId].progress.max = file.maxChunks;\n              };\n              // www.RTCMultiConnection.org/docs/onFileProgress/\n              connection.onFileProgress = function(chunk) {\n                  if (connection.fileReceived[chunk.size + chunk.name]) return;\n                  // var helper = progressHelper[chunk.uuid];\n                  // if (!helper) {\n                  //     return;\n                  // }\n                  // if (chunk.remoteUserId) {\n                  //     helper = progressHelper[chunk.uuid][chunk.remoteUserId];\n                  //     if (!helper) {\n                  //         return;\n                  //     }\n                  // }\n                  // helper.progress.value = chunk.currentPosition || chunk.maxChunks || helper.progress.max;\n                  // updateLabel(helper.progress, helper.label);\n              };\n              // www.RTCMultiConnection.org/docs/onFileEnd/\n              connection.onFileEnd = function(file) {\n                if (connection.fileReceived[file.size + file.name]) return;\n                if (file.remoteUserId === connection.userid) {\n                    connection.fileReceived[file.size + file.name] = file;\n                    var message = 'Successfully received file';\n                    message += '<br><b>' + file.name + '</b>.';\n                    message += '<br>Size: <b>' + bytesToSize(file.size) + '</b>.';\n                    message += '<br><a href=\"' + file.url + '\" target=\"_blank\" download=\"' + file.name + '\">Download</a>';\n                    console.log(message);\n                    GameSettings.Images.push(file);\n                    console.log(JSON.stringify(GameSettings));\n                    vue.FilesReceived = GameSettings.Images.length;\n                }\n              };\n          }\n          function bytesToSize(bytes) {\n              var k = 1000;\n              var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n              if (bytes === 0) {\n                  return '0 Bytes';\n              }\n              var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);\n              return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\n          }\n          function incrementOrDecrementUsers() {\n            vue.AudienceCount = connection ? connection.getAllParticipants().length : 0;\n          }\n          window.onerror = console.error = function() {\n              var error = JSON.stringify(arguments);\n              if(error.indexOf('Blocked a frame with origin') !== -1) {\n                return;\n              }\n              console.log('Error:<br>' + error);\n          };\n          setupWebRTCConnection();\n      }\n      setupFileTransfer();\n  },\n  methods: {\n    startBattleMode()\n    {\n      document.body.requestFullscreen();\n      GameSettings.SetupBattleModeGame();\n      \n      this.ShowMenu = false;\n      this.ShowWelcome = true;\n      setTimeout(() => {router.push(\"intro-screen\")}, 1500);\n    },\n    startPartyMode()\n    {\n      GameSettings.SetupPartyModeGame();\n      router.push(\"intro-screen\");\n    },\n    setFilesReceived(numFiles)\n    {\n      this.FilesReceived = numFiles;\n    }\n  }\n}\n</script>\n\n\n\n<style>\n  body, html {\n    background: rgb(255,255,255); /* Old browsers */\n    background: -moz-linear-gradient(top, rgba(255,255,255,1) 0%, rgba(243,243,243,1) 62%); /* FF3.6-15 */\n    background: -webkit-linear-gradient(top, rgba(255,255,255,1) 0%,rgba(243,243,243,1) 62%); /* Chrome10-25,Safari5.1-6 */\n    background: linear-gradient(to bottom, rgba(255,255,255,1) 0%,rgba(243,243,243,1) 62%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\n    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#f3f3f3',GradientType=0 ); /* IE6-9 */\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  }\n\n  .main {\n    margin: 100px;\n  }\n\n  .main video\n  {\n    width: 100vw;\n    position: absolute;\n    left: 0px;\n    top: 50%;\n    -ms-transform: translateY(-50%);\n    transform: translateY(-50%);\n  }\n\n  .menu, .welcome\n  {\n    position: absolute;\n    z-index: 100;\n    left: 31%;\n    top: 8%;\n    width: 55%;\n    font-family: 'Courier New', Courier, monospace;\n    font-weight: 600;\n  }\n\n  .menu h4 {\n    font-weight: 600;\n  }\n\n  .bs-title {\n    position: relative;\n    margin: 0 auto;\n    width: 60%;\n  }\n\n\n  .game-option\n  {\n    margin-top: 12%;\n    cursor: pointer;\n    border: 3px dashed #000000;\n    text-align: left;\n    padding: 5%;\n  }\n  .game-option h4 {\n    font-size: 40px;\n    pointer-events: none;\n  }\n  .game-option p {\n    font-size: 22px;\n    pointer-events: none;\n  }\n  .game-option:hover{\n    background-color: rgba(255, 255, 255, 1)\n  }\n\n  .files\n  {\n    padding: 36px;\n    max-width: 550px;\n    text-align: left;\n    font-size: 18px;\n    margin-top: 20%;\n  }\n  .files h4{\n    font-size: 40px;\n  }\n  .files .files-status\n  {\n    margin-top: 20px;\n  }\n\n  .white-overlay{\n    position: absolute;\n    left:0;\n    top:0;\n    width: 100%;\n    height: 100%;\n    background-color: white;\n    z-index: 9999;\n  }\n\n\n  .slide-enter-active {\n    transform: translateX(5%);\n    opacity: 0;\n    animation: slide-in .5s .6s;\n  }\n  .slide-leave-active {\n    animation: slide-in .5s reverse;\n  }\n  @keyframes slide-in {\n    0% {\n      opacity: 0;\n      transform: translateX(-5%);\n    }\n    100% {\n      opacity: 1;\n      transform: translateX(0%);\n    }\n  }\n/* \n  .fade-enter-active, .fade-leave-active {\n  transition: opacity 0.7s ease-out;\n}\n\n.fade-enter, .fade-leave-to {\n  opacity: 0;\n} */\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TitleScreen.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TitleScreen.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TitleScreen.vue?vue&type=template&id=b799c528&\"\nimport script from \"./TitleScreen.vue?vue&type=script&lang=js&\"\nexport * from \"./TitleScreen.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TitleScreen.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"sourceRoot":""}